/*
 * File: Scripts/AM/view/mapping/LiteralForm.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.mapping.LiteralForm', {
  extend: 'Ext.form.Panel',
  alias: 'widget.literalform',

  height: 85,
  width: 481,
  bodyPadding: 10,
  method: 'post',
  url: 'mapping/mapconstant',

  initComponent: function() {
    var me = this;

    me.initialConfig = Ext.apply({
      method: 'post',
      url: 'mapping/mapconstant'
    }, me.initialConfig);

    Ext.applyIf(me, {
      items: [
        {
          xtype: 'textfield',
          anchor: '100%',
          fieldLabel: 'Value',
          name: 'constantValue',
          allowBlank: false
        },
        {
          xtype: 'hiddenfield',
          name: 'contextName'
        },
        {
          xtype: 'hiddenfield',
          name: 'mappingNode'
        },
        {
          xtype: 'hiddenfield',
          name: 'endpoint'
        },
        {
          xtype: 'hiddenfield',
          name: 'graph'
        },
        {
          xtype: 'hiddenfield',
          name: 'classId'
        },
        {
          xtype: 'hiddenfield',
          name: 'index'
        },
        {
          xtype: 'hiddenfield',
          name: 'classIndex'
        }
      ],
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'bottom',
          items: [
            {
              xtype: 'tbfill'
            },
            {
              xtype: 'button',
              handler: function(button, event) {
                me.onSave();
              },
              text: 'Ok'
            },
            {
              xtype: 'button',
              handler: function(button, event) {
                me.onReset();
              },
              text: 'Cancel'
            }
          ]
        }
      ]
    });

    me.callParent(arguments);
  },

  onReset: function() {

    var me = this;
    var win = me.up('window');
    me.getForm().reset();
    win.destroy();
  },

  onSave: function() {

    var me = this;
    var win = me.up('window');
    var form = me.getForm();
    var message;
    if(me.getForm().isValid()) {
      me.submit({
        waitMsg: 'Saving Data...',
        success: function (result, request) {
          win.fireEvent('save', me);
        },
        failure: function (result, request) {
          message = 'Failed to Map Constant to RoleMap';
          showDialog(400, 100, 'Warning', message, Ext.Msg.OK, null);
        }
      });
    } else {
      message = 'Form is not complete. Cannot save record.';
      showDialog(400, 100, 'Warning', message, Ext.Msg.OK, null);   
    }

  }

});