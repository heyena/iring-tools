//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Xml.Xsl;
using log4net;
using org.iringtools.library;
using org.iringtools.utility;

namespace org.iringtools.adapter.proj_CrackingComplex.SPPID
{
  [DataContract(Name = "EQUIPMENT", Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#" )]
  [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
  public class EQUIPMENT : DataTransferObject
  {
    private static readonly ILog _logger = LogManager.GetLogger(typeof(EQUIPMENT));
    
    [DataContract(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
    [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
    public class TemplateThermalInsulationContainment2
    {
      [DataContract(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
      [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
      public class ClassTHERMALINSULATIONMATERIAL
      {
        [DataMember(EmitDefaultValue=false)]
        [XmlIgnore]
        public string Identifier { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public String tpl_NominalThickness3_tpl_hasScale { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public String tpl_NominalThickness3_tpl_hasType { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public Double tpl_NominalThickness3_tpl_valValue { get; set; }
      }
      
      [DataMember(Name = "tpl_container_rdl_THERMALINSULATIONMATERIAL", EmitDefaultValue = false)]
      [XmlIgnore]
      public ClassTHERMALINSULATIONMATERIAL tpl_container_rdl_THERMALINSULATIONMATERIAL { get; set; }
    }
    
    [DataMember(EmitDefaultValue = false)]
    [XmlIgnore]
    public TemplateThermalInsulationContainment2 tpl_ThermalInsulationContainment2 { get; set; }
    
    public EQUIPMENT(string classId, string graphName, string identifier) : base(classId, graphName)
    {
      _properties.Add(new DTOProperty(@"", @"tpl:IdentificationByTag0.tpl:hasIdentificationType", @"<http://rdl.rdlfacade.org/data#R40471041754>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"ItemTag", @"tpl:IdentificationByTag0.tpl:valIdentifier", null, typeof(String), true, true));
      _properties.Add(new DTOProperty(@"Description", @"tpl:ClassifiedDescription1.tpl:description", null, typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ClassifiedDescription1.tpl:descriptionType", @"<http://rdl.rdlfacade.org/data#R11498442042>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:hasScale", @"<http://rdl.rdlfacade.org/data#R34755432270>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:hasType", @"<http://rdl.rdlfacade.org/data#R75626151549>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"InsulThick", @"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:valValue", null, typeof(Double), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment2.tpl:containmentType", @"<http://rdl.rdlfacade.org/data#R12086239421>", typeof(String), false, false));
      Identifier = identifier;
      ClassId = classId;
    }
    
    public EQUIPMENT(Bechtel.IntergraphDataLayer.SPPID.Equipment dataObject) : this("http://rdl.rdlfacade.org/data#R20981279868", "EQUIPMENT", null, dataObject) {}
    
    public EQUIPMENT(string classId, string graphName, string identifier, Bechtel.IntergraphDataLayer.SPPID.Equipment dataObject) : this(classId, graphName, identifier)
    {
      if (dataObject != null)
      {
        tpl_IdentificationByTag0_tpl_valIdentifier = Convert.ToString(dataObject.ItemTag);
        tpl_ClassifiedDescription1_tpl_description = Convert.ToString(dataObject.Description);
        tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_valValue = Convert.ToDouble(dataObject.InsulThick);
      }
      tpl_ThermalInsulationContainment2 = new TemplateThermalInsulationContainment2();
      tpl_ThermalInsulationContainment2.tpl_container_rdl_THERMALINSULATIONMATERIAL = new TemplateThermalInsulationContainment2.ClassTHERMALINSULATIONMATERIAL();
      tpl_ThermalInsulationContainment2.tpl_container_rdl_THERMALINSULATIONMATERIAL.Identifier = ((GetPropertyValueByInternalName("ItemTag") != null) ? GetPropertyValueByInternalName("ItemTag").ToString() : "");
      tpl_ThermalInsulationContainment2.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness3_tpl_hasScale = Convert.ToString(tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_hasScale);
      tpl_ThermalInsulationContainment2.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness3_tpl_hasType = Convert.ToString(tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_hasType);
      tpl_ThermalInsulationContainment2.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness3_tpl_valValue = Convert.ToDouble(tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_valValue);
      _dataObject = dataObject;
    }
    
    public EQUIPMENT() : this("http://rdl.rdlfacade.org/data#R20981279868", "EQUIPMENT", null) {}
    
    [DataMember(Name = "tpl_IdentificationByTag0_tpl_hasIdentificationType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag0_tpl_hasIdentificationType
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag0.tpl:hasIdentificationType");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag0.tpl:hasIdentificationType", value);
      }
    }
    
    [DataMember(Name = "tpl_IdentificationByTag0_tpl_valIdentifier", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag0_tpl_valIdentifier
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag0.tpl:valIdentifier");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag0.tpl:valIdentifier", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription1_tpl_description", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription1_tpl_description
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription1.tpl:description");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription1.tpl:description", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription1_tpl_descriptionType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription1_tpl_descriptionType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription1.tpl:descriptionType");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription1.tpl:descriptionType", value);
      }
    }
    
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_hasScale
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:hasScale");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:hasScale", value);
      }
    }
    
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_hasType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:hasType");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:hasType", value);
      }
    }
    
    [XmlIgnore]
    public global::System.Nullable<Double> tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_valValue
    {
      get
      {
        return (global::System.Nullable<Double>)GetPropertyValue("tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:valValue");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness3.tpl:valValue", value);
      }
    }
    
    [DataMember(Name = "tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_ThermalInsulationContainment2_tpl_containmentType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_ThermalInsulationContainment2_tpl_containmentType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment2.tpl:containmentType");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment2.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment2.tpl:containmentType", value);
      }
    }
    
    public override object GetDataObject()
    {
      if (_dataObject == null)
      {
        _dataObject = new Bechtel.IntergraphDataLayer.SPPID.Equipment();
        ((Bechtel.IntergraphDataLayer.SPPID.Equipment)_dataObject).ItemTag = Convert.ToString(this.Identifier);
      }
      ((Bechtel.IntergraphDataLayer.SPPID.Equipment)_dataObject).Description = Convert.ToString(this.tpl_ClassifiedDescription1_tpl_description);
      ((Bechtel.IntergraphDataLayer.SPPID.Equipment)_dataObject).InsulThick = Convert.ToString(this.tpl_ThermalInsulationContainment2_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness3_tpl_valValue);
      return _dataObject;
    }
    
    public override string Serialize()
    {
      return Utility.SerializeDataContract<EQUIPMENT>(this);
    }
    
    public override void Write(string path)
    {
      Utility.Write<EQUIPMENT>(this, path);
    }
    
    public override T Transform<T>(string xmlPath, string stylesheetUri, string mappingUri, bool useDataContractDeserializer)
    {
      string dtoPath = xmlPath + this.GraphName + ".xml";
      Mapping mapping = Utility.Read<Mapping>(mappingUri, false);
      List<EQUIPMENT> list = new List<EQUIPMENT> { this };
      Utility.Write<List<EQUIPMENT>>(list, dtoPath);
      XsltArgumentList xsltArgumentList = new XsltArgumentList();
      xsltArgumentList.AddParam("dtoFilename", String.Empty, dtoPath);
      return Utility.Transform<Mapping, T>(mapping, stylesheetUri, xsltArgumentList, false, useDataContractDeserializer);
    }
  }
  
  [DataContract(Name = "INSTRUMENT", Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#" )]
  [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
  public class INSTRUMENT : DataTransferObject
  {
    private static readonly ILog _logger = LogManager.GetLogger(typeof(INSTRUMENT));
    
    [DataContract(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
    [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
    public class TemplateThermalInsulationContainment6
    {
      [DataContract(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
      [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
      public class ClassTHERMALINSULATIONMATERIAL
      {
        [DataMember(EmitDefaultValue=false)]
        [XmlIgnore]
        public string Identifier { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public String tpl_NominalThickness7_tpl_hasScale { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public String tpl_NominalThickness7_tpl_hasType { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public Double tpl_NominalThickness7_tpl_valValue { get; set; }
      }
      
      [DataMember(Name = "tpl_container_rdl_THERMALINSULATIONMATERIAL", EmitDefaultValue = false)]
      [XmlIgnore]
      public ClassTHERMALINSULATIONMATERIAL tpl_container_rdl_THERMALINSULATIONMATERIAL { get; set; }
    }
    
    [DataMember(EmitDefaultValue = false)]
    [XmlIgnore]
    public TemplateThermalInsulationContainment6 tpl_ThermalInsulationContainment6 { get; set; }
    
    public INSTRUMENT(string classId, string graphName, string identifier) : base(classId, graphName)
    {
      _properties.Add(new DTOProperty(@"", @"tpl:IdentificationByTag4.tpl:hasIdentificationType", @"<http://rdl.rdlfacade.org/data#R40471041754>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"ItemTag", @"tpl:IdentificationByTag4.tpl:valIdentifier", null, typeof(String), true, true));
      _properties.Add(new DTOProperty(@"Description", @"tpl:ClassifiedDescription5.tpl:description", null, typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ClassifiedDescription5.tpl:descriptionType", @"<http://rdl.rdlfacade.org/data#R11498442042>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:hasScale", @"<http://rdl.rdlfacade.org/data#R34755432270>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:hasType", @"<http://rdl.rdlfacade.org/data#R75626151549>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"InsulThick", @"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:valValue", null, typeof(Double), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment6.tpl:containmentType", @"<http://rdl.rdlfacade.org/data#R12086239421>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:NominalDiameter8.tpl:hasScale", @"<http://rdl.rdlfacade.org/data#R34755432270>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:NominalDiameter8.tpl:hasType", @"<http://rdl.rdlfacade.org/data#R17622148043>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"NominalDiameter", @"tpl:NominalDiameter8.tpl:valValue", null, typeof(Double), false, false));
      Identifier = identifier;
      ClassId = classId;
    }
    
    public INSTRUMENT(Bechtel.IntergraphDataLayer.SPPID.Instrument dataObject) : this("http://rdl.rdlfacade.org/data#R98505918404", "INSTRUMENT", null, dataObject) {}
    
    public INSTRUMENT(string classId, string graphName, string identifier, Bechtel.IntergraphDataLayer.SPPID.Instrument dataObject) : this(classId, graphName, identifier)
    {
      if (dataObject != null)
      {
        tpl_IdentificationByTag4_tpl_valIdentifier = Convert.ToString(dataObject.ItemTag);
        tpl_ClassifiedDescription5_tpl_description = Convert.ToString(dataObject.Description);
        tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_valValue = Convert.ToDouble(dataObject.InsulThick);
        tpl_NominalDiameter8_tpl_valValue = Convert.ToDouble(dataObject.NominalDiameter);
      }
      tpl_ThermalInsulationContainment6 = new TemplateThermalInsulationContainment6();
      tpl_ThermalInsulationContainment6.tpl_container_rdl_THERMALINSULATIONMATERIAL = new TemplateThermalInsulationContainment6.ClassTHERMALINSULATIONMATERIAL();
      tpl_ThermalInsulationContainment6.tpl_container_rdl_THERMALINSULATIONMATERIAL.Identifier = ((GetPropertyValueByInternalName("ItemTag") != null) ? GetPropertyValueByInternalName("ItemTag").ToString() : "");
      tpl_ThermalInsulationContainment6.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness7_tpl_hasScale = Convert.ToString(tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_hasScale);
      tpl_ThermalInsulationContainment6.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness7_tpl_hasType = Convert.ToString(tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_hasType);
      tpl_ThermalInsulationContainment6.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness7_tpl_valValue = Convert.ToDouble(tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_valValue);
      _dataObject = dataObject;
    }
    
    public INSTRUMENT() : this("http://rdl.rdlfacade.org/data#R98505918404", "INSTRUMENT", null) {}
    
    [DataMember(Name = "tpl_IdentificationByTag4_tpl_hasIdentificationType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag4_tpl_hasIdentificationType
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag4.tpl:hasIdentificationType");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag4.tpl:hasIdentificationType", value);
      }
    }
    
    [DataMember(Name = "tpl_IdentificationByTag4_tpl_valIdentifier", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag4_tpl_valIdentifier
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag4.tpl:valIdentifier");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag4.tpl:valIdentifier", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription5_tpl_description", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription5_tpl_description
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription5.tpl:description");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription5.tpl:description", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription5_tpl_descriptionType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription5_tpl_descriptionType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription5.tpl:descriptionType");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription5.tpl:descriptionType", value);
      }
    }
    
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_hasScale
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:hasScale");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:hasScale", value);
      }
    }
    
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_hasType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:hasType");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:hasType", value);
      }
    }
    
    [XmlIgnore]
    public global::System.Nullable<Double> tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_valValue
    {
      get
      {
        return (global::System.Nullable<Double>)GetPropertyValue("tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:valValue");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness7.tpl:valValue", value);
      }
    }
    
    [DataMember(Name = "tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_ThermalInsulationContainment6_tpl_containmentType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_ThermalInsulationContainment6_tpl_containmentType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment6.tpl:containmentType");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment6.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment6.tpl:containmentType", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter8_tpl_hasScale", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_NominalDiameter8_tpl_hasScale
    {
      get
      {
        return (String)GetPropertyValue("tpl:NominalDiameter8.tpl:hasScale");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter8.tpl:hasScale", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter8_tpl_hasType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_NominalDiameter8_tpl_hasType
    {
      get
      {
        return (String)GetPropertyValue("tpl:NominalDiameter8.tpl:hasType");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter8.tpl:hasType", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter8_tpl_valValue", EmitDefaultValue = false)]
    [XmlIgnore]
    public global::System.Nullable<Double> tpl_NominalDiameter8_tpl_valValue
    {
      get
      {
        return (global::System.Nullable<Double>)GetPropertyValue("tpl:NominalDiameter8.tpl:valValue");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter8.tpl:valValue", value);
      }
    }
    
    public override object GetDataObject()
    {
      if (_dataObject == null)
      {
        _dataObject = new Bechtel.IntergraphDataLayer.SPPID.Instrument();
        ((Bechtel.IntergraphDataLayer.SPPID.Instrument)_dataObject).ItemTag = Convert.ToString(this.Identifier);
      }
      ((Bechtel.IntergraphDataLayer.SPPID.Instrument)_dataObject).Description = Convert.ToString(this.tpl_ClassifiedDescription5_tpl_description);
      ((Bechtel.IntergraphDataLayer.SPPID.Instrument)_dataObject).InsulThick = Convert.ToString(this.tpl_ThermalInsulationContainment6_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness7_tpl_valValue);
      ((Bechtel.IntergraphDataLayer.SPPID.Instrument)_dataObject).NominalDiameter = Convert.ToString(this.tpl_NominalDiameter8_tpl_valValue);
      return _dataObject;
    }
    
    public override string Serialize()
    {
      return Utility.SerializeDataContract<INSTRUMENT>(this);
    }
    
    public override void Write(string path)
    {
      Utility.Write<INSTRUMENT>(this, path);
    }
    
    public override T Transform<T>(string xmlPath, string stylesheetUri, string mappingUri, bool useDataContractDeserializer)
    {
      string dtoPath = xmlPath + this.GraphName + ".xml";
      Mapping mapping = Utility.Read<Mapping>(mappingUri, false);
      List<INSTRUMENT> list = new List<INSTRUMENT> { this };
      Utility.Write<List<INSTRUMENT>>(list, dtoPath);
      XsltArgumentList xsltArgumentList = new XsltArgumentList();
      xsltArgumentList.AddParam("dtoFilename", String.Empty, dtoPath);
      return Utility.Transform<Mapping, T>(mapping, stylesheetUri, xsltArgumentList, false, useDataContractDeserializer);
    }
  }
  
  [DataContract(Name = "LINE", Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#" )]
  [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
  public class LINE : DataTransferObject
  {
    private static readonly ILog _logger = LogManager.GetLogger(typeof(LINE));
    
    [DataContract(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
    [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
    public class TemplateThermalInsulationContainment11
    {
      [DataContract(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
      [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
      public class ClassTHERMALINSULATIONMATERIAL
      {
        [DataMember(EmitDefaultValue=false)]
        [XmlIgnore]
        public string Identifier { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public String tpl_NominalThickness12_tpl_hasScale { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public String tpl_NominalThickness12_tpl_hasType { get; set; }
        
        [DataMember(EmitDefaultValue = false)]
        public Double tpl_NominalThickness12_tpl_valValue { get; set; }
      }
      
      [DataMember(Name = "tpl_container_rdl_THERMALINSULATIONMATERIAL", EmitDefaultValue = false)]
      [XmlIgnore]
      public ClassTHERMALINSULATIONMATERIAL tpl_container_rdl_THERMALINSULATIONMATERIAL { get; set; }
    }
    
    [DataMember(EmitDefaultValue = false)]
    [XmlIgnore]
    public TemplateThermalInsulationContainment11 tpl_ThermalInsulationContainment11 { get; set; }
    
    public LINE(string classId, string graphName, string identifier) : base(classId, graphName)
    {
      _properties.Add(new DTOProperty(@"", @"tpl:IdentificationByTag9.tpl:hasIdentificationType", @"<http://rdl.rdlfacade.org/data#R40471041754>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"ItemTag", @"tpl:IdentificationByTag9.tpl:valIdentifier", null, typeof(String), true, true));
      _properties.Add(new DTOProperty(@"Description", @"tpl:ClassifiedDescription10.tpl:description", null, typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ClassifiedDescription10.tpl:descriptionType", @"<http://rdl.rdlfacade.org/data#R11498442042>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:hasScale", @"<http://rdl.rdlfacade.org/data#R34755432270>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:hasType", @"<http://rdl.rdlfacade.org/data#R75626151549>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"InsulThick", @"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:valValue", null, typeof(Double), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment11.tpl:containmentType", @"<http://rdl.rdlfacade.org/data#R12086239421>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:NominalDiameter13.tpl:hasScale", @"<http://rdl.rdlfacade.org/data#R34755432270>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:NominalDiameter13.tpl:hasType", @"<http://rdl.rdlfacade.org/data#R17622148043>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"NominalDiameter", @"tpl:NominalDiameter13.tpl:valValue", null, typeof(Double), false, false));
      Identifier = identifier;
      ClassId = classId;
    }
    
    public LINE(Bechtel.IntergraphDataLayer.SPPID.PipeRun dataObject) : this("http://rdl.rdlfacade.org/data#R19192462550", "LINE", null, dataObject) {}
    
    public LINE(string classId, string graphName, string identifier, Bechtel.IntergraphDataLayer.SPPID.PipeRun dataObject) : this(classId, graphName, identifier)
    {
      if (dataObject != null)
      {
        tpl_IdentificationByTag9_tpl_valIdentifier = Convert.ToString(dataObject.ItemTag);
        tpl_ClassifiedDescription10_tpl_description = Convert.ToString(dataObject.Description);
        tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_valValue = Convert.ToDouble(dataObject.InsulThick);
        tpl_NominalDiameter13_tpl_valValue = Convert.ToDouble(dataObject.NominalDiameter);
      }
      tpl_ThermalInsulationContainment11 = new TemplateThermalInsulationContainment11();
      tpl_ThermalInsulationContainment11.tpl_container_rdl_THERMALINSULATIONMATERIAL = new TemplateThermalInsulationContainment11.ClassTHERMALINSULATIONMATERIAL();
      tpl_ThermalInsulationContainment11.tpl_container_rdl_THERMALINSULATIONMATERIAL.Identifier = ((GetPropertyValueByInternalName("ItemTag") != null) ? GetPropertyValueByInternalName("ItemTag").ToString() : "");
      tpl_ThermalInsulationContainment11.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness12_tpl_hasScale = Convert.ToString(tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_hasScale);
      tpl_ThermalInsulationContainment11.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness12_tpl_hasType = Convert.ToString(tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_hasType);
      tpl_ThermalInsulationContainment11.tpl_container_rdl_THERMALINSULATIONMATERIAL.tpl_NominalThickness12_tpl_valValue = Convert.ToDouble(tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_valValue);
      _dataObject = dataObject;
    }
    
    public LINE() : this("http://rdl.rdlfacade.org/data#R19192462550", "LINE", null) {}
    
    [DataMember(Name = "tpl_IdentificationByTag9_tpl_hasIdentificationType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag9_tpl_hasIdentificationType
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag9.tpl:hasIdentificationType");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag9.tpl:hasIdentificationType", value);
      }
    }
    
    [DataMember(Name = "tpl_IdentificationByTag9_tpl_valIdentifier", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag9_tpl_valIdentifier
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag9.tpl:valIdentifier");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag9.tpl:valIdentifier", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription10_tpl_description", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription10_tpl_description
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription10.tpl:description");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription10.tpl:description", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription10_tpl_descriptionType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription10_tpl_descriptionType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription10.tpl:descriptionType");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription10.tpl:descriptionType", value);
      }
    }
    
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_hasScale
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:hasScale");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:hasScale", value);
      }
    }
    
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_hasType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:hasType");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:hasType", value);
      }
    }
    
    [XmlIgnore]
    public global::System.Nullable<Double> tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_valValue
    {
      get
      {
        return (global::System.Nullable<Double>)GetPropertyValue("tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:valValue");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:NominalThickness12.tpl:valValue", value);
      }
    }
    
    [DataMember(Name = "tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_ThermalInsulationContainment11_tpl_containmentType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_ThermalInsulationContainment11_tpl_containmentType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment11.tpl:containmentType");
      }
      set
      {
        SetPropertyValue(@"tpl:ThermalInsulationContainment11.tpl:container.rdl:THERMALINSULATIONMATERIAL.tpl:ThermalInsulationContainment11.tpl:containmentType", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter13_tpl_hasScale", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_NominalDiameter13_tpl_hasScale
    {
      get
      {
        return (String)GetPropertyValue("tpl:NominalDiameter13.tpl:hasScale");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter13.tpl:hasScale", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter13_tpl_hasType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_NominalDiameter13_tpl_hasType
    {
      get
      {
        return (String)GetPropertyValue("tpl:NominalDiameter13.tpl:hasType");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter13.tpl:hasType", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter13_tpl_valValue", EmitDefaultValue = false)]
    [XmlIgnore]
    public global::System.Nullable<Double> tpl_NominalDiameter13_tpl_valValue
    {
      get
      {
        return (global::System.Nullable<Double>)GetPropertyValue("tpl:NominalDiameter13.tpl:valValue");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter13.tpl:valValue", value);
      }
    }
    
    public override object GetDataObject()
    {
      if (_dataObject == null)
      {
        _dataObject = new Bechtel.IntergraphDataLayer.SPPID.PipeRun();
        ((Bechtel.IntergraphDataLayer.SPPID.PipeRun)_dataObject).ItemTag = Convert.ToString(this.Identifier);
      }
      ((Bechtel.IntergraphDataLayer.SPPID.PipeRun)_dataObject).Description = Convert.ToString(this.tpl_ClassifiedDescription10_tpl_description);
      ((Bechtel.IntergraphDataLayer.SPPID.PipeRun)_dataObject).InsulThick = Convert.ToString(this.tpl_ThermalInsulationContainment11_tpl_container_rdl_THERMALINSULATIONMATERIAL_tpl_NominalThickness12_tpl_valValue);
      ((Bechtel.IntergraphDataLayer.SPPID.PipeRun)_dataObject).NominalDiameter = Convert.ToString(this.tpl_NominalDiameter13_tpl_valValue);
      return _dataObject;
    }
    
    public override string Serialize()
    {
      return Utility.SerializeDataContract<LINE>(this);
    }
    
    public override void Write(string path)
    {
      Utility.Write<LINE>(this, path);
    }
    
    public override T Transform<T>(string xmlPath, string stylesheetUri, string mappingUri, bool useDataContractDeserializer)
    {
      string dtoPath = xmlPath + this.GraphName + ".xml";
      Mapping mapping = Utility.Read<Mapping>(mappingUri, false);
      List<LINE> list = new List<LINE> { this };
      Utility.Write<List<LINE>>(list, dtoPath);
      XsltArgumentList xsltArgumentList = new XsltArgumentList();
      xsltArgumentList.AddParam("dtoFilename", String.Empty, dtoPath);
      return Utility.Transform<Mapping, T>(mapping, stylesheetUri, xsltArgumentList, false, useDataContractDeserializer);
    }
  }
  
  [DataContract(Name = "PipingComp", Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#" )]
  [XmlRoot(Namespace = "http://SPPID.iringtools.org/CrackingComplex/data#")]
  public class PipingComp : DataTransferObject
  {
    private static readonly ILog _logger = LogManager.GetLogger(typeof(PipingComp));
    
    public PipingComp(string classId, string graphName, string identifier) : base(classId, graphName)
    {
      _properties.Add(new DTOProperty(@"", @"tpl:IdentificationByTag14.tpl:hasIdentificationType", @"<http://rdl.rdlfacade.org/data#R40471041754>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"ItemTag", @"tpl:IdentificationByTag14.tpl:valIdentifier", null, typeof(String), true, true));
      _properties.Add(new DTOProperty(@"Description", @"tpl:ClassifiedDescription15.tpl:description", null, typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:ClassifiedDescription15.tpl:descriptionType", @"<http://rdl.rdlfacade.org/data#R11498442042>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:NominalDiameter16.tpl:hasScale", @"<http://rdl.rdlfacade.org/data#R34755432270>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"", @"tpl:NominalDiameter16.tpl:hasType", @"<http://rdl.rdlfacade.org/data#R17622148043>", typeof(String), false, false));
      _properties.Add(new DTOProperty(@"NominalDiameter", @"tpl:NominalDiameter16.tpl:valValue", null, typeof(Double), false, false));
      Identifier = identifier;
      ClassId = classId;
    }
    
    public PipingComp(Bechtel.IntergraphDataLayer.SPPID.PipingComp dataObject) : this("http://rdl.rdlfacade.org/data#R65135201747", "PipingComp", null, dataObject) {}
    
    public PipingComp(string classId, string graphName, string identifier, Bechtel.IntergraphDataLayer.SPPID.PipingComp dataObject) : this(classId, graphName, identifier)
    {
      if (dataObject != null)
      {
        tpl_IdentificationByTag14_tpl_valIdentifier = Convert.ToString(dataObject.ItemTag);
        tpl_ClassifiedDescription15_tpl_description = Convert.ToString(dataObject.Description);
        tpl_NominalDiameter16_tpl_valValue = Convert.ToDouble(dataObject.NominalDiameter);
      }
      _dataObject = dataObject;
    }
    
    public PipingComp() : this("http://rdl.rdlfacade.org/data#R65135201747", "PipingComp", null) {}
    
    [DataMember(Name = "tpl_IdentificationByTag14_tpl_hasIdentificationType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag14_tpl_hasIdentificationType
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag14.tpl:hasIdentificationType");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag14.tpl:hasIdentificationType", value);
      }
    }
    
    [DataMember(Name = "tpl_IdentificationByTag14_tpl_valIdentifier", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_IdentificationByTag14_tpl_valIdentifier
    {
      get
      {
        return (String)GetPropertyValue("tpl:IdentificationByTag14.tpl:valIdentifier");
      }
      set
      {
        SetPropertyValue(@"tpl:IdentificationByTag14.tpl:valIdentifier", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription15_tpl_description", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription15_tpl_description
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription15.tpl:description");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription15.tpl:description", value);
      }
    }
    
    [DataMember(Name = "tpl_ClassifiedDescription15_tpl_descriptionType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_ClassifiedDescription15_tpl_descriptionType
    {
      get
      {
        return (String)GetPropertyValue("tpl:ClassifiedDescription15.tpl:descriptionType");
      }
      set
      {
        SetPropertyValue(@"tpl:ClassifiedDescription15.tpl:descriptionType", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter16_tpl_hasScale", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_NominalDiameter16_tpl_hasScale
    {
      get
      {
        return (String)GetPropertyValue("tpl:NominalDiameter16.tpl:hasScale");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter16.tpl:hasScale", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter16_tpl_hasType", EmitDefaultValue = false)]
    [XmlIgnore]
    public String tpl_NominalDiameter16_tpl_hasType
    {
      get
      {
        return (String)GetPropertyValue("tpl:NominalDiameter16.tpl:hasType");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter16.tpl:hasType", value);
      }
    }
    
    [DataMember(Name = "tpl_NominalDiameter16_tpl_valValue", EmitDefaultValue = false)]
    [XmlIgnore]
    public global::System.Nullable<Double> tpl_NominalDiameter16_tpl_valValue
    {
      get
      {
        return (global::System.Nullable<Double>)GetPropertyValue("tpl:NominalDiameter16.tpl:valValue");
      }
      set
      {
        SetPropertyValue(@"tpl:NominalDiameter16.tpl:valValue", value);
      }
    }
    
    public override object GetDataObject()
    {
      if (_dataObject == null)
      {
        _dataObject = new Bechtel.IntergraphDataLayer.SPPID.PipingComp();
        ((Bechtel.IntergraphDataLayer.SPPID.PipingComp)_dataObject).ItemTag = Convert.ToString(this.Identifier);
      }
      ((Bechtel.IntergraphDataLayer.SPPID.PipingComp)_dataObject).Description = Convert.ToString(this.tpl_ClassifiedDescription15_tpl_description);
      ((Bechtel.IntergraphDataLayer.SPPID.PipingComp)_dataObject).NominalDiameter = Convert.ToString(this.tpl_NominalDiameter16_tpl_valValue);
      return _dataObject;
    }
    
    public override string Serialize()
    {
      return Utility.SerializeDataContract<PipingComp>(this);
    }
    
    public override void Write(string path)
    {
      Utility.Write<PipingComp>(this, path);
    }
    
    public override T Transform<T>(string xmlPath, string stylesheetUri, string mappingUri, bool useDataContractDeserializer)
    {
      string dtoPath = xmlPath + this.GraphName + ".xml";
      Mapping mapping = Utility.Read<Mapping>(mappingUri, false);
      List<PipingComp> list = new List<PipingComp> { this };
      Utility.Write<List<PipingComp>>(list, dtoPath);
      XsltArgumentList xsltArgumentList = new XsltArgumentList();
      xsltArgumentList.AddParam("dtoFilename", String.Empty, dtoPath);
      return Utility.Transform<Mapping, T>(mapping, stylesheetUri, xsltArgumentList, false, useDataContractDeserializer);
    }
  }
}
