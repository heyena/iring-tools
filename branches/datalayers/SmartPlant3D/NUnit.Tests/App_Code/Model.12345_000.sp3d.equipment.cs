//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Globalization;
using System.Collections.Generic;
using Iesi.Collections.Generic;
using org.iringtools.library;

namespace org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment
{
    public class CPSmartEquipment : IDataObject
    {
      public virtual String Id {get; set;}
      public virtual String oid
      {
        get {return Id;}
        set {Id = value;}
      }
      public virtual String CPMachinerySystem_oid {get; set;}
      public virtual String CPMachinerySystem_name {get; set;}
      
      org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild _HasEqpAsChild;
      public virtual org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild HasEqpAsChild
      {
        get
        {
          return this._HasEqpAsChild;
        }
        set
        {
          this._HasEqpAsChild = (org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild)value;
        }
      }
      
      public CPSmartEquipment()
      {
        this._HasEqpAsChild = new org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild();
        this.HasEqpAsChild = new org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild();
      }
      
      
      public virtual object GetPropertyValue(string propertyName)
      {
        switch (propertyName)
        {
          case "Id": return Id;
          case "oid": return oid;
          case "CPMachinerySystem_oid": return CPMachinerySystem_oid;
          case "CPMachinerySystem_name": return CPMachinerySystem_name;
          case "HasEqpAsChild_oidOrigin": return _HasEqpAsChild.oidOrigin;
          case "HasEqpAsChild": return HasEqpAsChild;
          default: throw new Exception("Property [" + propertyName + "] does not exist.");
        }
      }
      
      public virtual void SetPropertyValue(string propertyName, object value)
      {
        switch (propertyName)
        {
          case "Id":
            Id = Convert.ToString(value);
            break;
          case "oid":
            oid = Convert.ToString(value);
            break;
          case "CPMachinerySystem_oid":
            CPMachinerySystem_oid = Convert.ToString(value);
            break;
          case "CPMachinerySystem_name":
            CPMachinerySystem_name = Convert.ToString(value);
            break;
          case "HasEqpAsChild_oidOrigin":
            _HasEqpAsChild.oidOrigin = Convert.ToString(value);
            break;
          case "HasEqpAsChild":
            HasEqpAsChild = (org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild)value;
            break;
          default:
            throw new Exception("Property [" + propertyName + "] does not exist.");
        }
      }
    }
  }
  
  namespace org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment
  {
      public class CPMachinerySystem : IDataObject
      {
        public virtual String Id {get; set;}
        public virtual String CPMachinerySystem_oid
        {
          get {return Id;}
          set {Id = value;}
        }
        
        org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild _HasEqpAsChild;
        public virtual org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild HasEqpAsChild
        {
          get
          {
            return this._HasEqpAsChild;
          }
          set
          {
            this._HasEqpAsChild = (org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.HasEqpAsChild)value;
          }
        }
        
        public CPMachinerySystem()
        {
        }
        
        public virtual String CPMachinerySystem_name {get; set;}
        
        public virtual object GetPropertyValue(string propertyName)
        {
          switch (propertyName)
          {
            case "Id": return Id;
            case "CPMachinerySystem_oid": return CPMachinerySystem_oid;
            case "CPMachinerySystem_name": return CPMachinerySystem_name;
            case "oidOrigin": return null;
            case "HasEqpAsChild": return HasEqpAsChild;
            default: throw new Exception("Property [" + propertyName + "] does not exist.");
          }
        }
        
        public virtual void SetPropertyValue(string propertyName, object value)
        {
          switch (propertyName)
          {
          case "Id":
            Id = Convert.ToString(value);
            break;
            case "CPMachinerySystem_oid":
              CPMachinerySystem_oid = Convert.ToString(value);
              break;
            case "CPMachinerySystem_name":
              CPMachinerySystem_name = Convert.ToString(value);
              break;
            default:
              throw new Exception("Property [" + propertyName + "] does not exist.");
          }
        }
      }
    }
    
    namespace org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment
    {
        public class HasEqpAsChild : IDataObject
        {
          public virtual String Id {get; set;}
          public virtual String oidOrigin
          {
            get {return Id;}
            set {Id = value;}
          }
          public virtual String oidDestination {get; set;}
          Iesi.Collections.ISet _CPSmartEquipments;
          
          public virtual Iesi.Collections.ISet CPSmartEquipments
          {
            get
            {
              return this._CPSmartEquipments;
            }
            set
            {
              this._CPSmartEquipments = (Iesi.Collections.ISet)value;
            }
          }
          
          org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.CPMachinerySystem _CPMachinerySystem;
          public virtual org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.CPMachinerySystem CPMachinerySystem
          {
            get
            {
              return this._CPMachinerySystem;
            }
            set
            {
              this._CPMachinerySystem = (org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.CPMachinerySystem)value;
            }
          }
          
          public HasEqpAsChild()
          {
            this._CPSmartEquipments = new Iesi.Collections.HashedSet();
            this.CPSmartEquipments = new Iesi.Collections.HashedSet();
            this._CPMachinerySystem = new org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.CPMachinerySystem();
            this.CPMachinerySystem = new org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.CPMachinerySystem();
          }
          
          
          public virtual object GetPropertyValue(string propertyName)
          {
            switch (propertyName)
            {
              case "Id": return Id;
              case "oidOrigin": return oidOrigin;
              case "oidDestination": return oidDestination;
              case "CPMachinerySystem": return _CPMachinerySystem;
              default: throw new Exception("Property [" + propertyName + "] does not exist.");
            }
          }
          
          public virtual void SetPropertyValue(string propertyName, object value)
          {
            switch (propertyName)
            {
          case "Id":
            Id = Convert.ToString(value);
            break;
              case "oidOrigin":
                oidOrigin = Convert.ToString(value);
                break;
              case "oidDestination":
                oidDestination = Convert.ToString(value);
                break;
              case "CPMachinerySystem":
                CPMachinerySystem = (org.iringtools.adapter.datalayer.proj_12345_000.sp3d.equipment.CPMachinerySystem)value;
                break;
              default:
                throw new Exception("Property [" + propertyName + "] does not exist.");
            }
          }
        }
      }
