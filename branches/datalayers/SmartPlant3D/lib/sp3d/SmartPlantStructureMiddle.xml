<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SmartPlantStructureMiddle</name>
    </assembly>
    <members>
        <member name="T:Ingr.SP3D.Structure.Middle.WallPart">
            <summary>
            WallPart class is a wrapper for the COM WallPart class. This class represents
            the real physical part in the model. Geometry is represented by a solid.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Wall">
            <summary>
            Wall abstract class is the base class for all classes belonging to the wall group. It provides
            generalization of all entities supporting plate-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Establishes the child relationship between this object and the child, given a system child.
            </summary>
            <param name="oChild"> A child to which a parent and child relationship should be created. </param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Create a WallSystem - oWallSys1 with its constructor.
            Dim oChild As ISystemChild 
            oWallSys1.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            'Create wall system or wall part with its constructor.
            oWallSystem.SetUserDefinedName("Profile System")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the wall system.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null input argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure. </exception>
            <example>This is an example of the Transform method.
            <code>
            'oWalSys is a WallSystem object.
            Dim oMatrix As New Matrix4X4()
            oMatrix.SetIndexValue(12, 10)
            'Translate by 10m.
            oWallSys.Transform(oMatrix)
            </code>
            </example>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Wall.m_oWBSHierarchyHelper">
            <summary>
            Collection of WBS parents of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connectable ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type. </param>
            <returns> A read-only collection of IPort objects. </returns>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the GetConnectablePorts method.
            <code>
            'oWalPart is a WallPart object from the wall system.
            Dim oConnectablePorts As ReadOnlyCollection(Of IPort)
            oConnectablePorts = oWallPart.GetConnectablePorts(PortType.All)
            </code>
            </example>            
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type. </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the GetConnectedPorts method.
            <code>
            'oWalPart is a WallPart object from the wall system.
            Dim oConnectedPorts As ReadOnlyCollection(Of IPort)
            oConnectedPorts = oWallPart.GetConnectedPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type. </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the GetPorts method.
            <code>
            'oWalPart is a WallPart object from the wall system.
            Dim oPorts As ReadOnlyCollection(Of IPort)
            oPorts = oWallPart.GetPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Wall.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="oConnectable"> A connectable object (IConnectable). </param>
            <param name="oConnectionEnum"> A read-only collection of connection objects (IConnection). </param>
            <returns> True if the object is connected; otherwise False. </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Create a WallSystem object - oWallSys1
            Dim oConnectable As IConnectable
            'Instantiate oConnectable with a connectable object to wall system.
            Dim oConnectionEnum As ReadOnlyCollection(Of IConnection)
            Dim bIsConnectedTo As Boolean = oWallSys1.IsConnectedTo(oConnectable, oConnectionEnum)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.BoundaryOffset">
            <summary>
            Gets or sets the boundary offset on the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WallType">
            <summary>
            Gets or sets the catalog part for the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.MaximumHeight">
            <summary>
            Gets or sets the wall maximum height.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CardinalPoint">
            <summary>
            Gets or sets the cardinal point for the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Reflect">
            <summary>
            Gets or sets the reflect flag on the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.VerticalOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.HorizontalOffset">
            <summary>
            Gets or sets the horizontal offset.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Angle">
            <summary>
            Gets or sets the angle on the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WallComposition">
            <summary>
            Gets or sets the wall composition catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CompositionLayers">
            <summary>
            Gets the collection of layers constituting the current wall composition. 
            Note that the returned object type is Layer, which is the model occurrence 
            for the current wall, not the catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.ReferenceLayer">
            <summary>
            Gets the reference layer of the wall.
            </summary>
            
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Thickness">
            <summary>
            Gets or sets the wall thickness.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SystemChildren">
            <summary>
            Gets a read-only collection of this object's system children.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SystemParent">
            <summary>
            Gets or sets the parent of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.ActiveNameRule">
            <summary>
            Gets or sets the active name rule of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.Range">
            <summary>
            Gets the range box representing the range of the wall.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CrossSection">
            <summary>
            Gets or sets the cross section of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SectionStandard">
            <summary>
            Read-only property to get the section standard of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SectionType">
            <summary>
            Read-only property to get the section type of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.SectionName">
            <summary>
            Read-only property to get the section name of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.CrossSectionTypeName">
            <summary>
            Read-only property to get the section type name of the wall cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Wall.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag to be available for future use.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IStructConnectable">
            <summary>
            IStructConnectable interface definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from an entity filtered by the port geometry type and geometry stage.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eGeometryStage">Geometry stage of the entity's geometry.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from an entity filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eGeometryOperation">Geometry operation in the entity's geometry graph.</param>
            <param name="eGraphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPort objects from an entity filtered by context and geometry stage in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eContext">Topology context to use for filtering the ports.</param>
            <param name="eGeometryStage">Geometry stage of the entity's geometry.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPort objects from an entity filtered by context and geometry operation in the graph.
            </summary>
            <param name="eGeometryType">Geometry type to use for filtering the ports.</param>
            <param name="eContext">Topology Context to use for filtering the ports.</param>
            <param name="eGeometryOperation">Geometry operation in the entity's geometry graph.</param>
            <param name="eGraphPosition">Position in the graph with respect to the geometry operation.</param>
            <returns>TopologyPort ReadOnlyCollection objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructConnectable.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets a late binding port on the given entity with the given topological proxy and port moniker data. 
            Use this method to get a port whose geometry will be created by a later operation. The port is needed to hook-up a connection. 
            Typical use is for creating a physical connection whose port geometry will be provided by an end cut operation.
            </summary>
            <param name="eGeometryType">Topology geometry enumerated type.</param>
            <param name="operationId">Operation ID which will create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="eContext">Context imprinted on the port.</param>
            <param name="iSectionFaceType">Section face type or cross section ID imprinted on the port.</param>
            <returns>Structure port created by the given moniker data.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructConnectable.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">PrivateBusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets StructPorts from an entity filtered by port geometry type and geometry stage.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eGeometryStage">Enumerated value for geometry stage.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port type and geometry stage.
            <code>
            Dim oWallPart As WallPart
            'Get the oWallPart from the wall system.
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallPart.GetPorts(TopologyGeometryType.Face, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets StructPorts from an entity filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eGeometryOperation">Enumerated value for geometry operation.</param>
            <param name="eGraphPosition">Enumerated value for graph position.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, geometry operation and the graph position.
            <code>
            Dim oWallPart As WallPart
            'Get the oWallPart from the wall system.
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallPart.GetPorts(TopologyGeometryType.Face, GeometryOperationTypes.Generate, GraphPosition.After)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets StructPorts from an entity filtered by context and geometry stage in the graph.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eTopologyContext">Enumerated value for topology context.</param>
            <param name="eGeometryStage">Enumerated value for geometry stage.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, topology context and geometry stage.
            <code>
            Dim oWallPart As WallPart
            'Get the oWallPart from the wall system.
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallPart.GetPorts(TopologyGeometryType.Edge, ContextTypes.Cutout, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets StructPorts from an entity filtered by context and geometry operation in the graph.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eTopologyContext">Enumerated value for topology context.</param>
            <param name="eGeometryOperation">Enumerated value for geometry operation.</param>
            <param name="eGraphPosition">Enumerated value for graph position.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, topology context, geometry operation and graph position.
            <code>
            Dim oWallPart As WallPart
            'Get the oWallPart from the wall system.
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallPart.GetPorts(TopologyGeometryType.Face, ContextTypes.Lateral, GeometryOperationTypes.PartFinalTrim, GraphPosition.Before)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets an existing port or a late binding port on the given entity with the given topological proxy and port moniker data. 
            Use this method to get a port whose geometry will be created by a later operation but the port is needed to hook-up a connection. 
            Typical use is in creation of a physical connection whose port geometry will be provided by an end cut operation.
            </summary>
            <param name="eGeometryType">Enumerated value for topology geometry type.</param>
            <param name="operationId">Operation ID which will create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="eContext">Enumerated value for context imprinted on the port.</param>
            <param name="iSectionFaceType">Section face type/cross section ID imprinted on the port.</param>
            <returns>Struct port created by the given moniker data.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallPart.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="oChild"> A child to which a parent and child relationship should be created. </param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">Exception raised when AddSystemChild method is called on WallPart as it is not supported.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.WallSystem">
            <summary>
            Gets the wall system of the wall part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.WallConnections">
            <summary>
            Gets the collection of wall connections on the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallPart.SystemParent">
            <summary>
            Gets or sets the parent of the wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSystemParentException">Exception raised when SystemParent is set on wall part as it is not supported.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FoundationBase">
            <summary>
            Implementation of the FoundationBase abstract class. This class provides generalization of all entities and
            their components which are used as foundations for other entities.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IPartSelection">
            <summary>
            Realized by all objects which aggregate smart occurrence. 
            Provides access to commonly used methods on smart occurrence for part selection. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IPartSelection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the smart occurrence starting with the given root selection. Returns the item which results from the selection rule.
            </summary>
            <param name="RootSelection"> Root selection from which to start.</param>
            <returns> Item selected by selector rule.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IPartSelection.PartName">
            <summary>
            Gets or sets the definition or smart item by name on the smart occurrence.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IPartSelection.Part">
            <summary>
            Gets or sets the definition or smart item object on the smart occurrence.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="child">A child to which a parent/child relationship should be created.</param>
            <example>
            <code>
            'Example code for method AddSystemChild. 
            Dim copiedFooting As Footing =  New Footing(footing) 
            footing.AddSystemChild(copiedFooting)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds the specified object as a child to parent object.
            </summary>
            <param name="child">IAssemblyChild object as child.</param>
            <example>
            <code>
            'Example code for method AddAssemblyChild.
            footing.AddAssemblyChild(CType(childFooting, IAssemblyChild))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of the foundations.
            </summary>
            <param name="name">String value of the new name.</param>
            <exception cref="T:System.ArgumentNullException">Name parameter is null.</exception>
            <example>
            <code>
            'Example code for method SetUserDefinedName.
            footing.SetUserDefinedName("MyFootingName-Test")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationBase.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on this object with the given root selection. 
            Returns the item which results from the selection rule.
            </summary>
            <param name="rootSelection">Root selection from which to start.</param>
            <returns>Item selected by selector rule.</returns>
            <exception cref="T:System.ArgumentNullException">Root selection argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Exception raised if an error is encountered in the ExecuteSelectionRule method.</exception>
            <example>
            <code>
            'Example for method ExecuteSelectionRule.
            Dim selectionRule As String =  footing.ExecuteSelectionRule(footing.PartName)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.SystemChildren">
            <summary>
            Read-only property to get this object's system children.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.SystemParent">
            <summary>
            Gets or sets the system parent of the this object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.AssemblyChildren">
            <summary>
            Returns the collection of assembly children of the parent object. An empty list is returned if there are
            no children for the parent object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of equipment component.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Name">
            <summary>
            Gets the name of the foundations.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.ActiveNameRule">
            <summary>
            Gets or sets the active name rule.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidObjectTypeException">The object is not a name rule object.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnNoAccessException">The user does not have access to read or modify the object.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.WBSItemParents">
            <summary>
            WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Range">
            <summary>
            Gets the range box representing the range of the foundation.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.PartName">
            <summary>
            Gets or sets the definition or part by name on this object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Failed to get the part name on the member split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Failed to set the part name on the member split connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part name value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Part">
            <summary>
            Gets or sets the definition or part on this object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Failed to get the part on the foundation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Failed to set the part on the foundation.</exception>
            <exception cref="T:System.ArgumentNullException">Part value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Failed to get the matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Raised if the matrix value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationBase.Origin">
            <summary>
            Gets or sets the position of the object.
            </summary>
            <exception cref="T:System.ArgumentNullException">Raised if the position value is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.HandRail">
            <summary>
            HandRail class definition. Behavior of the HandRail class is customized through user
            attributes using generic property access.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TrafficEntity">
            <summary>
            Base class for traffic entities. This class provides generalization of all entities supporting
            human traffic.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.#ctor">
            <summary>
            Constructor for .NET to access this class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The object's new name.</param>
            <exception cref="T:System.ArgumentNullException">Name parameter is null.</exception>  
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">The IJNamedObject interface is not supported by given object.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            oStair.SetUserDefinedName("Stair Name")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Adds the specified child object to the parent.
            </summary>
            <param name="oChild">Child object.</param>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">Unexpected failure while adding a system child.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            Dim oChild As ISystemChild 
            oStair.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds the specified child object to the parent.
            </summary>
            <param name="oChild">Child object.</param>
            <exception cref="T:System.ArgumentNullException">Child object is null.</exception>
            <example>This is an example of the AddAssemblyChild method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            Dim oChild As IAssemblyChild 
            oStair.AddAssemblyChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TrafficEntity.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the given object using the specified transformation matrix.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:System.ArgumentNullException">oT4X4 parameter is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometry with the given T4X4.</exception>
            <example>This is an example of the Transform method.
            <code>
            'Create stair, ladder, or handrail with its constructor.
            Dim matrix As New Matrix4X4() 
            matrix.SetIndexValue(12, 100R) 'Translate by 100m. 
            oStair.Transform(matrix) 
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.Name">
            <summary>
            Gets the read-only name of the object.
            </summary>            
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnSupportsInterfaceException">The IJNamedObject interface is not supported by given object.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a stair, ladder, or handrail.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.SystemParent">
            <summary>
            Gets or sets the parent of the child object.
            </summary>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSystemParentException">Unexpected failure while getting the system parent.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSystemParentException">Unexpected failure while setting the system parent.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.SystemChildren">
            <summary>
            Gets a collection of the read-only system children of the parent object.  
            If there are no children, an empty collection will be returned.
            </summary>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SystemChildrenException">Unexpected failure while getting the system children.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.AssemblyChildren">
            <summary>
            Gets a read-only collection of the assembly children of the parent object.  
            If there are no children, an empty collection will be returned.   
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.AssemblyParent">
            <summary>
            Gets or sets the parent assembly of the child object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.Range">
            <summary>
            Gets the read-only range box.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.WBSItemParents">
            <summary>
            Gets the read-only set of WBSItem parents for this object.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag to be available for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginAppId">
            <summary>
            Gets or sets the ID associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.OriginOid">
            <summary>
            Gets or sets the OID associated with the object in the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TrafficEntity.Part">
            <summary>
            Gets or sets the catalog part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException">Unexpected failure while getting the catalog part.</exception>   
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException">Unexpected failure while setting the catalog part.</exception>
            <exception cref="T:System.ArgumentNullException">The part occurrence object is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Sketch3D)">
            <summary>
            Public constructor for the HandRail class using Sketch3D.
            </summary>
            <param name="parentSystem">Parent system of the handrail.</param>
            <param name="part">The handrail catalog part.</param>
            <param name="path">The handrail Sketch3D path.</param>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.HandrailNullException">Failed to create handrail in factory.</exception>
            <example>This is an example of HandRail constructor By Sketch3D.
            <code>
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            'Create the Sketch3d object with SketchPoints collection and add features.
            Dim oSketch3d As New Sketch3D(oPlant)
            Dim oCatalogStructHelper As New CatalogStructHelper()
            Dim oHandrailPart As Part = DirectCast(oCatalogStructHelper.GetPart("TMTHandrail"), Part)
            Dim oHandRail As New HandRail(oPlant.RootSystem, oHandrailPart, oSketch3d)
            oHandRail.SetUserDefinedName("HandRailBySketch3d")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.HandRail.#ctor(Ingr.SP3D.Structure.Middle.HandRail)">
            <summary>
            Copy constructor for the HandRail.
            </summary>
            <param name="handRail">The handrail catalog part name.</param>
            <exception cref="T:System.ArgumentNullException">Handrail is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.HandrailNullException">Failed to create handrail in the factory.</exception>
            <example>This is an example of Handrail copy constructor.
            <code>        
            Dim oHandRail As New Ladder(oHandRailToCopy)
            oHandRail.SetUserDefinedName("HandRailByCopyConstructor")
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.HandRail.Path">
            <summary>
            Read-only property to get the handrail path by Sketch3D.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Unexpected failure while getting the Sketch3D path of a handrail.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.HandRail.COMClassString">
            <summary>
            Returns the class string corresponding to the Handrail COM class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs">
            <summary>
            SmartPlantStructure resource identifiers.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidArguments">
            <summary>
            This exception is thrown when invalid arguments are passed to create a member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFactoryCreation">
            <summary>
            This exception is thrown when there is an unexpected failure while creating a member factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberCreation">
            <summary>
            This exception is thrown when there is an unexpected failure while creating the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCRelatedObjs">
            <summary>
            This exception is thrown when there is an error setting the related objects on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMultipleFCRelatedObjs">
            <summary>
            This exception is thrown when there cannot be two frame connections as related objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRuleResult">
            <summary>
            This exception is thrown when a rule returned an unexpected result.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Axis property of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPhysicalAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the PhysicalAxis property of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAxis">
            <summary>
            This exception is thrown when there is an unexpected failure in SetAxis method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSketch3D">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Sketch3D property of member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSketch3D">
            <summary>
            This exception is thrown when there is an unexpected failure while setting Sketch3D property of member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPointsMS">
            <summary>
            This exception is thrown when there is an unexpected failure in method GetEndPoints of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPointsMP">
            <summary>
            This exception is thrown when there is an unexpected failure in method GetEndPoints of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPointsMS">
            <summary>
            This exception is thrown when there is an unexpected failure in method SetEndPoints of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPointsMP">
            <summary>
            This exception is thrown when there is an unexpected failure in method SetEndPoints of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetParts">
            <summary>
            This exception is thrown when there is an unexpected failure in GetParts method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPart">
            <summary>
            This exception is thrown when there is an unexpected failure in GetPart method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPartsAtPosition">
            <summary>
            This exception is thrown when there is an unexpected failure in GetPartsAtPosition method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFrameConnection">
            <summary>
            This exception is thrown when there is an unexpected failure in FrameConnection method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSplitConnections">
            <summary>
            This exception is thrown when there is an unexpected failure in SplitConnections method of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Matrix property  of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetOrientationVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOrientationVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBetaAngle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBetaAngle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMirror">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMirror">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMatrixAtPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTypeCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetTypeCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTransformUnexpected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidObjType">
            <summary>
            This exception is thrown when there is an invalid object type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidMemberType">
            <summary>
            This exception is thrown when there is an invalid member type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrURetrieveObject">
            <summary>
            This exception is thrown when unable to retrieve the .NET object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrUnexpected">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidAarg">
            <summary>
            This exception is thrown when there is an invalid null input argument.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGettingFactory">
            <summary>
            This exception is thrown when not able to getting the member factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreatingMember">
            <summary>
            This exception is thrown when failed to create member part using factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStandaloneParent">
            <summary>
            This exception is thrown when stand alone member cannot have a member system as a parent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNonStandalonePart">
            <summary>
            This exception is thrown when the desired action cannot perform on a non-standalone member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCurvedPart">
            <summary>
            This exception is thrown when the desired action cannot perform on a curved member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNonPrismaticPart">
            <summary>
            This exception is thrown when the desired action cannot perform on a non-prismatic member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidCutbackSurface">
            <summary>
            This exception is thrown when the input surface is invalid as a cutback surface for this member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidObjectType">
            <summary>
            This exception is thrown when the object is of the wrong type to support the desired action.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNonLinearAxis">
            <summary>
            This exception is thrown when the designed Member cannot support non-linear axis.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectionMemberSystemParent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParentSystemNullArg">
            <summary>
            This exception is thrown when invalid parentsystem argument passed to create a member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartGetMirror">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Mirror property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartSetMirror">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Mirror property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartGetBetaAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the BetaAngle property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartSetBetaAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the BetaAngle property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartGetOrientationVector">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the OrientationVector property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberFactory">
            <summary>
            This exception is thrown when failed to create member factory.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotSupportedSketch3DBuiltUp">
            <summary>
            This exception is thrown when built-up cross-section can not be used for creating member using Sketch3D.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPartSetOrientationVector">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the OrientationVector property of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoNameRule">
            <summary>
            This exception is thrown when there no name rule associated to the given object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemMoreThanTwoRelObjs">
            <summary>
            This exception is thrown because member system currently does not support more than two related objects at an end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoRelObjs">
            <summary>
            This exception is thrown if at least one related object not present at an end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsStartNoPos">
            <summary>
            This exception is thrown if related objects at start do not provide a unique position for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsEndNoPos">
            <summary>
            This exception is thrown if related objects at end do not provide a unique position for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsStartInvalidConstraint">
            <summary>
            This exception is thrown if related objects at start do not provide a valid constraint for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystemRelObjsEndInvalidConstraint">
            <summary>
            This exception is thrown if related objects at end do not provide a valid constraint for the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCRelatedObjsStart">
            <summary>
            This exception is thrown if related objects at start can not be set on the frame connection of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCRelatedObjsEnd">
            <summary>
            This exception is thrown if related objects at end can not be set on the frame connection of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCSelRuleRelatedObjsStart">
            <summary>
            This exception is thrown if frame connection selection rule could not find a valid frame connection type for the given related objects at the start of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCSelRuleRelatedObjsEnd">
            <summary>
            This exception is thrown if frame connection selection rule could not find a valid frame connection type for the given related objects at the end of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidOrigMemberArg">
            <summary>
            This exception is thrown if original member system argument is not a valid member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelatedObjsHasNull">
            <summary>
            This exception is thrown if related object collection has a null object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCMemberEnd">
            <summary>
            This exception is thrown if frame connection does not have a valid member end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLoads">
            <summary>
            This exception is thrown if unexpected failure while getting Loads property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReleases">
            <summary>
            This exception is thrown if unexpected failure while getting Releases property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddCutbackSurfaces">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddCutbackSurface">
            <summary>
            This exception is thrown if unexpected failure in AddCutbackSurface method of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAxisPort">
            <summary>
            This exception is thrown if unexpected failure in GetAxisPort method of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointAtEnd">
            <summary>
            This exception is thrown if unexpected failure in GetPointAtEnd method of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnectedParts">
            <summary>
            This exception is thrown if unexpected failure while getting ConnectedParts property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMemberSystem">
            <summary>
            This exception is thrown if unexpected failure while getting MemberSystem property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCutLength">
            <summary>
            This exception is thrown if unexpected failure while getting CutLength property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCardinalPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCardinalPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStandAlone">
            <summary>
            This exception is thrown if unexpected failure while getting StandAlone property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDesignedMember">
            <summary>
            This exception is thrown if unexpected failure while getting DesignedMember property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPrismatic">
            <summary>
            This exception is thrown if unexpected failure while getting Prismatic property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSection">
            <summary>
            This exception is thrown if unexpected failure while getting CrossSection property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCrossSection">
            <summary>
            This exception is thrown if unexpected failure while setting CrossSection property of the memberpart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFindPortFailed">
            <summary>
            This exception is thrown when failed to find the port on the given connectable from the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEnumPortsFailed">
            <summary>
            This exception is thrown when failed to enumerate the ports in the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRangeFailed">
            <summary>
            This exception is thrown when failed to get range of the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCMemberEndFailed">
            <summary>
            This exception is thrown when failed to get the member end from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPositionFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the position of the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCMemSysFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the MemberSystem property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCEndMemSysFailed">
            <summary>
            This exception is thrown when failed to get member systems connected at the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOGlobalGetFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the WPOGlobal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOGlobalSetFailed">
            <summary>
            This exception is thrown if unexpected failure while setting the WPOGlobal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOLocalGetFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the WPOLocal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOLocalSetFailed">
            <summary>
            This exception is thrown if unexpected failure while setting the WPOLocal property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOGetCPFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the WPOCardinalPoint property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCInvalidWPOCP">
            <summary>
            This exception is thrown when invalid work point offset cardinal point being set on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCWPOSetCPFailed">
            <summary>
            This exception is thrown if unexpected failure while setting the WPOCardinalPoint property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCValidateRelObjsFailed">
            <summary>
            This exception is thrown when unexpected failure encountered during validation of the related objects from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCGetRelObjsFailed">
            <summary>
            This exception is thrown when failed to get the related objects from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCGetPointOnFailed">
            <summary>
            This exception is thrown if unexpected failure while getting the PointOn property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCExecuteSelRuleFailed">
            <summary>
            This exception is thrown when failed to execute selection rule on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartSelection">
            <summary>
            This exception is thrown when failed to set the root selector part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCExecuteSelRuleInvalid">
            <summary>
            This exception is thrown if execution of selection rule resulted in an invalid selection on the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartNameGet">
            <summary>
            This exception is thrown if unexpected failure while getting the PartName property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartNameSet">
            <summary>
            This exception is thrown if unexpected failure while setting the PartName property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartGet">
            <summary>
            This exception is thrown if unexpected failure while getting the Part property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCPartSet">
            <summary>
            This exception is thrown if unexpected failure while setting the Part property from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFCTransform">
            <summary>
            This exception is thrown when failed to transform the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberType">
            <summary>
            This exception is thrown when the user tries to get a MemberType Codelist value which does not exist
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberCategory">
            <summary>
            This exception is thrown when the user tries to get a MemberTypeCategory Codelist value which does not exist
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrArea">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the property area of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrLength">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the property length of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsPointOn">
            <summary>
            This exception is thrown when there is an unexpected failure while determining whether the input point is on the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCentroid">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the centroid of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAreaCentroidMomentsOfInertia">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the center, area, moment of inertia, and principle axes of a closed planar curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenCS">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the distance between curve and the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenCC">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the distance between this curve and the input curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenCP">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the distance between this curve and the input point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEndPoints">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the end points of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrForm">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the closure of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrScope">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the planarity of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrScopeN">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the scope and normal of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSelfIntersect">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the self intersections and overlaps of the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectCS">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the intersection between curve and a surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectCC">
            <summary>
            This exception is thrown when there is an unexpected failure while determining the intersection between this curve and another curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnections">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the connections of the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlacingEndCutFeature">
            <summary>
            This exception is thrown when there is an unexpected failure while Placing EndCutFeature.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSectionEdgesAtPlane">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Section Edges At given Plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSectionFaces">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Section Faces.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSketchingPlaneOrigin">
            <summary>
            This exception is thrown when there is an unexpected failure while determining SketchingPlane Origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Matrix.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrXAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while determining X-Axis Vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrYAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while determining Y-Axis Vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrZAxis">
            <summary>
            This exception is thrown when there is an unexpected failure while determining Z-Axis Vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOrigin">
            <summary>
            This exception is thrown when there is an unexpected failure while determining Origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCrossSectionClass">
            <summary>
            This exception is thrown when there is an unexpected failure while getting CrossSectionClass.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrKeyPointCoordinates">
            <summary>
            This exception is thrown when there is an unexpected failure while determining KeyPointCoordinates.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNominalSectionSize">
            <summary>
            This exception is thrown when there is an unexpected failure while getting NominalSectionSize.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidCardinalPoint">
            <summary>
            This exception is thrown when there is invalid cardinalPoint Set on the MemberSystem or MemberPart.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPartSelection">
            <summary>
            This exception is thrown when failed to get the root selector part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortIndex">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the PortIndex.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the PortType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberSystem">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectionsMemberPart">
            <summary>
            This exception is thrown when there is an an unexpected failure while getting the connections of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMemberPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPortGeometry">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the port geometry.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnections">
            <summary>
            This exception is thrown when there is an unexpected failure while getting connections.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperatorId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting OperatorId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrOperationId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting OperationId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrContextId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting ContextId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSectionId">
            <summary>
            This exception is thrown when there is an unexpected failure while getting SectionId.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsPersistent">
            <summary>
            This exception is thrown when there is an unexpected failure while getting IsPersistent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTopologyProxyType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyProxyType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRange">
            <summary>
            This exception is thrown when there is an unexpected failure while getting Range.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsConnectable">
            <summary>
            This exception is thrown when there is an unexpected failure while getting IsConnectable.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrConnectableFacelet">
            <summary>
            This exception is thrown when there is an unexpected failure while getting ConnectableFacelet.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGeometryOperationNotSupported">
            <summary>
            This exception is thrown when there is an unexpected failure while getting GeometryOperationTypes.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortPortTypeGeometryStage">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortPortTypeOperation">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortTopologyGeometryStage">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortTopologyGeometryOperation">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortContextGeometryStage">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContextGeometryOperation">
            <summary>
            This exception is thrown when there is an unexpected failure while getting TopologyPort.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFactoryObject">
            <summary>
            This exception is thrown when there is an unexpected failure while creating a factory object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundaryOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Boundary offset of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBoundaryOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Boundary offset of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Type of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetWallType">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Type of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaximumHeight">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Maximum height
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMaximumHeight">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Maximum height
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReflect">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Reflect property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetReflect">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Reflect property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetVerticalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the VerticalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetVerticalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the VerticalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetHorizontalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the HorizontalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetHorizontalOffset">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the HorizontalOffset property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Angle property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetAngle">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Angle property of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCompositionPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Composition Part of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCompositionPart">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Composition Part of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCompositionLayers">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Composition Layers of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCompositionLayers">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Composition Layers of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReferenceLayer">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Reference Layer of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Thickness of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Thickness of the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddSystemChild">
            <summary>
            This exception is thrown if an error is encountered while AddSystemChild is called on the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSystemChildren">
            <summary>
            This exception is thrown if an error is encountered while get SystemChildren is called on the Wall
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSystemParent">
            <summary>
            This exception is thrown if an error is encountered when getting SystemParent for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSystemParent">
            <summary>
            This exception is thrown if an error is encountered when setting SystemParent for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetActiveNameRule">
            <summary>
            This exception is thrown if an error is encountered when getting ActiveNameRule for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetActiveNameRule">
            <summary>
            This exception is thrown if an error is encountered when setting ActiveNameRule for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetName">
            <summary>
            This exception is thrown if an error is encountered when getting Name for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetName">
            <summary>
            This exception is thrown if an error is encountered when setting Name for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetUserDefinedName">
            <summary>
            This exception is thrown if an error is encountered when getting UserDefinedName for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetUserDefinedName">
            <summary>
            This exception is thrown if an error is encountered when setting UserDefinedName for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRangeException">
            <summary>
            This exception is thrown if an error is encountered when getting Range for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWBSItemChildHelperObj">
            <summary>
            This exception is thrown if unexpected failure while getting WBSItemChildHelperObj for Wall.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWBSItemParents">
            <summary>
            This exception is thrown if unexpected failure while getting WBSItemParents for Wall.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSectionWall">
            <summary>
            This exception is thrown if an error is encountered when getting CrossSection for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCrossSectionWall">
            <summary>
            This exception is thrown if an error is encountered when setting CrossSection for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSectionTypeWall">
            <summary>
            This exception is thrown if an error is encountered when getting CrossSectionType for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCrossSectionTypeNameWall">
            <summary>
            This exception is thrown if an error is encountered when getting CrossSectionTypeName for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnectablePorts">
            <summary>
            This error is thrown when there is an unexpected failure while getting the connectable ports.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetConnectedPorts">
            <summary>
            This error is thrown when there is an unexpected failure while getting the connected ports.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPorts">
            <summary>
            This error is thrown when there is an unexpected failure while getting the ports.
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsConnected">
            <summary>
            This error is thrown when there is an unexpected failure when IsConnected is called. 
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWallSystem3D">
            <summary>
            This exception is thrown if an unexpected failure while trying to Create a WallSystem using Sketch 3D
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSupportPlane">
            <summary>
            This exception is thrown if an error is encountered when getting SupportPlane for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSupportPlane">
            <summary>
            This exception is thrown if an error is encountered when setting SupportPlane for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallParts">
            <summary>
            This exception is thrown if an error is encountered when getting WallParts for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPath">
            <summary>
            This exception is thrown if an error is encountered when getting Path for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPath">
            <summary>
            This exception is thrown if an error is encountered when setting Path for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBoundaries">
            <summary>
            This exception is thrown if an error is encountered when getting Boundaries for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBoundaries">
            <summary>
            This exception is thrown if an error is encountered when setting Boundaries for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetContinuityType">
            <summary>
            This exception is thrown if an error is encountered when getting ContinuityType for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetContinuityType">
            <summary>
            This exception is thrown if an error is encountered when setting ContinuityType for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPriorityNumber">
            <summary>
            This exception is thrown if an error is encountered when getting PriorityNumber for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPriorityNumber">
            <summary>
            This exception is thrown if an error is encountered when setting PriorityNumber for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRun">
            <summary>
            This exception is thrown if an error is encountered when getting Run for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRun">
            <summary>
            This exception is thrown if an error is encountered when setting Run for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallConnections">
            <summary>
            This exception is thrown if an error is encountered when getting WallConnections for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallSystem">
            <summary>
            This exception is thrown if an error is encountered when getting WallSystem for Wall
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetWallSystemFromRun">
            <summary>
            This exception is thrown if an error is encountered when getting WallSystem for WallRun
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetIsReference">
            <summary>
            This exception is thrown if unexpected failure while getting the IsRefrence property of the Layer
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetIsReference">
            <summary>
            This exception is thrown if unexpected failure while setting the IsRefrence property of the Layer
            </summary>      
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerThickness of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetLayerThickness">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the LayerThickness of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerContinuity">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerContinuity of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetLayerContinuity">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the LayerContinuity of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerCatalogPart of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetLayerCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the LayerCatalogPart of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetLayerIndex">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the LayerIndex of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaterial">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Material of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMaterial">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Material of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaterialType">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the MaterialType of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetMaterialGrade">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the MaterialGrade of the Layer
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullStairObject">
            <summary>
            This exception is thrown when CreateStair method of the Stair Factory returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullLadderObject">
            <summary>
            This exception is thrown when CreateLadder method of the Ladder Factory returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetTopSupport">
            <summary>
            This exception is thrown when there is an unexpected failure while getting stair or ladder top support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSideReference">
            <summary>
            This exception is thrown when there is an unexpected failure while getting stair or ladder side reference.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetBottomSupport">
            <summary>
            This exception is thrown when there is an unexpected failure while getting stair or ladder bottom support.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetBottomSupport">
            <summary>
            This exception is thrown when setting the traffic entity BottomSupport.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrTransformMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while transforming the geometry with the given transformation matrix.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSystemChild">
            <summary>
            This exception is thrown when there is an unexpected failure while adding a system child.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSystemChildren">
            <summary>
            This exception is thrown when there is an unexpected failure while getting system children.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSysHelperObject">
            <summary>
            This exception is thrown when there is a null reference to the SystemHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSysChildHelperObject">
            <summary>
            This exception is thrown when there is a null reference to the SystemChildHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullSysParentObject">
            <summary>
            This exception is thrown when there is a null reference to the SystemParent object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSysParent">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the SystemParent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSysParent">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the SystemParent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNamedItemHelper">
            <summary>
            This exception is thrown when there is a null reference to the NamedItemHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWBSHierarchyHelper">
            <summary>
            This exception is thrown when there is a null reference to the WBSHierarchyHelper object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullHandrailObject">
            <summary>
            This exception is thrown when Create method of the Handrail Factory returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetHandrailSketch3D">
            <summary>
            This exception is thrown when getting the Sketch3D path of a handrail.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDBConnection">
            <summary>
            This exception is thrown when the connection cannot be obtained from the parent system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetNameTrafficEntity">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Name property for traffic entities.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetNameTrafficEntity">
            <summary>
            This exception is thrown when there is an unexpected failure while calling the SetUserDefinedName method for traffic entities.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Catalog Part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullCatalogPartObject">
            <summary>
            This exception is thrown when GetPart method of the IPartOccurrence interface returns null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrProxyFromPart">
            <summary>
            This exception is thrown when calling the GetProxyFromPart method in the StructHelper class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOrientation">
            <summary>
            This exception is thrown when setting the orientation of the Local Coordinate System.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetOrigin">
            <summary>
            This exception is thrown when setting the origin.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetCatalogPart">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Catalog Part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCatalogPartFromProxy">
            <summary>
            This exception is thrown when there is an unexpected failure while getting the Catalog Part from proxy.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefineStair">
            <summary>
            This exception is thrown when there is an unexpected failure while defining a Stair.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefineLadder">
            <summary>
            This exception is thrown when there is an unexpected failure while defining a Ladder.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetInputs">
            <summary>
            This exception is thrown when a wrong overloaded GetInputs method is called for a particular PlaneDefinitionType.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStructPlaneFactory">
            <summary>
            This error is raised when a problem is encountered while creating the struct plane factory.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateStructPlane3D">
            <summary>
            This error is raised when a problem is encountered while creating the struct plane3D object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetGeometryPattern">
            <summary>
            This error is raised when a problem is encountered while setting the geometry pattern on the plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPoints">
            <summary>
            This exception is thrown when plane creation points are collinear 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabIsAmbiguous">
            <summary>
            This exception is thrown when unexpected failure while trying to retrieve if the Slab is ambiguous
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSlabResolveAmbiguity">
            <summary>
            This exception is thrown when unexpected failure while trying to resolve the ambiguity of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabUnusedBoundaries">
            <summary>
            This exception is thrown when unexpected failure while getting the unused boundaries of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabAmbiguousPatches">
            <summary>
            This exception is thrown when unexpected failure while getting the ambiguous patches of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSupportInfo">
            <summary>
            This exception is thrown when unexpected failure while getting the support of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSupportInfo">
            <summary>
            This exception is thrown when unexpected failure while setting the support of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComposition">
            <summary>
            This exception is thrown when unexpected failure while getting the composition of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetComposition">
            <summary>
            This exception is thrown when unexpected failure while setting the composition of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabType">
            <summary>
            This exception is thrown when unexpected failure while getting the Type of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabType">
            <summary>
            This exception is thrown when unexpected failure while setting the Type of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabFacePosition">
            <summary>
            This exception is thrown when unexpected failure while getting the Face Position of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabFacePosition">
            <summary>
            This exception is thrown when unexpected failure while setting the Face Position of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabLayers">
            <summary>
            This exception is thrown when unexpected failure while getting the Layers of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabLayers">
            <summary>
            This exception is thrown when unexpected failure while setting the Layers of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabBoundary">
            <summary>
            This exception is thrown when unexpected failure while getting the Boundaries of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabBoundary">
            <summary>
            This exception is thrown when unexpected failure while setting the Boundaries of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabReferenceLayer">
            <summary>
            This exception is thrown when unexpected failure while getting the reference layer of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTotalVolume">
            <summary>
            This exception is thrown when unexpected failure while getting the total volume of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabNetVolume">
            <summary>
            This exception is thrown when unexpected failure while getting the Net volume of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTotalSurface">
            <summary>
            This exception is thrown when unexpected failure while getting the Total Surface of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabNetSurface">
            <summary>
            This exception is thrown when unexpected failure while getting the Net Surface of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTotalProjectedArea">
            <summary>
            This exception is thrown when unexpected failure while getting the Total Projected Area of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabNetProjectedArea">
            <summary>
            This exception is thrown when unexpected failure while getting the Net Projected Area of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabAngle">
            <summary>
            This exception is thrown when unexpected failure while getting the Angle of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabSlope">
            <summary>
            This exception is thrown when unexpected failure while getting the Slope of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabLowestElevationPoint">
            <summary>
            This exception is thrown when unexpected failure while getting the Lowest Elevation Point of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabHighestElevationPoint">
            <summary>
            This exception is thrown when unexpected failure while getting the Highest Elevation Point of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabBottomOfConcrete">
            <summary>
            This exception is thrown when unexpected failure while getting the Bottom Of Concrete of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabTopOfConcrete">
            <summary>
            This exception is thrown when unexpected failure while getting the Top Of Concrete of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabThickness">
            <summary>
            This exception is thrown when unexpected failure while getting the Thickness of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetSlabThickness">
            <summary>
            This exception is thrown when unexpected failure while setting the Thickness of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetSlabAssemblyConnections">
            <summary>
            This exception is thrown when failure while retrieving the Assembly Connection of the Slab
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMethodNotSupported">
            <summary>
            This error is raised when a method is not supported on an object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPropertyNotSupported">
            <summary>
            This error is raised when a property is not supported on an object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullMaterialObject">
            <summary>
            This error is raised when getting the COM material object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ExecuteSelectionRuleError">
            <summary>
            This error is raised when there is an unexpected failure while executing the selection rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.NullCOMObjectError">
            <summary>
            This error is raised when COM object is null.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetPartNameError">
            <summary>
            This error is raised when the PartName property fails to get the part name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetPartNameError">
            <summary>
            This error is raised when the PartName property fails to set the part name.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetSupportedObjectsError">
            <summary>
            This error is raised when the SupportedObjects property fails to get the supported objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetSupportedObjectsError">
            <summary>
            This error is raised when the SupportedObjects property fails to set the supported objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetSupportingObjectsError">
            <summary>
            This error is raised when the SupportingObjects property fails to get the supporting objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetSupportingObjectsError">
            <summary>
            This error is raised when the SupportingObjects property fails to set the supporting objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.DefinitionObjectError">
            <summary>
            This error is raised if the definition object cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.FootingInputHelperObjectError">
            <summary>
            This error is raised if the Footing Input Helper object cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetComponentMaterial">
            <summary>
            This error is raised when unexpected error comes while getting the material.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetComponentMaterial">
            <summary>
            This error is raised when unexpected error comes while getting the material.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportedObjectForFooting">
            <summary>
            This error is raised if an invalid input supported object is passed for creating the footing.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSingleFooting">
            <summary>
            This error is raised if input part does not support single part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneNotReqFooting">
            <summary>
            This error is raised if input part type which needs a supporting plane is passed to a constructor which does not have the supporting plane as input.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateEntity">
            <summary>
            This error is raised when failed to create an entity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateFooting">
            <summary>
            This error is raised when failed to create a footing.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneReqFooting">
            <summary>
            This error is raised if input part type which does not need a supporting plane is passed to a constructor which has a supporting plane as input.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportingObjectForFooting">
            <summary>
            This error is raised if an invalid supporting object is passes as input.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportedObjectInfo">
            <summary>
            This error is raised when failed to retrieve the information of the supported object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportingObjectInfo">
            <summary>
            This error is raised when failed to retrieve the information of the supporting object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateHelperClass">
            <summary>
            This error is raised when failed to create the helper class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCombinedFooting">
            <summary>
            This error is raised if input part does not support combined part type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportedObjectCount">
            <summary>
            This error is raised if the input supported object collection has less than two objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartTypeForSupported">
            <summary>
            This error is raised if the input part is invalid for the supported objects passed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartTypeForSupporting">
            <summary>
            This error is raised if the input part is invalid for the supporting objects passed.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SupportedObjValidationError">
            <summary>
            This error is raised if the validation for the supported object fails.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SupportingObjValidationError">
            <summary>
            This error is raised if the validation for the supporting object fails.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.PartValidationError">
            <summary>
            This error is raised if the validation for the part fails with the given supported and supporting objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportedObjectForEquipFoundation">
            <summary>
            This error is raised if an invalid input supported object is passed for creating an equipment foundation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportingObjectForEquipFoundation">
            <summary>
            This error is raised if an invalid supporting object is passed as input for creating an equipment foundation..
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetMatrix">
            <summary>
            This exception is thrown when there is an unexpected failure while setting the Matrix.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.EquipFoundationInputHelperObjectError">
            <summary>
            This error is raised if the equipment foundation Input Helper object cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.GetSupportObjectsOnEquipFoundation">
            <summary>
            This error is raised if there is a problem encountered while getting the support objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.SetSupportObjectsOnEquipFoundation">
            <summary>
            This error is raised if there is a problem encountered while setting the support objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRootSelName">
            <summary>
            This error is raised if an unexpected failure occur while getting the root selection name from the Catalog Part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefaultFndn">
            <summary>
            This error is raised if is a unexpected failure while getting the default foundation name from the foundation port.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRootSelName">
            <summary>
            This error is raised if an unexpected failure occur while setting the root selection name on equipment foundation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSupportedObjectCountZero">
            <summary>
            This error is raised if the supported objects count is zero.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInfiniteGet">
            <summary>
            This error is raised if an unexpected failure occur while getting the Infinate property on Line Object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInfiniteSet">
            <summary>
            This error is raised if an unexpected failure occur while setting the Infinate property on Line Object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartPoint">
            <summary>
            This error is raised if an unexpected failure occur while getting the Start Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartPoint">
            <summary>
            This error is raised if an unexpected failure occur while setting the Start Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPoint">
            <summary>
            This error is raised if an unexpected failure occur while getting the End Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPoint">
            <summary>
            This error is raised if an unexpected failure occur while setting the End Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetRootPoint">
            <summary>
            This error is raised if an unexpected failure occur while getting the Root Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetRootPoint">
            <summary>
            This error is raised if an unexpected failure occur while setting the Root Point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetDirection">
            <summary>
            This error is raised if an unexpected failure occur while getting the Direction vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetDirection">
            <summary>
            This error is raised if an unexpected failure occur while getting the Direction vector.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfaceCentroid">
            <summary>
            This error is raised if an Unexpected failure while getting the centroid of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenSS">
            <summary>
            This error is raised if an Unexpected failure while determining the distance between Surface and the Surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDistanceBetweenPS">
            <summary>
            This error is raised if an Unexpected failure while determining the distance between point and the Surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIntersectSS">
            <summary>
            This error is raised if an Unexpected failure while determining the intersection between surface and a surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIsPointOnSurface">
            <summary>
            This error is raised if an Unexpected failure while determining whether the input point is on the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfaceScopeN">
            <summary>
            This error is raised if an Unexpected failure while determining the scope and normal of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfaceuForm">
            <summary>
            This error is raised if an Unexpected failure while determining the uForm of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSurfacevForm">
            <summary>
            This error is raised if an Unexpected failure while determining the vForm of the surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneAddBoundary">
            <summary>
            This error is raised if an Unexpected failure while adding boundary to a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneAddHole">
            <summary>
            This error is raised if an Unexpected failure while adding hole to a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneBoundaryCount">
            <summary>
            This error is raised if an Unexpected failure while getting the boundary count of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetBoundaries">
            <summary>
            This error is raised if an Unexpected failure while getting the boundaries of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetBoundary">
            <summary>
            This error is raised if an Unexpected failure while getting the boundary of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetNormal">
            <summary>
            This error is raised if an Unexpected failure while getting the normal of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetNormal">
            <summary>
            This error is raised if an Unexpected failure while setting the normal of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneRemoveAllBoundaries">
            <summary>
            This error is raised if an Unexpected failure while removing all boundaries of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneRemoveBoundary">
            <summary>
            This error is raised if an Unexpected failure while removing a boundary of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetReversed">
            <summary>
            This error is raised if an Unexpected failure while getting the reversed flag of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetReversed">
            <summary>
            This error is raised if an Unexpected failure while setting the reversed flag of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetRootPoint">
            <summary>
            This error is raised if an Unexpected failure while getting the root point of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetRootPoint">
            <summary>
            This error is raised if an Unexpected failure while setting the root point of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetBoundaries">
            <summary>
            This error is raised if an Unexpected failure while setting the boundaries of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetBoundary">
            <summary>
            This error is raised if an Unexpected failure while setting a boundary of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneSetUDirection">
            <summary>
            This error is raised if an Unexpected failure while setting the UDirection of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetUDirection">
            <summary>
            This error is raised if an Unexpected failure while getting the UDirection of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrServerContext">
            <summary>
            This exception is thrown when Unexpected error while instantiating the ServerContext.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrJContext">
            <summary>
            This exception is thrown when failed to get the JContext.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGettingOLEPath">
            <summary>
            This exception is thrown when failed to get the OLE_SERVER Path.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCrossSectionServices">
            <summary>
            This exception is thrown when failed to instantiating CrossSectionServices.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetProfiles">
            <summary>
            This exception is thrown when failed to get the profiles.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCardinalPoint">
            <summary>
            This exception is thrown when failed to get the cardinal point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMathMatrix">
            <summary>
            This exception is thrown when failed to instantiate Matrix object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrComputeTransform">
            <summary>
            This exception is thrown when failed to compute transform for the given projection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSurfaces">
            <summary>
            This exception is thrown failed to create surfaces.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDefinitionParameters">
            <summary>
            This exception is thrown when failed to getting the DefinitionParameters.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGeometryFactory">
            <summary>
            This exception is thrown when error in instantiating GeometryFactoryClass.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateBySingleSweepWCapsOpts">
            <summary>
            This exception is thrown when error in CreateBySingleSweep.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateByOffset">
            <summary>
            This exception is thrown when error in CreateByOffset.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetProjectionSurfacesFromCircle">
            <summary>
            This exception is thrown when error in CreateByOffset.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPartSetNotSupported">
            <summary>
            This error is raised when user is trying to set new part on FoundationComponent.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCardinalPointDelta">
            <summary>
            This error is raised while trying to get the distance of the cardinal point from another cardinal point in u-v space at the given position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetWCG">
            <summary>
            This error is raised while trying to set weight and center of gravity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaceCrossSectionOccurrence">
            <summary>
            This error is raised while trying to place cross-section occurrence in model.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetControlFlags">
            <summary>
            This error is raised while trying to set control flags.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelObjsStartOverConstained">
            <summary>
            Related objects at start collection are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelObjsEndOverConstained">
            <summary>
            Related objects at end collection  are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortMultiplePorts">
            <summary>
            Related objects at end collection  are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPortCreation">
            <summary>
            Related objects at end collection  are overconstained.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPosition">
            <summary>
            Unexpected failure while getting the position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPointAtDistanceAlong">
            <summary>
            Unexpected failure while determining the point at given distance along the curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEvaluatePoint">
            <summary>
            Unexpected failure while evaluating the point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrPlaneGetVDirection">
            <summary>
            This error is raised if an Unexpected failure while getting the VDirection of a plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrParameter">
            <summary>
            Unexpected failure while determining the U and V parameters.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetSketch3D">
            <summary>
            Cannot set Sketch3D object on linear member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStandAloneMemberParent">
            <summary>
            Cannot set Sketch3D object on linear member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoIntersectPointCC">
            <summary>
            Unable to find the intersecting point between Curve on Curve.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoIntersectPointCS">
            <summary>
            Unable to find the intersecting point between Curve on Surface.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrFacePositionMapping">
            <summary>
            Unable to map COM SlabFacePosition to .NET FacePosition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoRelatedObjsToDisconnectAtStartFC">
            <summary>
            No Related objects on start frame connection exists to disconnect.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNoRelatedObjsToDisconnectAtEndFC">
            <summary>
            No Related objects on end frame connection exists to disconnect.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelatedObjsDisconnectionStart">
            <summary>
            Unable to disconnect the related objs on start frame connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrRelatedObjsDisconnectionEnd">
            <summary>
            Unable to disconnect the related objs on end frame connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrStructRoot">
            <summary>
            Unable to get Catalog StructRoot object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCSOccObject">
            <summary>
            Unable to create occurrence object from the given cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidTypeCategory">
            <summary>
            Invalid TypeCategory  passed for the member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidType">
            <summary>
            Invalid Type passed for the member.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetSplitType">
            <summary>
            Invalid call to the set method for split type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInputObjects">
            <summary>
            Unable to get the input objects from split connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSplitMemberConnection">
            <summary>
            Unable to create split member connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrAddSplitter">
            <summary>
            Unable to get the Helper object from Split member connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrValidateParents">
            <summary>
            Error while validating the input objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetParents">
            <summary>
            Unable to set the parent objects on SplitMemberConnection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSplitParentStatus">
            <summary>
            Unable to set the Split Status on MemberConnection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCGetPosition">
            <summary>
            Failed to get the position of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCGetMemberSplitType">
            <summary>
            Failed to get the member split type of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCSetMemberSplitType">
            <summary>
            Failed to set the member split type of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSCGetParents">
            <summary>
            Failed to get the parents of the split connection
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCreateSketchingPlane">
            <summary>
            Failed to create sketching plane for the Slab based on the given plane definition.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNotPointOn">
            <summary>
            This exception is thrown when the member system is not point-on.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnMemberEnd">
            <summary>
            This exception is thrown when failed to get the point-on member end from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnMemberEnd">
            <summary>
            This exception is thrown when failed to set the point-on member end in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnPositionRule">
            <summary>
            This exception is thrown when failed to get the point-on position rule from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnPositionRule">
            <summary>
            This exception is thrown when failed to set the point-on position rule in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnRatio">
            <summary>
            This exception is thrown when failed to get the point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnRatio">
            <summary>
            This exception is thrown when failed to set the point-on ratio value in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSetPointOnRatio">
            <summary>
            This exception is thrown when invalid point-on ratio value passed for this frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnDistance">
            <summary>
            This exception is thrown when failed to get the point-on distance value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnDistance">
            <summary>
            This exception is thrown when failed to set the point-on distance value in the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSetPointOnDistance">
            <summary>
            This exception is thrown when invalid point-on distance value passed for this frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnLocation">
            <summary>
            This exception is thrown when member system is not point-on.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPointOnMemberEnd">
            <summary>
            This exception is thrown when unexpected member end rule found in frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidPointOnPositionRule">
            <summary>
            This exception is thrown when unexpected point-on position rule found in frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetPointOnDistanceRatio">
            <summary>
            This exception is thrown when failed to get the point-on distance or point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMeasurePointOnDistance">
            <summary>
            This exception is thrown when failed to measure the point-on distance value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMeasurePointOnRatio">
            <summary>
            This exception is thrown when failed to measure the point-on ratio value from the frame connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetCodeListTableName">
            <summary>
            This exception is thrown when failed to get ToDo record Codelist table name from given business object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndPointsOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set end points on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndPointsOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to get end points on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnPositionRuleOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on position rule if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnMemberEndOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on member end if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnLocationOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on location if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnDistanceOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on distance if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetPointOnRatioOnCurvedMemberSystem">
            <summary>
            This error is raised when attempting to set point-on ratio if the frame connection is on a curved member system.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrNullSketch3dOnCurvedMemberSystem">
            <summary>
            This error is raised when the sketch points of a curved member system cannot be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncompatibleSketch3dPathAtStart">
            <summary>
            This error is raised when the member system end point is the same as the start of the related object position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncompatibleSketch3dPathAtEnd">
            <summary>
            This error is raised when the member system start position is the same as the end of the related object position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetReference">
            <summary>
            This error is raised when unexpected failure in getting reference object from proxy object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetClipSurfaceFromPlanes">
            <summary>
            This error is raised when unexpected failure in getting the clip surfaces from planes.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrMixedTypeSupportedObjects">
            <summary>
            This exception is thrown when supported object collection contain points and equipments together.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrEmptySketchPointCollOnCurvedMemberSystem">
            <summary>
            This exception is thrown when sketch points could not be retrieved.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSupportedObjCountForEquipFndn">
            <summary>
            This exception is thrown when supported object collection contains more than one point.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrWidthAttribMissing">
            <summary>
            A required attribute, Width, is missing on the Cross Section. Please select another Cross Section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrDepthAttribMissing">
            <summary>
            A required attribute, Depth, is missing on the Cross Section. Please select another Cross Section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the start X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the start X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartXRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the start X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartXRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the start X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartYRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartYRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartZRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the start Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetStartZRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the start Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the end X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndXDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the end X displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndYDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Y displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndZDisplacement">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Z displacement on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndXRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the end X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndXRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the end X rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndYRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndYRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Y rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndZRotation">
            <summary>
            Error message displayed when there is an exception thrown while getting the end Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrSetEndZRotation">
            <summary>
            Error message displayed when there is an exception thrown while setting the end Z rotation on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetStartMemberRelease">
            <summary>
            Error message displayed when there is an exception thrown while getting the start member release on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrGetEndMemberRelease">
            <summary>
            Error message displayed when there is an exception thrown while getting the end member release on a member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrIncorrectMemberRelease">
            <summary>
            Error message displayed when setting the struct fixity on a member part and the value is not Free (0) or Fixed (1).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrCannotSetOutwardNormal">
            <summary>
            Unable to set the outward normal to the given plane.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.ErrInvalidSurface">
            <summary>
            This operation is only supported for persistent geometries.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.DEFAULT_RESOURCE">
            <summary>
            Structure localizer resource.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SpsResourceIDs.DEFAULT_ASSEMBLY">
            <summary>
            Structure localizer assembly.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSystem">
            <summary>
            MemberSystem class is the logical collection of member parts. It maintains the design basis and physical alignment of the member
            parts for analysis, design, and manufacturing.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ProfileSystem">
            <summary>
            Provides generalization of all entities supporting profile-like behavior and functionality. 
            Base class for all ProfileSystem classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Profile">
            <summary>
            Provides generalization of all entities supporting profile-like behavior and functionality. 
            Base class for all Profile classes.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="oChild"> A child to which a parent/child relationship should be created. </param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the AddSystemChild method.
            <code>
            Dim oParent As ISystem 
            Dim oChild As ISystemChild 
            oParent.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The new name.</param>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim oProfileSystem As ProfileSystem = oMemberSystemSupported
            oProfileSystem.SetUserDefinedName("Profile System")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connectable ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <example>This is an example of the GetConnectablePorts method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oGetConnectablePorts As ReadOnlyCollection(Of IPort) = oProfile.GetConnectablePorts(PortType.Face)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the the GetConnectedPorts method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oGetConnectedPorts As ReadOnlyCollection(Of IPort) = oProfile.GetConnectedPorts(PortType.Edge)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the GetPorts method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oGetPorts As ReadOnlyCollection(Of IPort) = oProfile.GetPorts(PortType.Centerline)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Profile.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="oConnectable"> A connectable object (IConnectable). </param>
            <param name="oConnectionEnum"> A read-only collection of connection objects (IConnection). </param>
            <returns> True, if the object is connected; False, otherwise. </returns>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Dim oProfile As ProfileSystem = oMemberSystemSupported
            Dim oConnectable As IConnectable
            Dim oConnectionEnum As ReadOnlyCollection(Of IConnection)
            Dim bIsConnectedTo As Boolean = oProfile.IsConnectedTo(oConnectable, oConnectionEnum)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a run.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.Range">
            <summary>
            Gets the range box representing the range of the profile system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.SystemChildren">
            <summary>
            Gets a read-only collection of this object's system children.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.SystemParent">
            <summary>
            Gets and sets the system parent of this object.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Profile.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IContinuity">
            <summary>
            Interface realized by all splittable entities to specify the continuity and priority.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IContinuity.ContinuityType">
            <summary>
            Continuity type property.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IContinuity.PriorityNumber">
            <summary>
            Priority number property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.#ctor">
            <summary>
            Constructor for the ProfileSystem class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.GetParts">
            <summary>
            Gets all the children parts of the profile system. This is defined as abstract 
            on the ProfileSystem class to enforce all the derived classes to implement 
            this.
            </summary>
            <returns>
            Read-only collection of ProfilePart objects.
            </returns>
            <example>This is an example of the GetParts method.
            <code>
            Dim oProfileSystem As ProfileSystem = oMemberSystemSupported
            Dim oGetParts As ReadOnlyCollection(Of ProfilePart) = oProfileSystem.GetParts()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.AddSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Add the splitter object on the splitting entity.
            </summary>
            <param name="splitter">Collection of business objects which will split the entity.  The collection can be of
            type:  ProfileSystem, PlateSystem, and GridPlane.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.AddSplitters(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Add the splitter objects on the splitting entity.  On commit, split connections using split type of SplitFirst
            will be created.
            </summary>
            <param name="splitters">Collection of business objects which will split the entity.  The collection can be of
            type:  ProfileSystem, PlateSystem, and GridPlane.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.GetSplit(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Get the split object from the splitting entity given the splitter.
            </summary>
            <param name="splitter">The business object that is splitting the entity.  The collection can be of
            type:  ProfileSystem, PlateSystem, and GridPlane.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.GetSplitConnections(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Returns particular split/logical connection resulting from a given splitter.
            </summary>
            <param name="splitter">The business object that is splitting the entity.  The collection can be of
            type:  ProfileSystem, PlateSystem, and GridPlane.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.RemoveAllSplitters">
            <summary>
            Removes all splitters from an entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfileSystem.RemoveSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Removes a splitter from an entity. If a splitter already splits an object, it removes it from the split result.
            </summary>
            <param name="splitter">The business object that is splitting the entity which will be removed.  The collection can be of
            type:  ProfileSystem, PlateSystem, and GridPlane.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.Axis">
            <summary>
            Gets the axis of the profile system. This is defined as abstract
            on the ProfileSystem class to enforce all the derived classes to 
            implement this. For MemberSystem, this is a transient curve which 
            is derived from the logical axis. For StiffenerSystem, it should return 
            the LandingCurve. To set the curve, direct methods on the derived 
            objects are provided.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.ContinuityType">
            <summary>
            Gets or sets the continuity type of the profile system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.PriorityNumber">
            <summary>
            Gets or sets the priority number of the profile system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>      
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.SplitConnections">
            <summary>
            Read-only collection of all split/logical connections currently on the splittable entity.
            </summary>
            <value></value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfileSystem.Splits">
            <summary>
            Get the split objects from the splitting entity.
            </summary>
            <value></value>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IMemberType">
            <summary>
            Interface to get or set type category, type, and priority of the member.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IMemberType.TypeCategory">
            <summary>
            Gets or sets the type category of the member.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IMemberType.Type">
            <summary>
            Gets or sets the type of the member.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IMemberType.Priority">
            <summary>
            Gets or sets the priority of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
             <summary>
             Constructor method to create a member using Sketch3d path.
             </summary>
             <param name="oParentSystem">Parent system under which the member needs to be created.</param>
             <param name="oAxis">Sketch3D axis defining the logical axis of the member.</param>
             <param name="oCrossSection">Cross section of the member.</param>
             <param name="oMaterial">Material of the member.</param>
             <param name="memberType">Type of the member part.</param>
             <param name="typeCategory">Type category of the member part.</param>
             <param name="cardinalPoint">Cardinal point of the cross section.</param>
             <param name="rotationAngle">Rotation angle of the member.</param>
             <param name="bMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
             <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
             <example>This is an example of the MemberSystem constructor.
             <code>
             'Get the catalog helper.
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
             Dim oCatConn As SP3DConnection = oPlant.PlantCatalog
             Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn)
             
             'oRootSystem can be any system which the user want as a parent for the Member System created.
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
             Dim oStructuralSystem As ISystem = New StructuralSystem(oParent)
             
             'Get the cross section.
             Dim oCrossSection As CrossSection = Nothing	
             Dim sRefStdName As String = "AISC-LRFD-3.1"
             Dim sSecType As String = "W"
             Dim sSecName As String = "W8x10"
             oCrossSection = oCatalogStructHelper.GetCrossSection(sRefStdName, sSecType, sSecName)
             
             'This must be instantiated as appropriate with Linefeatures.
             Dim oSketch3dAxis As Sketch3d = Nothing
             'Create the skecth3d obejct
             Dim oSketch3d As New Sketch3D(oPlant)
             'create and customize the Sketch3D here by some technique
             Dim oSketchColl As New Collection(Of SketchPoint)()
            
             Dim oSkPt1 As New SketchPoint(0, -10, 5)
             Dim oSkPt2 As New SketchPoint(0, -15, 5)
             Dim oLF As LineFeature = oSkPt1.CreateLineFeature(oSkPt2)
             oSketchColl.Add(oSkPt1)
             oSketchColl.Add(oSkPt2)
             oSketch3d.SetSketchPoints(oSketchColl)
            
             'Get the material.
             Dim oMaterial As Material = Nothing
             Dim sMatType As String = "Steel - Carbon"
             Dim sMatGrade As String = "A"
             oMaterial = oCatalogStructHelper.GetMaterial(sMatType, sMatGrade)
             
             'Use the helper methods to get the codelist value (integer) for the member type and member category.
             Dim lCategoryType As Integer = MemberHelper.GetMemberCategoryCodeListValue("Beam")
             Dim lMemberType As Integer = MemberHelper.GetMemberTypeCodeListValue("Beam")
             Dim lCardinalpoint As Integer = 8
             Dim dRotationAngle As Double = 0
             Dim bMirror As Boolean = False
             
             'Call the constructor.
             Dim oMemberSystem As New MemberSystem(oStructuralSystem, oSketch3dAxis, oCrossSection, oMaterial, lMemberType, lCategoryType, lCardinalpoint, dRotationAngle, bMirror)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor method to create a member using the start and the end position.
            </summary>
            <param name="oParentSystem">Parent system under which the member needs to be created.</param>
            <param name="oStartPosition">Start position of the member.</param>
            <param name="oEndPosition">End position of the member.</param>
            <param name="oCrossSection">Cross section of the member.</param>
            <param name="oMaterial">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>
            <param name="typeCategory">Type category of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="bMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <example>This is an example of the MemberSystem constructor.
            <code>
            'Get the catalog helper.
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim oCatConn As SP3DConnection = oPlant.PlantCatalog
            Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn)
            
            'oRootSystem can be any system which the user want as a parent for the Member System created.
            Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            Dim oStructuralSystem As ISystem = New StructuralSystem(oParent)
            
            'Get the cross section.
            Dim oCrossSection As CrossSection = Nothing	
            Dim sRefStdName As String = "AISC-LRFD-3.1"
            Dim sSecType As String = "W"
            Dim sSecName As String = "W8x10"
            oCrossSection = oCatalogStructHelper.GetCrossSection(sRefStdName, sSecType, sSecName)
            
            Dim oStartPoint As New Position(0, 0, 0)
            Dim oEndPoint As New Position(3, 0, 0)
            
            'Get the material.
            Dim oMaterial As Material = Nothing
            Dim sMatType As String = "Steel - Carbon"
            Dim sMatGrade As String = "A"
            oMaterial = oCatalogStructHelper.GetMaterial(sMatType, sMatGrade)
            
            'Use the helper methods to get the codelist value (integer) for the member type and member category.
            Dim lCategoryType As Integer = MemberHelper.GetMemberCategoryCodeListValue("Beam")
            Dim lMemberType As Integer = MemberHelper.GetMemberTypeCodeListValue("Beam")
            Dim lCardinalpoint As Integer = 8
            Dim dRotationAngle As Double = 0
            Dim bMirror As Boolean = False
            
            'Call the constructor.
            Dim oMemberSystem As New MemberSystem(oStructuralSystem, oStartPoint, oEndPoint, oCrossSection, oMaterial, lMemberType, lCategoryType, lCardinalpoint, dRotationAngle, bMirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
             <summary>
             Constructor method to create a member using the related objects and can be any of the following:
             member system, point, surface, frame connection, plane, or grid line. 
             Each combination of objects should result in a unique position on that end. 
             <para>Therefore, the 
             following combinations are currently supported on an end: 
             MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
             Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
             Gridline/Gridline, and Gridplane/Gridline.</para>
             </summary>
             <param name="oParentSystem">Parent system under which the member needs to be created.</param>
             <param name="relatedObjectsAtStart">Related objects at the start.</param>
             <param name="relatedObjectsAtEnd">Related objects at the end.</param>
             <param name="oCrossSection">Cross section of the member.</param>
             <param name="oMaterial">Material of the member.</param>
             <param name="memberType">Type of the member part.</param>
             <param name="typeCategory">Type category of the member part.</param>
             <param name="cardinalPoint">Cardinal point of the cross section.</param>
             <param name="rotationAngle">Rotation angle of the member.</param>
             <param name="bMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
             <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
             <example>This is an example of MemberSystem constructor.
             <code>
             'Get the catalog helper.
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
             Dim oCatConn As SP3DConnection = oPlant.PlantCatalog
             Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn)
             
             'oRootSystem can be any system which the user want as a parent for the Member System created.
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
             Dim oStructuralSystem As ISystem = New StructuralSystem(oParent)
             
             'Get the cross section.
             Dim oCrossSection As CrossSection = Nothing	
             Dim sRefStdName As String = "AISC-LRFD-3.1"
             Dim sSecType As String = "W"
             Dim sSecName As String = "W8x10"
             oCrossSection = oCatalogStructHelper.GetCrossSection(sRefStdName, sSecType, sSecName)
             
             'This related object can be any business object; for example, this is connected to an existing member system.
             Dim oFC1 As FrameConnection = oExistingMemberSystem.FrameConnection(MemberAxisEnd.End)
             Dim cBOS As New Collection(Of BusinessObject)()
             cBOS.Add(DirectCast(oFC1, BusinessObject))
             
             'Create two intersecting lines to connect.
             Dim oLine3d1 As New Line3d(New Position(3, 0, -3), New Position(3, 0, 0))
             Dim oLine3d2 As New Line3d(New Position(3, -3, 0), New Position(3, 0, 0))
             Dim cBOE As New Collection(Of BusinessObject)()
             cBOE.Add(DirectCast(oLine3d1, BusinessObject))
             cBOE.Add(DirectCast(oLine3d2, BusinessObject)) 
            
             'Get the material.
             Dim oMaterial As Material = Nothing
             Dim sMatType As String = "Steel - Carbon"
             Dim sMatGrade As String = "A"
             oMaterial = oCatalogStructHelper.GetMaterial(sMatType, sMatGrade)
             
             Dim lCategoryType As Integer = MemberHelper.GetMemberCategoryCodeListValue("Beam")
             Dim lMemberType As Integer = MemberHelper.GetMemberTypeCodeListValue("Beam")
             Dim lCardinalpoint As Integer = 8
             Dim dRotationAngle As Double = 0
             Dim bMirror As Boolean = False
             
             'Call the constructor.
             Dim oMemberSystem As New MemberSystem(oStructuralSystem, cBOS, cBOE, oCrossSection, oMaterial, lMemberType, lCategoryType, lCardinalpoint, dRotationAngle, bMirror)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
             <summary>
             Constructor to create a member system using Sketch3d path.
             </summary>
             <param name="parentSystem">Parent system under which the member needs to be created.</param>
             <param name="axis">Sketch3D axis defining the logical axis of the member.</param>
             <param name="crossSection">Cross section of the member.</param>
             <param name="material">Material of the member.</param>
             <param name="memberType">Type of the member part.</param>        
             <param name="cardinalPoint">Cardinal point of the cross section.</param>
             <param name="rotationAngle">Rotation angle of the member.</param>
             <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
             <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
             <example>This is an example of the MemberSystem constructor.
             <code>
             'Get the catalog struct helper.
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
             Dim catalogStructHelper As New CatalogStructHelper()
             
             'rootSystem can be any system which the user want as a parent for the Member System created.
             Dim parent As BusinessObject = DirectCast(rootSystem, BusinessObject)
             Dim structuralSystem As ISystem = New StructuralSystem(parent)
             
             'Get the cross section.
             Dim referenceStandardName As String = "AISC-LRFD-3.1"
             Dim sectionType As String = "W"
             Dim sectionName As String = "W8x10"
             Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionType, sectionName)
             
             'Create and customize the Sketch3D here by some technique
             Dim sketch3dAxis As New Sketch3D(plant)
             Dim colSketchPoint As New Collection(Of SketchPoint)()
            
             Dim sketchPoint1 As New SketchPoint(0, -10, 5)
             Dim sketchPoint2 As New SketchPoint(0, -15, 5)
             Dim lineFeature As LineFeature = sketchPoint1.CreateLineFeature(sketchPoint2)
             colSketchPoint.Add(sketchPoint1)
             colSketchPoint.Add(sketchPoint2)
             sketch3dAxis.SetSketchPoints(colSketchPoint)
            
             'Get the material.
             Dim materialType As String = "Steel - Carbon"
             Dim materialGrade As String = "A"
             Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
             
             Dim memberType As Integer = MemberType.Beam
             Dim cardinalPoint As Integer = 8
             Dim rotationAngle As Double = 0
             Dim mirror As Boolean = False
             
             'Call the constructor.
             Dim memberSystem As New MemberSystem(structuralSystem, sketch3dAxis, crossSection, material, memberType, _
                                                     cardinalPoint, rotationAngle, mirror)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor to create a member system using the start and the end position.
            </summary>
            <param name="parentSystem">Parent system under which the member needs to be created.</param>
            <param name="posStart">Start position of the member.</param>
            <param name="posEnd">End position of the member.</param>
            <param name="crossSection">Cross section of the member.</param>
            <param name="material">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>        
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <example>This is an example of the MemberSystem constructor.
            <code>
            'Get the catalog struct helper.
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'rootSystem can be any system which the user want as a parent for the Member System created.
            Dim parent As BusinessObject = DirectCast(rootSystem, BusinessObject)
            Dim structuralSystem As ISystem = New StructuralSystem(parent)
            
            'Get the cross section.
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionType As String = "W"
            Dim sectionName As String = "W8x10"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionType, sectionName)
            
            Dim posStart As New Position(0, 0, 0)
            Dim posEnd As New Position(3, 0, 0)
            
            'Get the material.
            Dim materialType As String = "Steel - Carbon"
            Dim materialGrade As String = "A"
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            Dim memberType As Integer = MemberType.Beam
            Dim cardinalPoint As Integer = 8
            Dim rotationAngle As Double = 0
            Dim mirror As Boolean = False
            
            'Call the constructor.
            Dim memberSystem As New MemberSystem(structuralSystem, posStart, posEnd, crossSection, material, _
                                                    memberType, cardinalPoint, rotationAngle, mirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor to create a member using the related objects and can be any of the following:
            member system, point, surface, frame connection, plane, or grid line. 
            Each combination of objects should result in a unique position on that end. 
            <para>Therefore, the 
            following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
            GridLine/GridLine, and GridPlane/GridLine.</para>
            </summary>
            <param name="parentSystem">Parent system under which the member needs to be created.</param>
            <param name="relatedObjectsAtStart">Related objects at the start.</param>
            <param name="relatedObjectsAtEnd">Related objects at the end.</param>
            <param name="crossSection">Cross section of the member.</param>
            <param name="material">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when there is an error in getting point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error in setting point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting point-on member end in the frame connection.</exception>
            <example>This is an example of MemberSystem constructor.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'In this example the member is being created directly under the root system.
            Dim parentSystem As ISystem = plant.RootSystem
            
            'Get the cross section.
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "W8x10"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            
            'The related object collection can have any collection of business objects which reslt in a unique position
            'for example, this member system is connected to an existing member system frame connection at start
            ' and 2 grid lines at the end.
            Dim frameConnection As FrameConnection = existingMemberSystem.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjectsAtStart As New Collection(Of BusinessObject)()
            relatedObjectsAtStart.Add(CType(frameConnection, BusinessObject))
            
            'Add the existing intersecting gridlines to the related object collection at end.
            Dim relatedObjectsAtEnd As New Collection(Of BusinessObject)()
            relatedObjectsAtEnd.Add(CType(existingGridLine1, BusinessObject))
            relatedObjectsAtEnd.Add(CType(existingGridLine2, BusinessObject))
            
            'Get the material.
            Dim materialType As String = "Steel - Carbon"
            Dim materialGrade As String = "A"
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            Dim memberType As Integer = MemberType.Beam
            Dim cardinalpoint As Integer = 8
            Dim rotationAngle As Double = 0
            Dim mirror As Boolean = False
            
            'Call the constructor.
            Dim oMemberSystem As New MemberSystem(parentSystem, relatedObjectsAtStart, relatedObjectsAtEnd, crossSection, _
                                                    material, memberType, cardinalpoint, rotationAngle, mirror)        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.MemberSystem)">
            <summary>
            Copy constructor for member system.
            </summary>
            <param name="parentSystem">Parent system of the member.</param>
            <param name="memberSystemToCopied">Member system being copied.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when there is an error in getting point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting point-on distance value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting point-on member end in the frame connection.</exception>
            <example>This is an example of the MemberSystem copy constructor.
            <code>
            Dim memberSystemCopy As New MemberSystem(structuralSystem, memberSystemToCopied)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Constructor to create a curved member using Sketch3d path and related objects collections which can be any of the following:
            member system, point, surface, frame connection, plane, or grid line. 
            Each combination of objects should result in a unique position on that end. 
            <para>Therefore, the following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
            GridLine/GridLine, and GridPlane/GridLine.</para>
            </summary>
            <param name="parentSystem">Parent system under which the member needs to be created.</param>
            <param name="axis">Sketch3D axis defining the logical axis of the member.</param>
            <param name="relatedObjectsAtStart">Related objects at the start.  This collection can be null.</param>
            <param name="relatedObjectsAtEnd">Related objects at the end.  This collection can be null.</param>
            <param name="crossSection">Cross section of the member.</param>
            <param name="material">Material of the member.</param>
            <param name="memberType">Type of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the cross section.</param>
            <param name="rotationAngle">Rotation angle of the member.</param>
            <param name="isMirror">Boolean value to determine whether mirror is possible on the rotation.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNotSupportedException">"Built-up cross section cannot be used for creating a member using Sketch3D.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNoNameRuleException">No name rule is associated to the given object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Failed to get or set the Setch3D path.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Sketch3D path is not compatible with the given related object at the start or end of the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberTypeException">Codelist item for MemberType does not exist.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException">Invalid cardinal point being set.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Related objects does not provide a valid constraint for the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get end points on the curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Failed to set the part name on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Related objects at start or end cannot be set on the frame connection of the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">Unable to disconnect the related objects on the start or end frame connection of the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Failed to set the point-on member end in the frame connection.</exception>
            <example>This is an example of MemberSystem constructor.
            <code>
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim catalogStructHelper As New CatalogStructHelper()
            
            'In this example the member is being created directly under the root system.
            Dim parentSystem As ISystem = plant.RootSystem
            
            'Get the cross section.
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "W8x10"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            
            'The related object collection can have any collection of business objects which reslt in a unique position
            'for example, this member system is connected to an existing member system frame connection at start
            'and 2 grid lines at the end.
            
            Dim frameConnection As FrameConnection = existingMemberSystem.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjectsAtStart As New Collection(Of BusinessObject)()
            relatedObjectsAtStart.Add(CType(frameConnection, BusinessObject))
            
            'Add the existing intersecting gridlines to the related object collection at end.
            Dim relatedObjectsAtEnd As New Collection(Of BusinessObject)()
            relatedObjectsAtEnd.Add(CType(existingGridLine1, BusinessObject))
            relatedObjectsAtEnd.Add(CType(existingGridLine2, BusinessObject))
            
            'Get the material.
            Dim materialType As String = "Steel - Carbon"
            Dim materialGrade As String = "A"
            Dim material As Material = catalogStructHelper.GetMaterial(materialType, materialGrade)
            
            Dim memberType As Integer = MemberType.Beam
            Dim cardinalpoint As Integer = 8
            Dim rotationAngle As Double = 0
            Dim mirror As Boolean = False
            
            'Create SketchPoints.
            Dim sketchPoint1 As New SketchPoint(30, 1, 0)
            Dim sketchPoint2 As New SketchPoint(35, 5, 0)
            Dim sketchPoint3 As New SketchPoint(40, 1, 0)
            Dim sketchPoints As New Collection(Of SketchPoint)()
            Dim arcBy3Points As ArcBy3PointsFeature = sketchPoint1.CreateArcBy3PointsFeature(sketchPoint2, sketchPoint3)
            sketchPoints.Add(sketchPoint1)
            sketchPoints.Add(sketchPoint2)
            sketchPoints.Add(sketchPoint3)
            Dim sketch3d As New Sketch3D(oPlant)
            sketch3d.SetSketchPoints(sketchPoints)        
            
            'Call the constructor.
            Dim oMemberSystem As New MemberSystem(parentSystem, sketch3d, relatedObjectsAtStart, relatedObjectsAtEnd, crossSection, _
                                                    material, memberType, cardinalpoint, rotationAngle, mirror)        
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetParts">
            <summary>
            Gets the collection of profile parts.
            </summary>
            <returns>Collection of ProfilePart objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartsException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetParts method.
            <code>
            Dim oProfilePartColl As ReadOnlyCollection(Of ProfilePart) = oMemberSystem.GetParts()
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetAxis(Ingr.SP3D.Common.Middle.Curve3d)">
            <summary>
            Sets the curve geometry on the logical axis of the member system.
            </summary>
            <param name="axis">Curve3d object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetAxisException">Unexpected failure in the method.</exception>
            <example>Example for the SetAxis method.
            <code>
            Dim curve3d As Curve3d = memberSystem.Axis
            anotherMemberSystem.SetAxis(curve3d) 
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetRelatedObjects(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
             Gets the related objects of the frame connection at the start of the member system.
            </summary>
            <param name="axisEnd">Enumerated value for axis end - start or end.</param>
            <returns> Returns the related objects of the frame connection at the start end of the member system.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRelatedObjectsException">Unexpected failure in the method.</exception>
            <example> This is an example of the GetRelatedObjects method.
            <code>
            Dim colRelatedObjects As Collection(Of BusinessObject) = memberSystem.GetRelatedObjects(MemberAxisEnd.End)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Sets the related objects at the given end of the member system.
            These related objects can be any of the following:
            Member system, Point, Surface, Frame connection, Plane, or Grid line. 
            <para>Each combination of objects should result in a unique position on that end. Therefore, 
            following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d (projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
            Gridline/Gridline, Gridplane/Gridline.</para>
            This also accepts the empty collection to disconnect the member system from its related objects if any.
            </summary>
            <param name="colRelatedObjs">Related objects that need to be set on the given end of the member system.</param>
            <param name="axisEnd">Enumerated value to define the end of the member.</param>
            <example>This is an example of the SetRelatedObjects method.
            <code>
            'The related object collection can have any set of business objects which result in a unique position;
            'for example, this member system is connected to an existing member system frame connection at its start.
            Dim frameConnection As FrameConnection = existingMemberSystem.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjects As New Collection(Of BusinessObject)()
            relatedObjects.Add(CType(frameConnection, BusinessObject)) 
            memberSystem.SetRelatedObjects(relatedObjects, MemberAxisEnd.Start)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetEndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets the start position and end position of a member system.
            </summary>
            <return name="posStart">Start position of the member system.</return>
            <return name="posEnd">End position of the member system.</return>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetEndPoints method.
            <code>
            Dim posStart As Position
            Dim posEnd As Position
            memberSystem.GetEndPoints(posStart, posEnd)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetEndPoints(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the start and end position of the member system. Throws an exception if curved is True.
            </summary>
            <param name="posStart">Start position of the member system.</param>
            <param name="posEnd">End position of the member system.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">Unexpected failure in the method.</exception>
            <example>This is an example of the SetEndPoints method.
            <code>
            Dim posStart As New Position(1.0, 1.0, 1.0)
            Dim posEnd As New Position(3.0, 1.0, 1.0)
            memberSystem.SetEndPoints(posStart, posEnd)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SetSketch3DEndPosition(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the Sketch3D object at the specified end position.
            </summary>
            <param name="axisEnd">The axis end.</param>
            <param name="positionAtEnd">The position at end.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system sketched 3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get end points on curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Skech 3d path is not compatible with the given related object at the start or end of the member.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetPart(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the profile part at the start point of the member system.
            </summary>
            <param name="axisEnd">Enumerated value for axis end - start or end.</param>
            <returns>Profile part at the start position of the member system. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetPart method.
            <code>
            Dim profilePart As ProfilePart = memberSystem.GetPart(MemberAxisEnd.End)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetPartsAtPosition(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Structure.Middle.ProfilePart@,Ingr.SP3D.Structure.Middle.ProfilePart@)">
            <summary>
            Gets all the member parts at a certain position of the member system.
            </summary>
            <param name="posWhere">Position on the member system.</param>
            <param name="previousPart">Previous part at that position.</param>
            <param name="nextPart">Next part at that position.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartsAtPositionException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetPartsAtPosition method.
            <code>
            Dim previousPart As ProfilePart = Nothing
            Dim nextPart As ProfilePart = Nothing
            Dim posWhere As New Position(0, 0, 0)
            memberSystem.GetPartsAtPosition(posWhere, previousPart, nextPart)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.FrameConnection(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the frame connection at the end point of the member system.
            </summary>
            <param name="axisEnd">Enumerated value for axis end - start or end.</param>
            <returns>Frame connection at the end position of the member system.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException">Unexpected failure in the method.</exception>
            <example>This is an example of the FrameConnection method.
            <code>
            Dim frameConnection As FrameConnection = memberSystem.FrameConnection(MemberAxisEnd.End)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetMatrixAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets the transformation matrix from the axis rotation at a given position along the member.
            </summary>
            <param name="posAlong">Position along a member system.</param>
            <returns>Matrix at a given position along the member.</returns>
            <exception cref="T:System.ArgumentNullException">Exception is raised if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetMatrixAtPosition method.
            <code>
            Dim matrix As Matrix4X4 = memberSystem.GetMatrixAtPosition(New Position(0, 0, 0))
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitter(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.MemberSplitType)">
            <summary>
            Adds the splitter object on the splitting member system.
            </summary>
            <param name="splitter">The business object that is splitting the member system.  The Splitter can be of
            type:  MemberSystem, GridPlane, GridElevationPlane and PlateSystem. </param>
            <param name="splitType">Type of the split.</param>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">MemberSplitType is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Unable to create split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Unable to get the Helper object from split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Error while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Unable to set the parent objects on SplitMemberConnection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Unable to set the Split Status on MemberConnection.</exception>
            <example>This is an example of the AddSplitters method.
            <code>
            memberSystem.AddSplitter(splitterMemberSystem, MemberSplitType.SplitBoth)
            MiddleServiceProvider.TransactionMgr.Commit("Split members.")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitters(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberSplitType)">
            <summary>
            Adds the splitter objects on the splitting member system.
            </summary>
            <param name="splitters">Collection of business objects which will split the member system.  The collection can be of
            type:  ProfileSystem, PlateSystem, and GridPlane.</param>
            <param name="splitType">Type of the split.</param>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">MemberSplitType is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action. </exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Unable to create split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Unable to get the Helper object from split member connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Error while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Unable to set the parent objects on SplitMemberConnection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Unable to set the Split Status on MemberConnection. </exception>
            <example>This is an example of the AddSplitters method.
            <code>
            Dim colSplitters As New Collection(Of BusinessObject)
            colSplitters.Add(splitterMemberSystem)
            colSplitters.Add(gridPlane)
             
            memberSystem.AddSplitters(colSplitters, MemberSplitType.SplitBoth)
            MiddleServiceProvider.TransactionMgr.Commit("Place Splits")
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Gets the transformation matrix of the member rotation.
            </summary>
            <param name="transformMatrix">Matrix4X4 object.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure in the method.</exception>
            <example>This is an example of the Transform method.
            <code>
            Dim transformMatrix As New Matrix4X4()
            transformMatrix.SetIdentity()
            memberSystem.Transform(transformMatrix)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this member system.
            </summary>
            <param name="curveScopeType">Enumerator which shows the planarity of this member system.</param>
            <param name="normalVector">The normal vector of this member system.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim curveScopeType As CurveScopeType
            Dim normalVector As Vector
            memberSystem.ScopeNormal(curveScopeType, normalVector)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes the center, area, moments of inertia, and principle axes of lamina (e.g., a sheet metal) bounded by a closed planar curve.
            </summary>
            <param name="area">Area of the the lamina.</param>
            <param name="posCentroid">Centroid of the lamina.</param>
            <param name="inertiaX">Moment of inertia to centroidal X-axis.</param>
            <param name="inertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="inertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="majorPrincipleInertia">Principle moment of inertia to major axis.</param>
            <param name="minorPrincipleInertia">Principle moment of inertia to minor axis.</param>
            <param name="polarInertia">Polar moment of inertia to the normal.</param>
            <param name="majorIAxis">Major principle axis.</param>
            <param name="minorIAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is the example of AreaCentroidMomentsOfInertia method.
            <code>
            Dim area, inertiaX, inertiaY, inertiaXY, majorPrincipleInertia, minorPrincipleInertia, polarInertia As Double
            Dim posCentroid As Position
            Dim majorIAxis, minorIAxis As Vector
            memberSystem.AreaCentroidMomentsOfInertia(area, posCentroid, inertiaX, inertiaY, inertiaXY, _
                         majorPrincipleInertia, minorPrincipleInertia, polarInertia, majorIAxis, minorIAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Computes length, centroid, moments of inertia, and principle axes of an open or closed thin wire.
            </summary>
            <param name="length">Length of the wire.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="inertiaX">Moment of inertia to centroidal X-axis.</param>
            <param name="inertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="inertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="principleInertiaU">Principle moment of inertia to uDir.</param>
            <param name="principleInertiaV">Principle moment of inertia to vDir.</param>
            <param name="principleInertiaN">Principle moment of inertia to nDir.</param>
            <param name="axisU">Major principle axis.</param>
            <param name="axisV">Minor principle axis.</param>
            <param name="axisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim length, inertiaX, inertiaY, inertiaZ, principleInertiaU, principleInertiaV, principleInertiaN As Double
            Dim posCentroid As Position
            Dim axisU, axisV, axisN As Vector
            memberSystem.CentroidInertiaForWire(length, posCentroid, inertiaX, inertiaY, inertiaZ, _
                         principleInertiaU, principleInertiaV, principleInertiaN, axisU, axisV, axisN)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of this member system.
            </summary>
            <param name="posStart">Start position.</param>
            <param name="posEnd">End position.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <example>This is an example of the EndPoints method.
            <code>
            Dim posStart, posEnd As Position
            memberSystem.EndPoints(posStart, posEnd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on this member system.
            </summary>
            <param name="posPoint">Point to determine if on this member system.</param>
            <returns>True if the point is on this member system; False if the point is not on this member system.</returns>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim isPointOn As Boolean = memberSystem.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this member system and the input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="distance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Unexpected failure while determining the distance between this curve and the input point.</exception>      
            <example>This is an example of DistanceBetween method.
            <code>
            Dim point3d As New Point3d(1.5, 0, 0)
            Dim distance As Double
            Dim posSrcPos As Position
            memberSystem.DistanceBetween(point3d, distance, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this member system and the input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="distance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim distance As Double
            Dim posSrcPos, posInPos As Position
            memberSystem.DistanceBetween(inCurve, distance, posSrcPos, posInPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this member system and the input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="distance">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input surface at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim distance As Double 
            Dim posSrcPos, posInPos As Position 
            memberSystem.DistanceBetween(inSurface, distance, posSrcPos, posInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between this member system and another curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colIntPos">Output collection of intersection points.</param>
            <param name="colOverlapPos">Output collection of overlap points.</param>
            <param name="geometryIntersectionType">Enumerator describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometryIntersectionType As GeometryIntersectionType
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            memberSystem.Intersect(inCurve, colIntPos, colOverlapPos, geometryIntersectionType)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Finds the intersection between member system and a surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Collection of curve objects.</param>
            <param name="geometryIntersectionType">Enumerated value for the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim geometryIntersectionType As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            memberSystem.Intersect(inSurface, colCurves, geometryIntersectionType)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self-intersections and overlaps of this member system.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the SelfIntersect method.
            <code>
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            memberSystem.SelfIntersect(colIntPos, colOverlapPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Finds a point along a member system at a given distance from the given 
            start point on the member system. If the given point does not lie on the member system, 
            it is along normal to the member system (minimum distance). 
            </summary>
            <param name="posStart">Position to start from.</param>
            <param name="distance">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create COM Geometry Factory</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim posStart As New Position(1, 1, 1)
            Dim distance As Double = 1.0
            Dim posPointDistanceAlong As Position = memberSystem.PointAtDistanceAlong(posStart, distance)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along a member system at a given distance from the start of the member system.
            </summary>
            <param name="distance">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create COM Geometry Factory</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim distance As Double = 1.0
            Dim posPointDistanceAlong As Position = memberSystem.PointAtDistanceAlong(distance)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on this member system along given vector from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <param name="projectionVector">Vector to project along. If optional argument is null,
                                  then the function projects along vector normal to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim pos As New Position(1, 1, 0)
            Dim projectionVector As New Vector(0, 0, 1)
            Dim posProjectPoint As Position = memberSystem.ProjectPoint(projectionVector, oVecProj)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on this member system from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim pos As New Position(1, 1, 0)
            Dim posProjectPoint As Position = memberSystem.ProjectPoint(pos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point on member system.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the TangentAtPoint method.
            <code>
            Dim pos As New Position(1, 1, 0)
            Dim tangentPoint As Vector = memberSystem.ProjectPoint(pos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Adds the splitter object on the member system.  On commit, split connections of member split type SplitFirst
            are created.
            </summary>
            <param name="splitter">The business objects which will split the member system.  The object can be of
            type:  MemberSystem, GridPlane, GridElevationPlane and PlateSystem.</param>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">MemberSplitType is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Unable to create a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Unable to get the Helper object from a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Error while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Unable to set the parent objects on a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Unable to set the Split Status on a split connection.</exception>
            <example>This is an example of the AddSplitters method.
            <code>        
            memberSystem.AddSplitter(splitterMemberSystem)
            MiddleServiceProvider.TransactionMgr.Commit("Place Split")
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.AddSplitters(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Adds the splitter objects on the splitting member system.  On commit, split connections using split type of SplitFirst
            are created.
            </summary>
            <param name="splitters">Collection of business objects which will split the member system.  The collection can be of
            type:  MemberSystem, GridPlane, GridElevationPlane and PlateSystem..</param>
            <exception cref="T:System.ArgumentNullException">Splitters collection is null.</exception>
            <exception cref="T:System.ArgumentException">Splitters collection is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">MemberSplitType is not a valid enumerated value.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">Unable to create split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">Unable to get the Helper object from a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">Error while validating the input objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">Unable to set the parent objects on a split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">Unable to set the Split Status on a split connection. </exception>
            <example>This is an example of the AddSplitters method.
            <code>        
            Dim colSplitters As New Collection(Of BusinessObject)
            colSplitters.Add(splitterMemberSystem)
            colSplitters.Add(gridPlane)
             
            memberSystem.AddSplitters(colSplitters)
            MiddleServiceProvider.TransactionMgr.Commit("Place Splits")
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetSplit(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the split object from the splitting member system given the splitter.
            </summary>
            <param name="splitter">The business object that is splitting the member system.  Splitter can be of
            type:  MemberSystem, GridPlane, GridElevationPlane and PlateSystem.</param>
            <returns>The split object from the member system.</returns>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Unexpected failure in method SplitConnections of the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InputObjectsException">Unable to get the input objects from split connection.</exception>
            <example>This is an example of the GetSplit method.
            <code>        
            Dim split As ISplit = memberSystem.GetSplit(gridPlane)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.GetSplitConnections(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Returns the particular split connection resulting from a given splitter.
            </summary>
            <param name="splitter">The business object that is splitting the member system.  The Splitter can be of
            type:  MemberSystem, GridPlane, GridElevationPlane and PlateSystem. </param>
            <returns>Read-only collection of split connections for a particular splitter.</returns>
            <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
            <example>This is an example of the GetSplitConnections method.
            <code>        
            Dim colSplitConnections As ReadOnlyCollection(Of IConnection) = memberSystem.GetSplitConnections(gridPlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.RemoveAllSplitters">
            <summary>
            Removes all splitters from the member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Unexpected failure in the method.</exception>
            <example>This is an example of the RemoveAllSplitters method.
            <code>  
            memberSystem.RemoveAllSplitters()
            MiddleServiceProvider.TransactionMgr.Commit("Remove Splitters")
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.RemoveSplitter(Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Removes a splitter from the member system. If a splitter already splits an object, it removes it from the split result.
             </summary>
             <param name="splitter">The business object that is splitting the member system which will be removed.</param>
             <exception cref="T:System.ArgumentNullException">Splitter business object is null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Unexpected failure in the method.</exception>
            <example>This is an example of the RemoveSplitter method.
             <code>       
             memberSystem.RemoveSplitter(gridPlane)
             MiddleServiceProvider.TransactionMgr.Commit("Remove Splitter")
             </code>
             </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystem.ValidateSplitterType(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Validates the type of the split.
            </summary>
            <param name="splitter">The splitter.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">The object is of the wrong type to support the desired action. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Axis">
            <summary>
            Read-only property to get the axis of the member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AxisException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.PhysicalAxis">
            <summary>
            Read-only property to get the physical axis of the member curve.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException">Unexpected failure while trying to get physical axis of the member system.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Sketch3D">
            <summary>
             Gets or sets the curve object on the logical axis of the member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Curved">
            <summary>
            Read-only property to get the curved property of the member system.
            </summary>
            <returns>True if member system is curved otherwise false.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsCurvedException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Matrix">
            <summary>
            Read-only property to get the transformation matrix from axis rotation.
            </summary>
            <returns>Transformation Matrix4X4 object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMatrixException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.OrientationVector">
            <summary>
            Gets or sets the orientation vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OrientationVectorException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.BetaAngle">
            <summary>
            Gets or sets the beta angle.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BetaAngleException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Mirror">
            <summary>
            Gets or sets the mirror flag.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MirrorException">Unexpected failure in the method.</exception>     
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.AxisPortType">
            <summary>
            Read-only property to get the port index for along port.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Geometry">
            <summary>
            Read-only property to get the port geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.TypeCategory">
            <summary>
            Gets or sets the type category of the member.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeCategoryException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Type">
            <summary>
            Gets or sets the type of the member.
            Setting the type automatically sets the parent Type category value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Priority">
            <summary>
            Gets or sets the priority of the member.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PriorityException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Connectable">
            <summary>
            Read-only property to get the connectable from the member system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Connections">
            <summary>
            Read-only property to get the connections connected to member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectionsException">Unexpected failure while getting the connections of the member system.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.PortType">
            <summary>
            Read-only property to get the port type.
            </summary>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Length">
            <summary>
            Read-only property to get the length of this member system.
            </summary>
            <returns>Length value of this member system.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Area">
            <summary>
            Read-only property to get the area of this member system.
            </summary>
            <returns>Area value of this member system.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Form">
            <summary>
            Read-only property to get the form (closure) of this member system.
            </summary>
            <returns>Enumerated value of this member system closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Scope">
            <summary>
            Read-only property to get the scope (planarity) of this member system.
            </summary>
            <returns>Enumerated value of this member system planarity.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Centroid">
            <summary>
            Read-only property to get the centroid of this member system.
            </summary>
            <returns>Position of centroid of this member system. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.WBSItemParents">
            <summary>
            Read-only property to get WBSItem parents for this member system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.SplitConnections">
            <summary>
            Read-only property to get the collection of split connections.
            </summary>
            <returns>Collection of SplitConnection objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Unexpected failure in the method.</exception>   
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.Splits">
            <summary>
            Read-only property to get the member split connections from the splitting member system.
            </summary>
            <value>Collection of Splits.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">Unexpected failure in the method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystem.COMClassString">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>  
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper">
            <summary>
            Structure common interface helper class implementation. 
            This class provides the common implementation for common interfaces accross Plant and Marine.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.#ctor">
            <summary>
            Default contructor to create the instance of this class. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.Transform(Ingr.SP3D.Common.Middle.Matrix4X4,System.Object)">
            <summary>
            Transform the geometry with a given transformation matrix.
            </summary>
            <param name="oT4X4">Transfromation Matrix.</param>
            <param name="COMBO">COM Business Object.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometry with the given T4X4.</exception>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.GetRange(System.Object)">
            <summary>
            Get the range box.
            </summary>
            <param name="COMBO">COM Business Object.</param>
            <returns>The objects range box.</returns>
            <exception cref="T:System.ArgumentNullException">COMBO parameter is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.GetCatalogPart(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Get the catalog part for a specific object.
            </summary>
            <param name="businessObject">The object which will return its catalog part.</param>
            <returns>Returns the catalog part.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException">Unexpected failure while getting the Catalog Part.</exception>
            <exception cref="T:System.ArgumentNullException">The partOccurrence object is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.SetCatalogPart(Ingr.SP3D.Common.Middle.BusinessObject,System.Object)">
            <summary>
            Set the catalog part (proxy) for a specific object.
            </summary>
            <param name="businessObject">The object which its part is being set.</param>
            <param name="part">The proxypart to be set.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException">Unexpected failure while setting the Catalog Part.</exception>
            <exception cref="T:System.ArgumentNullException">The partOccurrence object is null.</exception>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.GetProxyFromPart(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Get the proxy part from the catalog part.
            </summary>
            <param name="connection">The connection.</param>
            <param name="part">The catalog part.</param>
            <returns>Returns the the proxy part object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException">Unable to get the Proxy from Part.</exception>
            <exception cref="T:System.ArgumentNullException">Passed paramter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructCommonInterfaceHelper.GetCatalogPartFromProxy(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Get the catalog part from proxy
            </summary>
            <param name="partProxy">Proxy part</param>
            <returns>Returns catalog part</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException">Unable to get the Catalog Part from proxy.</exception>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.LogicalConnectionBase">
            <summary>
            Provides generalization of all entities supporting connection behavior and functionality.
            Base class for all logical connection classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Connection">
            <summary>
            Provides generalization of all entities supporting connection behavior and functionality.
            Base class for all connections.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Middle.Connection"/> class. Constructor needed by 3D API to manage the COM BO.
            </summary>
            <param name="privateBusinessObject">Private business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Middle.Connection"/> class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.FindPort(Ingr.SP3D.Common.Middle.IConnectable)">
            <summary>
            Finds a port from the connection on the given connectable parent.
            </summary>
            <param name="oConnectable"> Connectable on which the port is desired.</param>
            <returns> Port on the given connectable parent.</returns>
            <exception cref="T:System.ArgumentNullException">Given connectable is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FindPortException">Failed to find the ports on the given connectable from the connection.</exception>
            <example>This is an example of the FindPort method.
            <code>
            Dim oFCStartSupported As FrameConnection = oMemberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim oFindPort As IPort = oFCStartSupported.FindPort(oMemberSystemSupported)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the read-only collection of ports of a given type from the connection.
            </summary>
            <param name="eType">PortType enumeration.</param>
            <returns>Read-only collection of ports participating in the connection.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised when eType enum is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException">Raised when failed to enumerate the ports in the connection.</exception>
            <example>This is an example of the GetPorts method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim allPorts As ReadOnlyCollection(Of IPort) = frameConnectionStartSupported.GetPorts(PortType.All)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim oFCStartSupported As FrameConnection = oMemberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            oFCStartSupported.SetUserDefinedName("Connection")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Connection.OnSupportsInterface(System.String)">
            <summary>
            Called to determine if derived class supports an interface through DynamicQI.
            This is called only if the class supports IJSupportsDynamicInteface in meta-data.
            </summary>
            <param name="strInterfaceName">Interface name.</param>
            <returns>
            True if object supports interface; otherwise False.
            </returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a run.
            </summary>
            <exception cref="T:System.ArgumentNullException">Given active name rule is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.Range">
            <summary>
            Gets the range of the connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Connection.SystemParent">
            <summary>
            Gets or sets the parent of the connection.
            </summary>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Plate">
            <summary>
             Plate base abstract class definition.
             Provides generalization of all entities supporting plate-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.#ctor">
            <summary>
            Constructor for the Plate class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Establishes the child relationship between this object and the child, given a system child.
            </summary>
            <param name="oChild"> A child to which a parent/child relationship should be created. </param>
            <example>This is an example of the AddSystemChild method.
            <code>
            Dim oParent As ISystem
            'Set the oParent to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oChild As ISystemChild 
            'Set the oChild object to an appropriate business object (e.g., ProfileSystem).
            oParent.AddSystemChild(oChild)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of the plate.
            </summary>
            <param name="Name">The new name.</param>
            <example>This is an example of the SetUserDefinedName method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            oPlate.SetUserDefinedName("NewPlate")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the object.
            </summary>
            <param name="xAxisNew">X-axis of the plate or slab that needs to be set.</param>
            <param name="yAxisNew">Y-axis of the plate or slab that needs to be set.</param>
            <exception cref="T:System.NotImplementedException">Exception raised when the orientation is set on the plate or slab because it cannot be changed; as these objects are constrained.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetConnectablePorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connectable ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException">Unexpected failure while getting the connectable ports.</exception>
            <example>This is an example of the GetConnectablePorts method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oConnectablePorts As ReadOnlyCollection(Of IPort) = oPlate.GetConnectablePorts(PortType.Face)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetConnectedPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the connected ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException">Unexpected failure while getting the connected ports.</exception>
            <example>This is an example of the GetConnectedPorts method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oConnectedPorts As ReadOnlyCollection(Of IPort) = oPlate.GetConnectedPorts(PortType.Face)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.GetPorts(Ingr.SP3D.Common.Middle.PortType)">
            <summary>
            Gets the ports, given a geometrical port type.
            </summary>
            <param name="eType"> A geometrical port type (i.e., Edge, Face, End, Centerline, or All). </param>
            <returns> A read-only collection of IPort objects. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting the ports.</exception>
            <example>This is an example of the GetPorts method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oPorts As ReadOnlyCollection(Of IPort) = oPlate.GetPorts(PortType.Edge)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Plate.IsConnectedTo(Ingr.SP3D.Common.Middle.IConnectable,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.IConnection}@)">
            <summary>
            Determines whether the input connectable is connected to this connectable.
            </summary>
            <param name="oConnectable"> A connectable object (IConnectable). </param>
            <param name="oConnectionEnum"> A read-only collection of connection objects. (IConnection) </param>
            <returns> True if the object is connected to this connectable; False otherwise. </returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsConnectedToException">Unexpected failure while IsConnected is called.</exception>
            <example>This is an example of the IsConnectedTo method.
            <code>
            Dim oPlate As Plate 
            'Set the oPlate object to Slab, PlateSystem, PlatePart, CustomPlatePart, StandalonePlatePart, CollarPart.
            Dim oConnectable As IConnectable
            'Set the oConnectable object to an appropriate business object which can be connected with this connectable (e.g., stiffner, plate).
            Dim oConnectionEnum As ReadOnlyCollection(Of IConnection)
            Dim bIsConnectedTo As Boolean = oPlate.IsConnectedTo(oConnectable, oConnectionEnum)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.SystemChildren">
            <summary>
            Gets a read-only collection of this object's system children.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.SystemParent">
            <summary>
            Gets the system parent of the Plate object.
            </summary>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Range">
            <summary>
            Gets the range box representing the range of the plate.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Name">
            <summary>
            Gets the name of the plate.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.ActiveNameRule">
            <summary>
            Gets or sets the active name rule assigned to a plate.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.XAxis">
            <summary>
            Gets the X-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.YAxis">
            <summary>
            Gets the Y-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.ZAxis">
            <summary>
            Gets the Z-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Origin">
            <summary>
            Gets or sets the position of object.
            </summary>
            <exception cref="T:System.NotImplementedException">Exception raised when the origin is set on the plate or slab because it is not implemented.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Plate.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the object.
            </summary>
            <exception cref="T:System.NotImplementedException">Exception raised when the matrix is set on the plate or slab because these objects cannot be transformed.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FacePosition">
            <summary>
            Face position of the slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FacePosition.Bottom">
            <summary>
            Bottom face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FacePosition.Center">
            <summary>
            Center face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FacePosition.Top">
            <summary>
            Top face position.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.PortFacePosition">
            <summary>
            Port face position of the member bounding the slab.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PortFacePosition.Inner">
            <summary>
            Inner port face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PortFacePosition.Center">
            <summary>
            Center port face position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PortFacePosition.Outer">
            <summary>
            Outer port face position.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Continuity">
            <summary>
            Enumerated values for continuity.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Continuity.Continuous">
            <summary>
            Profile system is continuous across a split.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Continuity.Intercostal">
            <summary>
            Profile system is split across a split.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GeometryOperationTypes">
            <summary>
            Enumerated values for geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Import">
            <summary>
            Sat file import geometry operation. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Cutout">
            <summary>
            Cutout or opening/cutout geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Bound">
            <summary>
            Bound geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Split">
            <summary>
            Split (design/planning/straking) geometry operation.  
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.Generate">
            <summary>
            Generate operation (creates initial geometry of the entity).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.ChamferCut">
            <summary>
            Chamfer cut geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.FlangedEdge">
            <summary>
            Flanged edge geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.PartFinalTrim">
            <summary>
            Part final trim geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.AddFeature">
            <summary>
            Add feature geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryOperationTypes.ThickenPlate">
            <summary>
            Thicken plate geometry operation.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GeometryStage">
            <summary>
            Enumerated values for geometry stage.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryStage.Initial">
            <summary>
            Initial geometry.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GeometryStage.Current">
            <summary>
            Current geometry.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.SectionFaceType">
            <summary>
            Enumerated values for section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Unknown">
            <summary>
            Unknown section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left">
            <summary>
            Left web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right">
            <summary>
            Right web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom">
            <summary>
            Bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top">
            <summary>
            Top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Profile">
            <summary>
            Profile section face type (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Top">
            <summary>
            Top left bottom flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Bottom">
            <summary>
            Bottom left top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Top">
            <summary>
            Top right bottom flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Bottom">
            <summary>
            Bottom right top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left">
            <summary>
            Left bottom flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left">
            <summary>
            Left top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right">
            <summary>
            Right Bottom Flange.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right">
            <summary>
            Right top flange section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top_Corner">
            <summary>
            Right web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom_Corner">
            <summary>
            Right web bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom_Corner">
            <summary>
            Left web bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top_Corner">
            <summary>
            Left web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Bottom_Corner">
            <summary>
            Top flange right bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Top_Corner">
            <summary>
            Bottom flange right top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Bottom_Corner">
            <summary>
            Top flange left bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Top_Corner">
            <summary>
            Bottom flange left top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Bottom_Corner">
            <summary>
            Bottom flange right bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Top_Corner">
            <summary>
            Top flange right top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Top_Corner">
            <summary>
            Top flange left top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Bottom_Corner">
            <summary>
            Bottom flange left bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Left_Bottom">
            <summary>
            Bottom flange left bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Left_Top">
            <summary>
            Top flange left top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Right_Bottom">
            <summary>
            Bottom flange right bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Right_Top">
            <summary>
            Top flange right top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom_Top_Corner">
            <summary>
            Left web bottom top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top_Bottom_Corner">
            <summary>
            Left web top bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom_Top_Corner">
            <summary>
            Right web bottom top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top_Bottom_Corner">
            <summary>
            Right web top bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom">
            <summary>
            Left web bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top">
            <summary>
            Left web top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom">
            <summary>
            Right web bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top">
            <summary>
            Right web top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Bottom_Bottom_Corner">
            <summary>
            Left web bottom bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Left_Top_Top_Corner">
            <summary>
            Left web top top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Bottom_Bottom_Corner">
            <summary>
            Right web bottom bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Right_Top_Top_Corner">
            <summary>
            Right web top top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Left">
            <summary>
            Left section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Right">
            <summary>
            Right section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Left_Web_Top">
            <summary>
            The top of the left web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Left_Web_Bottom">
            <summary>
            The bottom of the left web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Right_Web_Top">
            <summary>
            The top of the right web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Right_Web_Bottom">
            <summary>
            The bottom of the right web.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Top">
            <summary>
            Top flange top (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Common">
            <summary>
            Common section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Left">
            <summary>
            Bottom left section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Right">
            <summary>
            Bottom right section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Left_Corner">
            <summary>
            Bottom left corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Left_Corner">
            <summary>
            Top left corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Right_Corner">
            <summary>
            Bottom right corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Right_Corner">
            <summary>
            Top right corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Idealized_Boundary">
            <summary>
            Idealized boundary section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Top">
            <summary>
            Top bottom flange (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Top_Flange_Bottom">
            <summary>
            Bottom top flange (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Bottom_Flange_Bottom">
            <summary>
            Bottom bottom flange (left or right).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Web_Center">
            <summary>
            Web center section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Left">
            <summary>
            Left flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Right">
            <summary>
            Right flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Top">
            <summary>
            Top flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Flange_Bottom">
            <summary>
            Bottom flange (top or bottom).
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Outer_Tube">
            <summary>
            Outer tube section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Tube">
            <summary>
            Inner tube section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left">
            <summary>
            Inner left web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right">
            <summary>
            Inner right web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Top">
            <summary>
            Inner left top web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Bottom">
            <summary>
            Inner left bottom web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Top">
            <summary>
            Inner right top web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Bottom">
            <summary>
            Inner right bottom web section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Top">
            <summary>
            Inner top section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Bottom">
            <summary>
            Inner bottom section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Top_Corner">
            <summary>
            Inner left web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Left_Bottom_Corner">
            <summary>
            Inner left web bottom corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Top_Corner">
            <summary>
            Inner right web top corner section face type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SectionFaceType.Inner_Web_Right_Bottom_Corner">
            <summary>
            Inner right web bottom corner section face type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ContextTypes">
            <summary>
            Enumerated values for topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.NoOperation">
            <summary>
            NoOperation topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Base">
            <summary>
            Base topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Offset">
            <summary>
            Offset topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Lateral">
            <summary>
            Lateral topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Split">
            <summary>
            Split topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Cutout">
            <summary>
            Cutout topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Chamfer">
            <summary>
            Chamfer topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Knuckle">
            <summary>
            Knuckle topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Miter">
            <summary>
            Miter topology context.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ContextTypes.Bend">
            <summary>
            Bend topology context.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyGeometryType">
            <summary>
            Enumerated values for topology geometry type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.TopologyGeometryType.Vertex">
            <summary>
            Vertex topology geometry type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.TopologyGeometryType.Edge">
            <summary>
            Edge topology geometry type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.TopologyGeometryType.Face">
            <summary>
            Face topology geometry type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.GraphPosition">
            <summary>
            Enumerator for defining the position in the graph with respect to a geometry operation.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GraphPosition.After">
            <summary>
            After graph position.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.GraphPosition.Before">
            <summary>
            Before graph position.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberPriority">
            <summary>
            Specifies values for member priority.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Undefined">
             <summary>
            Member priority is undefined.
             </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Primary">
            <summary>
            Member priority is primary.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Secondary">
             <summary>
            Member priority is secondary.
             </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberPriority.Tertiary">
            <summary>
            Member priority is tertiary.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberAxisEnd">
            <summary>
            Specifies values for the member axis end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisEnd.Start">
            <summary>
            Start member axis end.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisEnd.End">
            <summary>
            End member axis end.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberTypeCategory">
            <summary>
            Specifies values of the type category of the designed member, such as a beam or a column, etc.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Beam">
            <summary>
            Member category beam.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Column">
            <summary>
            Member category column.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Brace">
            <summary>
            Member category brace.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.TrussElement">
            <summary>
            Member category truss.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.Cable">
            <summary>
            Member category cable.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.HandrailElement">
            <summary>
            Member category handrail.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.StairElement">
            <summary>
            Member category stair.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberTypeCategory.LadderElement">
            <summary>
            Member category ladder.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberType">
            <summary>
            Specifies to select the type of the designed member for a parent type category, such as cable or wire for cable category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Beam">
            <summary>
            Member type beam for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Girder">
            <summary>
            Member type girder for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Joist">
            <summary>
            Member type joist for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Girt">
            <summary>
            Member type girt for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Purlin">
            <summary>
            Member type purlin for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Stringer">
            <summary>
            Member type stringer for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Perimeter">
            <summary>
            Member type perimeter for Beam category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Column">
            <summary>
            Member type column for Column category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Stud">
            <summary>
            Member type stud for Column category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Brace">
            <summary>
            Member type brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.HorizantalBrace">
            <summary>
            Member type horizantal brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.VerticalBrace">
            <summary>
            Member type vertical brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.KneeBrace">
            <summary>
            Member type knee brace for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.SagRod">
            <summary>
            Member type sag rod for Brace category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.TrussElement">
            <summary>
            Member type truss element for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.TopChord">
            <summary>
            Member type top chord for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.BottomChord">
            <summary>
            Member type bottam chord for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.MiddleChord">
            <summary>
            Member type middle chord for TrussElement category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Cable">
            <summary>
            Member type cable for Cable category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Wire">
            <summary>
            Member type wire for Cable category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.HandrailElement">
            <summary>
            Member type handrail element for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Post">
            <summary>
            Member type post for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.TopRail">
            <summary>
            Member type top rail for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.MidRail">
            <summary>
            Member type midrail for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.ToePlate">
            <summary>
            Member type toe plate for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.EndTreatment">
            <summary>
            Member type end treatment for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.HandrailAttachment">
            <summary>
            Member type handrail attachment for Handrail category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.StairElement">
            <summary>
            Member type stair element for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Thread">
            <summary>
            Member type thread for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.StairStringer">
            <summary>
            Member type stair stringer for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Support">
            <summary>
            Member type support for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Landing">
            <summary>
            Member type landing for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.StairAttachment">
            <summary>
            Member type stair attachment for Stair category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.LadderElement">
            <summary>
            Member type ladder element for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Rung">
            <summary>
            Member type rung for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Rail">
            <summary>
            Member type rail for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.Hoop">
            <summary>
            Member type hoop for Ladder category.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberType.LadderAttachement">
            <summary>
            Member type ladder attachment for Ladder category.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus">
            <summary>
            Enumerator to provide validate status of the frame connection with the given set of related objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.NoError">
            <summary>
            No error condition detected.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.UnexpectedError">
            <summary>
            Unexpected error condition detected.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.InvalidTypeOfObject">
            <summary>
            Invalid type of object in the related object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.BadNumberOfObjects">
            <summary>
            Insufficient number of related objects.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.InconsistentRelations">
            <summary>
            Relations to the related objects inconsistently set.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.DuplicateObject">
            <summary>
            Duplicate related object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.BadGeometry">
            <summary>
            Geometry of the related object is invalid.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.NoWriteAccess">
            <summary>
            No write access to the connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.ConnectionValidateStatus.AdditionalObjectsOptional">
            <summary>
            Additonal related objects are being set which might be optional.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.PositionRule">
            <summary>
            Enumerated values for member position rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PositionRule.Intersection">
            <summary>
            Intersection position rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PositionRule.Ratio">
            <summary>
            Ratio position rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.PositionRule.Distance">
            <summary>
            Distance position rule.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FoundationValidationStatus">
            <summary>
            Enumerated values for foundation validation status.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.NoError">
            <summary>
            Supported or supporting objects are okay.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.SupportedObjectBad">
            <summary>
            Invalid supported object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.SupportingObjectBad">
            <summary>
            Invalid supporting object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.InvalidTypeOfSupportedObject">
            <summary>
            Type of object is not supported.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.FoundationValidationStatus.InvalidTypeOfSupportingObject">
            <summary>
            Type of object is not supporting.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberEndReleases">
            <summary>
            Enumerated values for member end releases.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.UserDefined">
            <summary>
            User-defined member end release.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXZRYRZ">
            <summary>
            Free in X and Z direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeZRYRZ">
            <summary>
            Free in Z direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXYRYRZ">
            <summary>
            Free in X and Y direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeYRYRZ">
            <summary>
            Free in Y direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXRYRZ">
            <summary>
            Free in X direction and free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeRYRZ">
            <summary>
            Free in rotation about Y and Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXYRZ">
            <summary>
            Free in X and Y direction and free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeYRZ">
            <summary>
            Free in Y direction and free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXRZ">
            <summary>
            Free in X direction and free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeRZ">
            <summary>
            Free in rotation about Z.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXZRY">
            <summary>
            Free in X and Z direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeZRY">
            <summary>
            Free in Z direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXYRY">
            <summary>
            Free in X and Y direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeYRY">
            <summary>
            Free in Y direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXRY">
            <summary>
            Free in X direction and free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeRY">
            <summary>
            Free in rotation about Y.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXZ">
            <summary>
            Free in X and Z direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeZ">
            <summary>
            Free in Z direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeXY">
            <summary>
            Free in X and Y direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeY">
            <summary>
            Free in Y direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeX">
            <summary>
            Free in X direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberEndReleases.FreeNone">
            <summary>
            Fixed in all directions and rotations.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.DisplacementType">
            <summary>
            Enumerated values for displacement type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.DisplacementType.Free">
            <summary>
            Free displacement on the specified direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.DisplacementType.Fixed">
            <summary>
            Fixed displacement on the specified direction.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousPatch">
            <summary>
            AmbiguousPatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousPatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor used to create the AmbiguousPatch object.
            </summary>
            <param name="oGeometry">BusinessObject</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousPatch.Calculate(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Calculates the range for a given geometry.
            </summary>
            <param name="oGeometry">BusinessObject</param>
            <returns>Range box.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousPatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch">
            <summary>
            AmbiguousSurfacePatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor to create the AmbiguousSurfacePatch object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSurfacePatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch">
            <summary>
            AmbiguousCurvePatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor to create the AmbiguousPatch object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousCurvePatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch">
            <summary>
            AmbiguousSolidPatch class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor to create the AmbiguousSurfacePatch object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.AmbiguousSolidPatch.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyPort">
            <summary>
            Wrapper for CommonStruct and ship structure TopologyPort. This class provides
            ports on the actual geometry of the entity.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructPortBase">
            <summary>
            Base class for the Port classes. This class provides generalization of all 
            entities supporting port-like behavior and functionality.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructPortBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.Connectable">
            <summary>
            Gets the connectable of the port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException">Failed to find the port on the given connectable.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.Connections">
            <summary>
            Gets the connections in which this port participates.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetConnectionsException">Unexpected failure while getting the connections.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.PortType">
            <summary>
            Gets the type of port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the port type.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>PortType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>All = 1</term>
                   <description>All port type.</description>
               </item>    
               <item>
                   <term>Piping = 2</term>
                   <description>Piping port type.</description>
               </item>
               <item>
                   <term>Duct = 3</term>
                   <description>Duct port type.</description>
               </item>
               <item>
                   <term>Cable = 4</term>
                   <description>Cable port type.</description>
               </item>
               <item>
                   <term>Foundation = 5</term>
                   <description>Foundation port type.</description>
               </item>
               <item>
                   <term>Cabletray = 6</term>
                   <description>Cabletray port type.</description>
               </item>
               <item>
                   <term>Conduit = 7</term>
                   <description>Conduit port type.</description>
               </item>
               <item>
                   <term>Edge = 8</term>
                   <description>Edge port type.</description>
               </item>
               <item>
                   <term>Face = 9</term>
                   <description>Face port type.</description>
               </item>
               <item>
                   <term>End = 10</term>
                   <description>End port type.</description>
               </item>
               <item>
                   <term>Centerline = 11</term>
                   <description>Centerline port type.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructPortBase.Geometry">
            <summary>
            Gets the port geometry. MemberAxisPortType returns the end point or the axis. TopologyPort returns the Topology Geometry. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException">Unexpected failure while getting the port geometry.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether a given point is on this surface.
            </summary>
            <param name="pos">Point to determine whether on this surface.</param>
            <returns>If True, then the point is on the surface; if False, then the point is not on the surface.</returns>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim bIsPointOn As Boolean = oSurface.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ScopeNormal(Ingr.SP3D.Common.Middle.SurfaceScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Determines the planarity of the surface and normal.
            </summary>
            <param name="eScope">SurfaceScopeType defining the planarity of the surface.</param>
            <param name="vecNormal">Normal vector.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>SurfaceScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Surface scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Surface is planar.</description>
               </item>
               <item>
                   <term>NonPlanar = 2</term>
                   <description>Surface is non-planar.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim eScope As SurfaceScopeType
            Dim oVecNormal As Vector
            oSurface.ScopeNormal(eScope, oVecNormal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the surface along vector from given point.
            </summary>
            <param name="pos">Position in which to project to curve.</param>
            <param name="vecProj">Vector to project along. Optional argument, if null,
                                  then the function projects along vector normal to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oVecProj As New Vector(0, 0, 1)
            Dim oProjectPoint As Position = oSurface.ProjectPoint(oPos, oVecProj)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the surface along normal vector from the given point.
            </summary>
            <param name="pos">Position in which to project to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oProjectPoint As Position = oSurface.ProjectPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.OutwardNormalAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            This method finds the outward normal at a given point.
            </summary>
            <param name="pos">Position in which to find the outward normal.</param>
            <returns>Vector - outward normal.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the OutwardNormalAtPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oOutwardNormal As Vector = oSurface.OutwardNormalAtPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            This method determines the distance between this surface and an input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="minDist">Output minimum distance.</param>
            <param name="posSrcPos">Point at minimum distance on this surface.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim oPoint3d As New Point3d(1.5, 0, 0)
            Dim dDist As Double
            Dim posSrcPos As Position
            oSurface.DistanceBetween(oPoint3d, dDist, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface and an input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point at minimum distance on this surface.</param>
            <param name="posInPos">Point at minimum distance on input curve.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim dDist As Double
            Dim posSrcPos, posInPos As Position
            oSurface.DistanceBetween(oInCurve, dDist, posSrcPos, posInPos)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface and an input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point at minimum distance on this surface.</param>
            <param name="posInPos">Point at minimum distance on input surface.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim dDist As Double 
            Dim oPosSrcPos, oPosInPos As Position 
            oSurface.DistanceBetween(oInSurface, dDist, oPosSrcPos, oPosInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            This method finds the intersection between this surface and an input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colCurves">Output collection of curves.  
                                    Note that this could be a collection of Point3d objects.</param>
            <param name="eIntersectCode">GeometryIntersectionType describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            oSurface.Intersect(oInCurve, colCurves, eIntersectCode)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ICurve}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this surface and input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Output collection of curves
                                    Note that this could be a collection of Point3D objects.</param>
            <param name="eIntersectCode">GeometryIntersectionType describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of ICurve) = Nothing
            oSurface.Intersect(oInSurface, colCurves, eIntersectCode)
            </code>
            </example>    
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Centroid(Ingr.SP3D.Common.Middle.Line3d,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds one or more centroids of this surface.
            </summary>
            <param name="line">Optional. If given, it helps locate which centroid to return.</param>
            <param name="colCentroids">Multiple centroids are returned only when a projection can be broken.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Centroid method.
            <code>
            oSurface.Centroid(oLine, colCentroids)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.LocatedCentroids(Ingr.SP3D.Common.Middle.Line3d)">
            <summary>
            Finds one or more centroids of this surface.
            </summary>
            <param name="line"></param>
            <returns>Centroid positions which are located with input line.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Centroids">
            <summary>
            Finds the Centoid(s) of the surface.
            </summary>
            <returns>All centroid positions.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Centroid">
            <summary>
            Finds the Centroid of the surface.
            </summary>
            <returns>Centroid of the whole surface.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of this curve.</param>
            <param name="vecNormal">The normal vector of this curve.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of the ScopeNormal method.
            <code>
            Dim eScope As CurveScopeType
            Dim oVecNormal As Vector
            oCurve.ScopeNormal(eScope, oVecNormal)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Compute the center, area, moments of inertia, principle axes of lamina (e.g., a sheet metal) bounded by a closed planar curve.
            </summary>
            <param name="dArea">Area of the the lamina.</param>
            <param name="posCentroid">Centroid of the lamina.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaXY">Product of inertia (zero if it is symmetric).</param>
            <param name="dMajorPrncplInertia">Principle moment of inertia to major axis.</param>
            <param name="dMinorPrncplInertia">Principle moment of inertia to minor axis.</param>
            <param name="dPolarInertia">Polar moment of inertia to the normal.</param>
            <param name="MjIAxis">Major principle axis.</param>
            <param name="MnIAxis">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is the example of AreaCentroidMomentsOfInertia method.
            <code>
            Dim dArea, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertia As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis As Vector
            oCurve.AreaCentroidMomentsOfInertia(dArea, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertia, oMjIAxis, oMnIAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Compute length, centroid, moments of inertia, principle axes of an open or closed thin wire.
            </summary>
            <param name="dLength">Length of the wire.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="dPrncplInertiaU">Principle moment of inertia to uDir.</param>
            <param name="dPrncplInertiaV">Principle moment of inertia to vDir.</param>
            <param name="dPrncplInertiaN">Principle moment of inertia to nDir.</param>
            <param name="AxisU">Major principle axis.</param>
            <param name="AxisV">Minor principle axis.</param>
            <param name="AxisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim dLength, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertiaN As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis, oNIAxis As Vector
            oCurve.CentroidInertiaForWire(dLength, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertiaN, dPolarInertia, oMjIAxis, oMnIAxis, oNAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the end points of this curve.
            </summary>
            <param name="posStart">Start position.</param>
            <param name="posEnd">End position.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <example>This is an example of the EndPoints method.
            <code>
            Dim oPosStart, oPosEnd As Position
            oCurve.EndPoints(oPosStart, oPosEnd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on this curve.
            </summary>
            <param name="pos">Point to determine if on this curve.</param>
            <returns>True if the point is on this curve; False if the point is not on this curve.</returns>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the IsPointOn method.
            <code>
            Dim bIsPointOn As Boolean = oCurve.IsPointOn(New Position(1.5, 0, 0))
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            This method determines the distance between this curve and the input point.
            </summary>
            <param name="point3d">Input point.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Unexpected failure while determining the distance between this curve and the input point.</exception>      
            <example>This is an example of DistanceBetween method.
            <code>
            Dim oPoint3d As New Point3d(1.5, 0, 0)
            Dim dDist As Double
            Dim posSrcPos As Position
            oCurve.DistanceBetween(oPoint3d, dDist, posSrcPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            This method determines the distance between this curve and the input curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of DistanceBetween method.
            <code>
            Dim dDist As Double
            Dim posSrcPos, posInPos As Position
            oCurve.DistanceBetween(oInCurve, dDist, posSrcPos, posInPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            This method determines the distance between this curve and the input surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="dist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input surface at minimum distance.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the DistanceBetween method.
            <code>
            Dim dDist As Double 
            Dim oPosSrcPos, oPosInPos As Position 
            oCurve.DistanceBetween(oInSurface, dDist, oPosSrcPos, oPosInPos)
            </code>
            </example>   
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            This method finds the intersection between this curve and another curve.
            </summary>
            <param name="inCurve">Input curve.</param>
            <param name="colIntPos">Output collection of intersection points.</param>
            <param name="colOverlapPos">Output collection of overlap points.</param>
            <param name="eIntersectCode">Enumerator describing type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            oCurve.Intersect(oInCurve, colIntPos, colOverlapPos, eIntersectCode)
            </code>
            </example>     
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            This method finds the intersection between this curve and a surface.
            </summary>
            <param name="inSurface">Input surface.</param>
            <param name="colCurves">Collection of curve objects.</param>
            <param name="eIntersectCode">Enumerated value for the type of intersection.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the Intersect method.
            <code>
            Dim eIntersectCode As GeometryIntersectionType
            Dim colCurves As Collection(Of BusinessObject) = Nothing
            oCurve.Intersect(oInSurface, colCurves, eIntersectCode)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            This method finds the self intersections and overlaps of this curve.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the SelfIntersect method.
            <code>
            Dim colIntPos As Collection(Of Position) = Nothing
            Dim colOverlapPos As Collection(Of Position) = Nothing
            oCurve.SelfIntersect(colIntPos, colOverlapPos)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            This method finds a point along a curve at a given distance from the given 
            start point on the curve. If the given point does not lie on the curve, 
            it is along normal to the curve (minimum distance). 
            </summary>
            <param name="posStart">Position to start from.</param>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create COM Geometry Factory</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim oPosStart As New Position(1, 1, 1)
            Dim dDist As Double = 1.0
            Dim oPointDistanceAlong As Position = oCurve.PointAtDistanceAlong(oPosStart, dDist)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.PointAtDistanceAlong(System.Double)">
            <summary>
            This method finds a point along a curve at a given distance from the start of curve.
            </summary>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathGeometryFactoryException">Failed to create COM Geometry Factory</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the PointAtDistanceAlong method.
            <code>
            Dim dDist As Double = 1.0
            Dim oPointDistanceAlong As Position = oCurve.PointAtDistanceAlong(dDist)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            This method finds a point on this curve along given vector from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <param name="vecProj">Vector to project along. If optional argument is null,
                                  then the function projects along vector normal to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oVecProj As New Vector(0, 0, 1)
            Dim oProjectPoint As Position = oCurve.ProjectPoint(oPos, oVecProj)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            This method finds a point on this curve from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <returns>Position - projected point.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the ProjectPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oProjectPoint As Position = oCurve.ProjectPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            This method finds the tangent at a given point.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the TangentAtPoint method.
            <code>
            Dim oPos As New Position(1, 1, 0)
            Dim oTangentPoint As Vector = oCurve.ProjectPoint(oPos)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="complexString">ComplexString3d</param>
            <exception cref="T:System.ArgumentNullException">iCS cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the AddBoundary method.
            <code>
            oPlane.AddBoundary(oCS)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.RemoveBoundary(System.Int32)">
            <summary>
            Removes boundary i.
            </summary>
            <param name="i">Integer</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the RemoveBoundary method.
            <code>
            oPlane.RemoveBoundary(1)
            </code>
            </example>  
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the plane.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the RemoveAllBoundaries method.
            <code>
            oPlane.RemoveAllBoundaries()
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at i.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="complexString">Output boundary.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the GetBoundary method.
            <code>
            Dim oCS As ComplexString3d
            oPlane.GetBoundary(1, oCS)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Sets the boundary at index i.
            <para>Note: This method is not adding a boundary, but replacing the boundary which is at index i.</para>
            </summary>
            <param name="i">Integer</param>
            <param name="complexString">ComplexString3d</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the SetBoundary method.
            <code>
            oPlane.SetBoundary(1, oCS)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the GetBoundaries method.
            <code>
            oPlane.GetBoundaries(colComplexString)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
            <summary>
            Sets the boundaries and removes any previous boundaries.
            </summary>
            <param name="colComplexString">Collection of ComplexString3d objects.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the SetBoundaries method.
            <code>
            oPlane.SetBoundaries(oCS)
            </code>
            </example> 
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a hole to one or more existing boundaries.
            </summary>
            <param name="complexString">ComplexString3d defining a hole.</param>
            <exception cref="T:System.ArgumentNullException">Argument cannot be null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is an example of the AddHole method.
            <code>
            oPlane.AddHole(oCS)
            </code>
            </example>         
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyPort.OnSupportsInterface(System.String)">
            <summary>
            Determines if the input interface is supported via dynamic query interface mechanism.
            </summary>
            <param name="strInterfaceName">Interface name.</param>
            <returns>True if objects supports interface via dynamic query interface; otherwise False.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.OperatorId">
            <summary>
            Gets the operator identifier associated with the structure port moniker.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetOperatorIdException">Unexpected failure while getting the OperatorId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.OperationId">
            <summary>
            Gets the operation identifier associated with the structure port moniker.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetOperationIdException">Unexpected failure while getting the OperationId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.ContextId">
            <summary>
            Gets the context identifier associated with the structure port moniker.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetContextIdException">Unexpected failure while getting the ContextId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.SectionId">
            <summary>
            Gets the section face identifier (subport Id) associated with the structure port moniker. This can be extended by using the Symbol Editor XML file.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSectionIdException">Unexpected failure while getting the SectionId.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.TopologyGeometryType">
            <summary>
            Gets the geometry type of the topology proxy for the port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetTopologyProxyTypeException">Unexpected failure while getting the TopologyProxyType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Range">
            <summary>
            Gets the range box.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">Unexpected failure while getting the range.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.uForm">
            <summary>
            Gets the closure of the surface in U-direction.
            </summary>
            <returns>Enumerated value of this surface closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.vForm">
            <summary>
            Gets the closure of the surface in V-direction.
            </summary>
            <returns>Enumerated value of this surface closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">SurfaceHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Length">
            <summary>
            Gets the length of this curve.
            </summary>
            <returns>Length value of this curve.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Area">
            <summary>
            Gets the area of this curve.
            </summary>
            <returns>Area value of this curve.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Form">
            <summary>
            Gets the form (closure) of this curve.
            </summary>
            <returns>Enumerated value of this curve closure.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Scope">
            <summary>
            Gets the scope (planarity) of this curve.
            </summary>
            <returns>Enumerated value of this curve planarity.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ICurve#Centroid">
            <summary>
            Gets the centroid of this curve.
            </summary>
            <returns>Position of centroid of this curve. </returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.RootPoint">
            <summary>
            Gets or sets the root point.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Normal">
            <summary>
            Gets or sets the plane normal.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.VDirection">
            <summary>
            Gets the V-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Reversed">
            <summary>
            Gets or sets the Reversed property. Get reverses the V-direction of the plane.
            Normally (Reversed=False) the V-direction is determined by the normal X U-direction.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.BoundaryCount">
            <summary>
            Returns the number of boundaries.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">PlaneHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Infinite">
            <summary>
            Gets or sets whether this line is infinite.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in invalid state as the reference to the business object has been lost.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.StartPoint">
            <summary>
            Gets or sets the start point of the line.
            <para>Note: Do not call this routine to set if your line is infinite.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.EndPoint">
            <summary>
            Gets or sets the end point of the line.
            <para>Note: Do not call this routine to set if your line is infinite.</para>
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Ingr#SP3D#Common#Middle#ILine#RootPoint">
            <summary>
            Gets or sets the root point of the line.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyPort.Direction">
            <summary>
            Gets or sets the direction vector.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">LineHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Foundation">
            <summary>
            Implementation for Foundation abstract class. This class provides generalization
            of all behavior which is supported by all foundations.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetInputHelper">
            <summary>
            Gets the input helper.  Must be implemented by the derived class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetSupportElements(System.Object,System.Object)">
            <summary>
            Gets the supported and supporting elements.  Must be implemented by the derived class.
            </summary>
            <param name="supportedElements">Supported elements.</param>
            <param name="supportingElements">Supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.SetSupportElements(System.Object,System.Object)">
            <summary>
            Sets the supported and supporting elements.  Must be implemented by the derived class.
            </summary>
            <param name="supportedElements">Supported elements.</param>
            <param name="supportingElements">Supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetSupportCollection(System.Object)">
            <summary>
            Converts the COM elements to .NET business objects.  Must be implemented by the derived class.
            </summary>
            <param name="elements">IJElement collection.</param>
            <returns>Collection of .NET business objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetInputCriteria">
            <summary>
            Gets the input criteria string to get the input values based upon this.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateInputObjectType(System.Object)">
            <summary>
            Checks whether the input object passed is valid or not.
            </summary>
            <param name="supportedObject">The input supported object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetValidSupportedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Gets the valid supported objects.
            </summary>
            <param name="supportedObjects">Collection of input supported objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Applies the given matrix on the foundation.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure to transform the geometry with the given oT4X4.</exception>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <example>
            <code>
            'Example code to use Transform method.
            Dim matrix As New Matrix4X4() 
            'Translate by 20m. 
            matrix.SetIndexValue(12, 20R) 
            footing.Transform(matrix) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateInputs(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validates the supported and supporting collections for a given part.
            </summary>
            <param name="part">Foundation part.</param>
            <param name="supportedObjects">Collection of supported business objects.</param>
            <param name="supportingObjects">Collection of supporting business objects.</param>
            <returns>Returns an enumerator of FoundationValidationStatus.</returns>
            <exception cref="T:System.ArgumentNullException">Raised if a parameter is null.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.GetDefinitionObject">
            <summary>
            Gets the smart occurrence definition object.
            </summary>
            <returns>Definition object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsSingleSupported(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Checks whether the part is single-supported.
            </summary>
            <param name="part">Foundation part.</param>
            <returns>Returns True if the supported cardinality of this part is 1 (one); False otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsSupportingPlaneReqdOrOpt(Ingr.SP3D.ReferenceData.Middle.Part,System.Boolean@,System.Boolean@)">
            <summary>
            Checks whether the supporting plane for the part is required or optional.
            </summary>
            <param name="oPart">Foundation part.</param>
            <param name="bPlaneReq">Identifies whether the plane is required.</param>
            <param name="bPlaneOpt">Identifies whether the plane is optional.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ProcessCardinalityString(System.String,System.Int32@,System.Int32@)">
            <summary>
            Parses the cardinality string.
            </summary>
            <param name="strCarnalityString">The cardinality string.</param>
            <param name="lLowerLimit">The cardinality lower limit.</param>
            <param name="lUpperLimit">The cardinality upper limit.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsValidInputForSupportedObject(System.Object,System.Object)">
            <summary>
            Validates the supported objects.
            </summary>
            <param name="oInputSupportedElem">Supported element to validate.</param>
            <param name="oSupportedElems">Supported element collection.</param>
            <returns>True if valid; otherwise False.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException">Failed to retrieve the information of the supported object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.IsValidInputForSupportingObject(System.Object,System.Object)">
            <summary>
            Validates the supporting object.
            </summary>
            <param name="oInputSupportingElem">Supporting element to validate.</param>
            <param name="oSupportedElems">Supported element collection.</param>
            <returns>True if valid; otherwise False.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException">Failed to retrieve the information of the supporting object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateSupportedObj(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Private method to validate the supported objects.  
            </summary>
            <param name="supportedObjects">The collection of supported objects.</param>
            <returns>FoundationValidationStatus.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Foundation.ValidateSupportingObj(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Private method to validate the supporting objects.
            </summary>
            <param name="oSupportingObjectColl">The collection of supporting objects.</param>
            <param name="oSupportedObjectColl">The collection of supported objects.</param>
            <returns>FoundationValidationStatus</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Foundation.Part">
            <summary>
            Gets or sets the definition or part on the foundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Foundation.SupportedObjects">
            <summary>
            Gets or sets the supported objects for foundation.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">Unexpected failure while getting the supported objects.</exception>
            <exception cref="T:System.ArgumentNullException">Passed value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the supported objects collection count is less than one.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">Unexpected failure while setting the supported objects.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Foundation.SupportingObjects">
            <summary>
            Gets or sets the supporting objects for foundation.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException">Unexpected failure while getting the supporting objects.</exception>
            <exception cref="T:System.ArgumentNullException">Passed value is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Raised if the supporting objects collection count is less than one.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException">Unexpected failure while setting the supporting objects.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Layer">
            <summary>
            Layer class is the .NET wrapper class for StructLayer COM Business Object. This class
            provides material and thickness information for a single layer in the SlabComposition.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IStructMaterial">
            <summary>
            Realized by all wrapper objects which allow setting a material. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.Material">
            <summary>
            Gets or sets the material part. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.MaterialStandard">
            <summary>
            Gets the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.MaterialType">
            <summary>
            Gets the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IStructMaterial.MaterialGrade">
            <summary>
            Gets the grade of the material.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Layer.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.IsReference">
            <summary>
            Gets or sets the IsReference flag on the layer. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.Thickness">
            <summary>
            Gets or sets the thickness on the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.Continuity">
            <summary>
            Gets or sets continuity of the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.CatalogPart">
            <summary>
            Gets or sets the catalog part corresponding to the layer definition.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.Material">
            <summary>
            Gets or sets the material of the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.MaterialType">
            <summary>
            Gets or sets the material type of the layer.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.MaterialStandard">
            <summary>
            Gets the material standard.
            However, not implemented at this time.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Layer.MaterialGrade">
            <summary>
            Gets the material grade of the layer.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Run">
            <summary>
            Class definition for a wall run.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Run.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a wall run from the database.
            </summary>
            <param name="oPB">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Run.SetUserDefinedName(System.String)">
            <summary>
            Sets the user-defined name of an object.
            </summary>
            <param name="Name">The new name.</param>
            <exception cref="T:System.ArgumentNullException">Given name is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Run.WallSystem">
            <summary>
            Returns the wall system which is connected to this wall run.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Run.ActiveNameRule">
            <summary>
            Gets or sets the active name rule of the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Run.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSplitType">
            <summary>
            Provides the type of split of the member split connection.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.ByRule">
            <summary>
            Split By Rule.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitFirst">
            <summary>
            Split First.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitSecond">
            <summary>
            Split Second.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitBoth">
            <summary>
            Split Both.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberSplitType.SplitNone">
            <summary>
            Split None.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSplitConnection">
            <summary>
            MemberSplitConnection class represents the split point geometry as well as the logical connection between the split objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a MemberSplitConnection from the database.
            </summary>
            <param name="privateBusinessObject">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSplitConnection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the member split connection with the given root selection. 
            Returns the item which results from the selection rule.
            </summary>
            <param name="rootSelection">Root selection from which to start.</param>
            <returns>Item selected by selector rule.</returns>
            <exception cref="T:System.ArgumentNullException">Root selection argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Exception raised if an error is encountered in the ExecuteSelectionRule method.</exception>
            <example>
            <code>
            'Example for method ExecuteSelectionRule.
            Dim selectionRule As String =  memberSplitConnection.ExecuteSelectionRule(memberSplitConnection.PartName)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Results">
            <summary>
            Read-only property to get member parts resulting from the split.  
            </summary>          
            <value>Read-only collection of member parts resulting from the split.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.SplitType">
            <summary>
            Gets or sets the type of split.  
            </summary>
            <value>For non-marine entities, set is currently not supported and
            get always returns design SplitType.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SplitTypeException">Cannot set the split type on the member split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.PartName">
            <summary>
            Gets or sets the definition or part by name on the member split connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Failed to get the part name on the member split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Failed to set the part name on the member split connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part name value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Part">
            <summary>
            Gets or sets the definition or part on the member split connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Failed to get the part on the member split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Failed to set the part on the member split connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.WBSParent">
            <summary>
            WBSItem parent for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Position">
            <summary>
            Read-only property to get the position of the member split connection.
            </summary>
            <value>The position.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException">Failed to get the position of the split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.MemberSplitType">
            <summary>
            Gets or sets the member split type on the member split connection.
            </summary>
            <value>The type of member split.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException">Failed to get the member split type of the member split connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException">Failed to set the member split type on the member split connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSplitConnection.Parents">
            <summary>
            Read-only property to get the parent entities related to the member split connection.
            </summary>
            <value>Read-only collection of the parents.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException">Failed to get the parents of the split connection.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AssemblyConnectionBase">
            <summary>
            Base class for all assembly connection classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.WeightCOGServices">
            <summary>
            Weight and center of gravity-related services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.WeightCOGServices.#ctor">
            <summary>
            Constructor for the WeightCOGServices class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.WeightCOGServices.SetWeightAndCOG(Ingr.SP3D.Common.Middle.BusinessObject,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Called from a symbol VB.Net project to implement ICustomWeightCG interface. 
            This method is delegating the actual call to the respective business object where the actual weight and center of gravity is being set.
            </summary>
            <param name="businessObject">BusinessObject such as Stair, Ladder, HandRail and Footing.</param>
            <param name="weight">Double value of weight.</param>
            <param name="globalCOGX">Double value of position X for center of gravity in respect to the global coordinate system.</param>
            <param name="globalCOGY">Double value of position Y for center of gravity in respect to the global coordinate system.</param>
            <param name="globalCOGZ">Double value of position Z for center of gravity in respect to the global coordinate system.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetWCGException">Exception raised if an error is encountered while trying to set weight and center of gravity.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SymbolServices">
            <summary>
            Symbol-related services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.SymbolServices.#ctor">
            <summary>
            Constructor for the SymbolServices class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.SymbolServices.AddNonDrawableOutput(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.AspectDefinition@,System.String)">
            <summary>
            Adds the output to the given AspectDefinition but not display it in the graphics.
            </summary>
            <param name="businessObject">Business Object.</param>
            <param name="aspectDefinition">AspectDefinition where to add the output.</param>
            <param name="outPutName">Output name.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException">Exception raised if an error is encountered while trying set control flags.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.SymbolServices.GetSourceObject(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets the reference object from proxy object.
            </summary>
            <param name="businessObject">Proxy object whose source object is required.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException">Exception raised if an error is encountered while while getting reference object from proxy object.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StairLadderBase">
            <summary>
            Base class for the Stair and Ladder classes. This class provides generalization of
            all behavior supported by the stair and ladder.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor">
            <summary>
            Constructor for .NET to access this class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType)">
            <summary>
            Constructor for the derived classes to create a stair or ladder.
            </summary>
            <param name="parentSystem">Parent system of the traffic entity.</param>
            <param name="part">The traffic entity catalog part.</param>
            <param name="topEdge">The edge or plane which provides the top support for the traffic entity.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the traffic entity.</param>
            <param name="refEdge">The edge or plane which provides side reference for the traffic entity for offset calculations.</param>
            <param name="objectType">Identifies whether the traffic entity is either a stair or ladder.</param>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">The stair factory object CreateStair method returns null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">The ladder factory object CreateLadder method returns null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.#ctor(Ingr.SP3D.Structure.Middle.StairLadderBase,Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType)">
            <summary>
            Copy constructor for the StairLadderBase class.
            </summary>
            <param name="stairLadderBase">Traffic entity to be copied.</param>
            <param name="objectType">Identifies whether the traffic entity is a stair or ladder.</param>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">The stair factory object CreateStair method returns null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">The ladder factory object CreateLadder method returns null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.GetConnection(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Private method to retrieve a connection object.
            </summary>
            <param name="parentSystem">The objects parent system.</param>
            <returns>Returns an SP3DConnection object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.AreSupportsIntersecting(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the top support and side reference are intersecting.  If the inputs are ICurve for both
            top support and side reference then the dot product of the vectors cannot be anything other than zero (0) since
            for example a 1 or -1 in this case means they are parallel.  If the inputs are ICurve for top support and IPlane 
            for side reference (or the other way around) then their dot product of the vectors must be a value other than zero (0)
            since the normal of the plane cannot be perpendicular to the top support (or the side reference if the top support is a plane).
            </summary>
            <param name="topSupport">The plane or edge which provides the top support for the stair or ladder.</param>
            <param name="sideReference">The plane or edge which provides side reference for the stair or ladder for offset calculations.</param>
            <returns>True if supports are intersecting.  Otherwise returns false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the local coordinate system.
            </summary>
            <param name="xAxisNew">New X-axis of the local coordinate system.</param>
            <param name="yAxisNew">New Y-axis of the local coordinate system.</param>
            <exception cref="T:System.ArgumentNullException">Axis object is null.</exception>
            <exception cref="T:System.ArgumentException">Vectors are not perpendicular to each other.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StairLadderBase.DefineStairLadder(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType)">
            <summary>
            Sets the support properties (TopSupport, SideReference, and BottomSupport) for a stair or ladder.
            </summary>
            <param name="topSupport">The stair or ladder top support.</param>
            <param name="sideReference">The stair or ladder side reference.</param>
            <param name="bottomPlane">The stair or ladder bottom plane.</param>
            <param name="objectType">Enumerator which determines whether the object is a stair or ladder.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the Stair or Ladder object.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.COMClassString">
            <summary>
            Returns the class string corresponding to the COM class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.Matrix">
            <summary>
            Gets or sets the transformation matrix for the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.Origin">
            <summary>
            Gets or sets the origin of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.XAxis">
            <summary>
            Gets the read-only X-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.YAxis">
            <summary>
            Gets the read-only Y-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.ZAxis">
            <summary>
            Gets the read-only Z-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.TopSupport">
            <summary>
            Abstract property that gets the top support. Must be implemented by the derived classes.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.SideReference">
            <summary>
            Abstract property that gets the side reference. Must be implemented by the derived classes.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StairLadderBase.BottomSupport">
            <summary>
            Abstract property that gets the bottom support. Must be implemented by the derived classes.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType">
            <summary>
            Enumerator for identifying the type object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType.Stair">
            <summary>
            Identifies the Stair object.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StairLadderBase.StairLadderObjectType.Ladder">
            <summary>
            Identifies the Ladder object.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyCurveBase">
            <summary>
            TopologyCurveBase class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.#ctor(Ingr.SP3D.Structure.Middle.TopologyCurve)">
            <summary>
            TopologyCurveBase constructor.
            </summary>
            <param name="oTopologyCurve">TopologyCurve object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.GetTopologyCurveCOMBO">
            <summary>
            Gets the TopologyCurve COM BusinessObject.
            </summary>
            <returns>Returns the COM BusinessObject.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.AreaCentroidMomentsOfInertia(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
             <summary>
             Gets the center, area, moment of inertia, and principle axes of a closed planar curve.
             </summary>
             <param name="dArea">Area of the curve.</param>
             <param name="posCentroid">Centroid of the curve.</param>
             <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
             <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
             <param name="dInertiaXY">Product of inertia (zero if it is symmetrical).</param>
             <param name="dMajorPrncplInertia">Principle moment of inertia to major axis.</param>
             <param name="dMinorPrncplInertia">Principle moment of inertia to minor axis.</param>
             <param name="dPolarInertia">Polar moment of inertia to the normal.</param>
             <param name="MjIAxis">Major principle axis.</param>
             <param name="MnIAxis">Minor principle axis.</param>
             <example>This is an example of finding the center, area, moments of inertia, and principal axes of a closed planar curve.
             <code>
             Dim dArea As Double, dInX As Double, dInY As Double, dInXY As Double, dMajPrincplIn As Double, dMinPrincplIn As Double, _ 
             dPolIn As Double 
             Dim oCentroidPos As Position 
             Dim vMajIAxis As Vector, vMinIAxis As Vector 
            
             oTopologyCurve.AreaCentroidMomentsOfInertia(dArea, oCentroidPos, dInX, dInY, dInXY, dMajPrincplIn, _ 
             dMinPrincplIn, dPolIn, vMajIAxis, vMinIAxis)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.CentroidInertiaForWire(System.Double@,Ingr.SP3D.Common.Middle.Position@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Compute length, centroid, moments of inertia, principle axes of an open or closed thin wire.
            </summary>
            <param name="dLength">Length of the wire.</param>
            <param name="posCentroid">Centroid of the curve.</param>
            <param name="dInteriaX">Moment of inertia to centroidal X-axis.</param>
            <param name="dInertiaY">Moment of inertia to centroidal Y-axis.</param>
            <param name="dInertiaZ">Moment of inertia to centroidal Z-axis.</param>
            <param name="dPrncplInertiaU">Principle moment of inertia to uDir.</param>
            <param name="dPrncplInertiaV">Principle moment of inertia to vDir.</param>
            <param name="dPrncplInertiaN">Principle moment of inertia to nDir.</param>
            <param name="AxisU">Major principle axis.</param>
            <param name="AxisV">Minor principle axis.</param>
            <param name="AxisN">Minor principle axis.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnHelperInvalidStateException">CurveHelper is in invalid state as the reference to the business object has been lost.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Input an invalid argument to the COM method.</exception>
            <example>This is the example of CentroidInertiaForWire method.
            <code>
            Dim dLength, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertia, dPolarInertiaN As Double
            Dim oCentroid As Position
            Dim oMjIAxis, oMnIAxis, oNIAxis As Vector
            oTopologyCurve.CentroidInertiaForWire(dLength, oCentroid, dInteriaX, dInertiaY, dInertiaXY, dMajorPrncplInertia, dMinorPrncplInertiaN, dPolarInertia, oMjIAxis, oMnIAxis, oNAxis)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
             <summary>
             Determines the distance between this curve and the input surface.
             </summary>
             <param name="oInSurf">Input surface.</param>
             <param name="dDist">Output minimum distance.</param>
             <param name="posSrcPos">Point on this curve at minimum distance.</param>
             <param name="posInPos">Point on input surface at minimum distance.</param>
             <example>This is an example of finding the distance between this curve and an input surface.
             <code>
             Dim oPlnPoint1 As New Position(0R, -1R, 2R) 
             Dim oPlnPoint2 As New Position(0R, 3R, 2R) 
             Dim oPlnPoint3 As New Position(0R, 0R, 4R) 
             Dim oPlaneColl As New Collection(Of Position)() 
             oPlaneColl.Add(oPlnPoint1) 
             oPlaneColl.Add(oPlnPoint2) 
             oPlaneColl.Add(oPlnPoint3) 
             Dim oPlane As IPlane = New Ingr.SP3D.Common.Middle.Plane3d(oPlaneColl) 
             Dim oInSurf As ISurface = DirectCast(oPlane, ISurface) 
            
             oTopologyCurve.DistanceBetween(oInSurf, dDist, oPosSrcPos, oPosInPos)        
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Determines the distance between this curve and the input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="dDist">Output minimum distance.</param>
            <param name="posSrcPos">Point on this curve at minimum distance.</param>
            <param name="posInPos">Point on input curve at minimum distance.</param>
            <example>This is an example of finding the distance between this curve and an input curve.
            <code>  
            Dim dDist As Double 
            Dim oPosSrcPos As Position, oPosInPos As Position 
            oTopologyCurve.DistanceBetween(oInCurve, dDist, oPosSrcPos, oPosInPos)       
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
             <summary>
             Determines the distance between this curve and the input point.
             </summary>
             <param name="oPoint3d">Input point.</param>
             <param name="dDist">Output minimum distance.</param>
             <param name="posSrcPos">Point on this curve at minimum distance.</param>
             <example>This is an example of finding the distance between this curve and an input point.
             <code>  
             Dim dDist As Double 
             Dim oPosSrcPos As Position 
             Dim oPoint3d As New Point3d(2, 2, 6) 
            
             oTopologyCurve.DistanceBetween(oPoint3d, dDist, oPosSrcPos)    
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.EndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets the end points of this curve.
            </summary>
            <param name="posStart">Start position of the curve.</param>
            <param name="posEnd">End position of the curve.</param>
            <example>This is an example of finding a curve end points.
            <code>
            Dim oPos1 As Position, oPos2 As Position 
            oTopologyCurve.EndPoints(oPos1, oPos2) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
             <summary>
             Finds the intersection between this curve and a surface.
             </summary>
             <param name="oInSurf">Input surface.</param>
             <param name="colCurves">Collection of curve objects.</param>
             <param name="eIntersectCode">Enumerated value for the type of intersection.</param>
             <example>This is an example of finding the intersection between this curve and a surface.
             <code>
             Dim eIntersectCode As GeometryIntersectionType 
             Dim oIntPointColl As Collection(Of BusinessObject) 
            
             oTopologyCurve.Intersect(oInSurf, oIntPointColl, eIntersectCode) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
             <summary>
             Finds the intersection between this curve and another curve.
             </summary>
             <param name="oInCurve">Input curve.</param>
             <param name="colPos">Output collection of intersection points.</param>
             <param name="colOverlaps">Output collection of overlap points.</param>
             <param name="eIntersectCode">Enumerator describing the type of intersection.</param>
             <example>This is an example of finding the intersection between this curve and another curve.
             <code>
             Dim eIntersectCode As GeometryIntersectionType 
             Dim oIntPosColll As Collection(Of Position) 
             Dim oOverlapColll As Collection(Of Position)
            
             oTopologyCurve.Intersect(oInCurve, oIntPosColl, oOverlapColl, eIntersectCode)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on the curve.
            </summary>
            <param name="pos">Point to determine if on this curve.</param>
            <returns>True if the point is on the curve; False if the point is not on the curve.</returns>
            <example>This is an example of finding whether the input point is on the curve.
            <code>
            Dim point As New Position(3, 0, 0) 
            Dim isPointOn As Boolean = oTopologyCurve.IsPointOn(point)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.SelfIntersect(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds the self-intersections and overlaps of the curve.
            </summary>
            <param name="colIntPos">Collection of intersection points.</param>
            <param name="colOverlapPos">Collection of overlap points.</param>
            <example>This is an example of finding the curve self-intersections.
            <code>
            Dim oIntPosColl As Collection(Of Position), oOverLapPosColl As Collection(Of Position) 
            oTopologyCurve.SelfIntersect(oIntPosColl, oOverLapPosColl) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.PointAtDistanceAlong(System.Double)">
            <summary>
            Finds a point along a curve at a given distance from 
            the start of the curve.
            </summary>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <example>This is an example of finding a point along a curve at a given distance.
            <code>
            Dim posAtDistanceAlong As Position = oTopologyCurve.PointAtDistanceAlong(oTopologyCurve.Length)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.PointAtDistanceAlong(Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Finds a point along a curve at a given distance from the given 
            start point on the curve. If the given point does not lie on the curve, 
            it is along normal to curve (minimum distance). 
            </summary>
            <param name="posStart">Position to start from.</param>
            <param name="dist">Distance along.</param>
            <returns>Position - point at given distance.</returns>
            <example>This is an example of finding a point along a curve at a given distance from a given start point on the curve.
            <code>
            Dim posAtDistanceAlong As Position = oTopologyCurve.PointAtDistanceAlong(startPos, oTopologyCurve.Length)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the curve along the normal vector from the given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the curve along normal vector from a given point.
            <code>
            Dim pointToProject As New Position(10, 5, 5) 
            Dim projectPoint As Position = oTopologyCurve.ProjectPoint(pointToProject)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the curve along the given vector from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <param name="vecProj">Vector to project along. If null,
            then the function projects along vector normal to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the curve along the given vector from a given point.
            <code>
            Dim pointToProject As New Position(10, 5, 5) 
            Dim projectPoint As Position = oTopologyCurve.ProjectPoint(pointToProject, New Vector(0, 1, 0)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.TangentAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the tangent at a given point.
            </summary>
            <param name="pos">Position in which to find the tangent.</param>
            <returns>Vector - tangent vector.</returns>
            <example>This is an example of finding the tangent at a given point.
            <code>
            Dim tangentAtPoint As Vector = oTopologyCurve.TangentAtPoint(New Position(1, 0, 0)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ScopeNormal(Ingr.SP3D.Common.Middle.CurveScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Finds the planarity and the normal for this curve.
            </summary>
            <param name="eScope">Enumerator which shows the planarity of the curve.</param>
            <param name="vecNormal">The normal vector of the curve.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>No normal returned.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Normal returned, if curve is closed; then this is an oriented normal.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>A normal returned.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>No normal returned.</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Least squares normal returned.</description>
               </item>
            </list>
            </remarks>
            <example>This is an example of finding the planarity and the normal for this curve.
            <code>
            Dim eScope As CurveScopeType 
            Dim vNormal As Vector 
            oTopologyCurve.ScopeNormal(eScope, vNormal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ParameterRange(System.Double@,System.Double@)">
            <summary>
            Gets the parameter range of the curve.
            </summary>
            <param name="dStartParam">Parameter value at start.</param>
            <param name="dEndParam">Parameter value at end.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.ParameterAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets the curve parameter at the position.
            </summary>
            <param name="oPos">Given position.</param>
            <returns>Parameter value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.PositionAtParameter(System.Double)">
            <summary>
            Gets the curve position at the parameter.
            </summary>
            <param name="dParam">Given parameter value.</param>
            <returns>Position along the curve at the parameter.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveBase.TangentAtParameter(System.Double)">
            <summary>
            Gets the tangent along the curve at the parameter value.
            </summary>
            <param name="dParam">Given parameter value.</param>
            <returns>Tangent vector.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Area">
            <summary>
            Gets the area of the curve.
            </summary>
            <returns>Area value of the curve.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Centroid">
            <summary>
            Gets the centroid of the curve.
            </summary>
            <returns>Position of centroid of the curve. </returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Form">
            <summary>
            Gets the form (closure) of the curve.
            </summary>
            <returns>Enumerated value of the curve closure.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Length">
            <summary>
            Gets the length of the curve.
            </summary>
            <returns>Length value of the curve.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveBase.Scope">
            <summary>
            Gets the scope (planarity) of the curve.
            </summary>
            <returns>Enumerated value of the curve planarity.</returns>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Curve scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Curve is planar.</description>
               </item>
               <item>
                   <term>Colinear = 2</term>
                   <description>Curve is colinear.</description>
               </item>
               <item>
                   <term>Degenerate = 3</term>
                   <description>Curve is degenerate (point).</description>
               </item>
               <item>
                   <term>NonPlanar = 4</term>
                   <description>Curve is not planar.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.EquipmentFoundation">
            <summary>
            Implementation for the EquipmentFoundation class. This class is used for supporting
            equipment. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.Equipment)">
            <summary>
            Constructor for equipment foundation to be created with an equipment and catalog part.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="part">Catalog part.</param>
            <param name="supportedEquipment">Equipment where the equipment foundation needs to be created.</param>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsm"), Part) 
            
            'Create EquipmentFoundation with part and equipment. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipment)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.FoundationPort)">
             <summary>
             Constructor for the equipment foundation to be created with a foundation port and a catalog part.
             </summary>
             <param name="parentSystem">Parent system under which equipment foundation needs to be created.</param>
             <param name="part">Catalog part.</param>
             <param name="supportedFoundationPort">Supported foundation ports where the equipment foundation needs to be created.</param>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Get the plant. 
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             'Get the root system object. 
             Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
             Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
             
             'Create equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
             
             'Get the catalog part. 
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsm"), Part) 
            
             Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
             Dim foundationPort As FoundationPort = Nothing 
             If foundationPorts IsNot Nothing Then 
                 foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
             End If 
             
             'Create EquipmentFoundation with part and foundation port. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, foundationPort)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.Equipment,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Constructor for the equipment foundation to be created with equipment, supporting object, and catalog part.
             </summary>
             <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
             <param name="part">Catalog part.</param>
             <param name="supportedEquipment">Equipment where the equipment foundation needs to be created.</param>
             <param name="supportingObject">Supporting object.</param>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Get the plant. 
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             'Get the root system object. 
             Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
             Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
             
             'Create equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
             
             'Create supporting plane. 
             Dim coordinateSystem As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
             coordinateSystem.Origin = New Position(10R, 0R, 0R)  
             coordinateSystem.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
             structuralSystem.AddSystemChild(coordinateSystem) 
             Dim gridElAxis As New GridAxis(oCS, AxisType.Z) 
             'Create grid elevation plane at Z for supporting plane. 
             Dim gridElevPlane As New GridElevationPlane(0, gridElAxis) 
             gridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> 0)
             
             'Get the catalog part. 
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsmWithOptionalPlane"), Part) 
            
             'Create EquipmentFoundation with part, equipment and plane. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipment, gridElevPlane)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Equipment.Middle.FoundationPort,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Constructor for the equipment foundation to be created with a foundation port, supporting object, and catalog part.
             </summary>
             <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
             <param name="part">Catalog part.</param>
             <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
             <param name="supportingObject">Supporting object.</param>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Get the plant. 
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             'Get the root system object. 
             Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
             Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
             
             'Create equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
             
             'Get the catalog part. 
             Dim catalogStructHelper As New CatalogStructHelper()
             Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsmWithOptionalPlane"), Part) 
            
             Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
             Dim foundationPort As FoundationPort = Nothing 
             If foundationPorts IsNot Nothing Then 
                 foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
             End If 
             
             'Create supporting plane. 
             Dim coordinateSystem As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
             coordinateSystem.Origin = New Position(10R, 0R, 0R)  
             coordinateSystem.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
             structuralSystem.AddSystemChild(coordinateSystem) 
             Dim gridElAxis As New GridAxis(oCS, AxisType.Z) 
             'Create grid elevation plane at Z for supporting plane. 
             Dim gridElevPlane As New GridElevationPlane(0, gridElAxis) 
             gridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> 0)
             
             'Create EquipmentFoundation with part, and foundation port and supporting object. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, foundationPort, gridElevPlane)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Constructor for equipment foundation to be created with a collection of supported objects and catalog part.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="part">Catalog part.</param>
            <param name="supportedObjects">Collection of supported objects where the equipment foundation needs to be created.</param>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment1. 
            Dim posEquipment1 As New Position(5, 5, 5) 
            Dim equipment1 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment1.Origin = posEquipment1 
            
            'Create Equipment2. 
            Dim posEquipment2 As New Position(2, 0, 5) 
            Dim equipment2 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment2.Origin = posEquipment2 
            
            Dim equipments As New Collection(Of Equipment.Middle.Equipment)() 
            equipments.Add(equipment1) 
            equipments.Add(equipment2)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsm"), Part) 
            
            'Create EquipmentFoundation with part and equipment collection. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipments)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Constructor for the equipment foundation to be created with a collection of supported objects, supporting objects, and catalog part.
            </summary>
            <param name="parentSystem">Parent system under which equipment foundation needs to be created.</param>
            <param name="part">Catalog part.</param>
            <param name="supportedObjects">Collection of supported objects where the equipment foundation needs to be created.</param>
            <param name="supportingObjects">Collection of supporting objects.</param>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment1. 
            Dim posEquipment1 As New Position(5, 5, 5) 
            Dim equipment1 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment1.Origin = posEquipment1 
            
            'Create Equipment2. 
            Dim posEquipment2 As New Position(2, 0, 5) 
            Dim equipment2 As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment2.Origin = posEquipment2 
            
            Dim equipments As New Collection(Of Equipment.Middle.Equipment)() 
            equipments.Add(equipment1) 
            equipments.Add(equipment2)
            
            'Create supporting plane. 
            Dim coordinateSystem As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
            coordinateSystem.Origin = New Position(10R, 0R, 0R)  
            coordinateSystem.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            structuralSystem.AddSystemChild(coordinateSystem) 
            Dim gridElAxis As New GridAxis(oCS, AxisType.Z) 
            'Create grid elevation plane at Z for supporting plane. 
            Dim gridElevPlane As New GridElevationPlane(0, gridElAxis) 
            gridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> 0)
            
            Dim supportingObjects As New Collection(Of BusinessObject)() 
            supportingObjects.Add(gridElevPlane)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = DirectCast(catalogStructHelper.GetPart("BlockEqpFndnAsmWithOptionalPlane"), Part) 
            
            'Create EquipmentFoundation with part, equipment collection and supporting object collection.
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, equipments, supportingObjects)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.Equipment)">
            <summary>
            Constructor for the equipment foundation to be created with equipment.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="supportedEquipment">Supported equipment where the equipment foundation needs to be created.</param>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            'Create EquipmentFoundation with equipment. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, equipment)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.FoundationPort)">
             <summary>
             Constructor for equipment foundation to be created with foundation port.
             </summary>
             <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
             <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
             <example>This is an example for creating an equipment foundation.
             <code>
             'Get the plant. 
             Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             'Get the root system object. 
             Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
             Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
             
             'Create equipment. 
             Dim posEquipment As New Position(5, 5, 5) 
             Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
             equipment.Origin = posEquipment 
            
             Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
             Dim foundationPort As FoundationPort = Nothing 
             If foundationPorts IsNot Nothing Then 
                 foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
             End If 
             
             'Create EquipmentFoundation with foundation port. 
             Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, foundationPort)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.Equipment,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for equipment foundation to be created with equipment and the supporting object.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="supportedEquipment">Supported equipment where the equipment foundation needs to be created.</param>
            <param name="supportingObject">Supporting object.</param>
            <example>This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            'Create supporting plane. 
            Dim coordinateSystem As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
            coordinateSystem.Origin = New Position(10R, 0R, 0R)  
            coordinateSystem.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            structuralSystem.AddSystemChild(coordinateSystem) 
            Dim gridElAxis As New GridAxis(oCS, AxisType.Z) 
            'Create grid elevation plane at Z for supporting plane. 
            Dim gridElevPlane As New GridElevationPlane(0, gridElAxis) 
            gridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> 0)
            
            'Create EquipmentFoundation with equipment and plane. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, equipment, gridElevPlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Equipment.Middle.FoundationPort,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for equipment foundation to be created with the foundation port and supporting object.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="supportedFoundationPort">Supported foundation port where the equipment foundation needs to be created.</param>
            <param name="supportingObject">Supporting object.</param>
            <example> This is an example for creating an equipment foundation.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            'Get the root system object. 
            Dim rootSystem As ISystem = DirectCast(plant.RootSystem, ISystem) 
            Dim structuralSystem As New StructuralSystem(DirectCast(rootSystem, BusinessObject)) 
            
            'Create equipment. 
            Dim posEquipment As New Position(5, 5, 5) 
            Dim equipment As New Equipment.Middle.Equipment("HorCFPump01-E", structuralSystem) 
            equipment.Origin = posEquipment 
            
            Dim foundationPorts As ReadOnlyCollection(Of IPort) = equipment.GetPorts(PortType.Foundation) 
            Dim foundationPort As FoundationPort = Nothing 
            If foundationPorts IsNot Nothing Then 
                foundationPort = DirectCast(foundationPorts(0), FoundationPort) 
            End If 
            
            'Create supporting plane. 
            Dim coordinateSystem As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
            coordinateSystem.Origin = New Position(10R, 0R, 0R)  
            coordinateSystem.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            structuralSystem.AddSystemChild(coordinateSystem) 
            Dim gridElAxis As New GridAxis(oCS, AxisType.Z) 
            'Create grid elevation plane at Z for supporting plane. 
            Dim gridElevPlane As New GridElevationPlane(0, gridElAxis) 
            gridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> 0)
            
            'Create equipment foundation with foundation port and supporting object. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, foundationPort, gridElevPlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d)">
            <summary>
            Constructor for the equipment foundation to be created with a parent system, part, and given point.
            </summary>
            <param name="parentSystem">Parent system to which the equipment foundation needs to be created.</param>
            <param name="part">Catalog part.</param>
            <param name="supportedPoint">Point where the equipment foundation needs to be created.</param>
            <exception cref="T:System.ArgumentNullException">Exception is raised when null arguments are passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Exception is raised when connection to the database fails.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Exception is raised when an entity failed to create.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException">Exception is raised when we fail to get root selection name from the catalog.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefaultFndnException">Exception is raised while getting the foundation from the foundation port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException">Exception is raised when the supported object collection contains points and equipments together.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Exception is raised when input part is invalid for the supported objects passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">Exception is raised when failure occurred while getting the supported objects.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception is raised when supported objects' count is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">Exception is raised when failure occurred in setting the supported objects.</exception>
            <example> This example is to create equipment foundation by single point.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            
            'Get the root system object. 
            Dim rootSystem As ISystem = plant.RootSystem
            Dim structuralSystem As New StructuralSystem(rootSystem)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = catalogStructHelper.GetPart("BlockAndSlabEqpFndnAsm")
            
            'Origin point of the EquipmentFoundation
            Dim point3d As New Point3d(4, 8, 1) 
            
            'Create equipment foundation with part and point.
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, point3d)
            MiddleServiceProvider.TransactionMgr.Commit("EquipmentFoundationByPoint")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for the equipment foundation to be created with a parent system, part and given point, and supporting object.
            </summary>
            <param name="parentSystem">Parent system to which the equipment foundation needs to be created.</param>
            <param name="part">Catalog part.</param>
            <param name="supportedPoint">Point where the equipment foundation needs to be created.</param>
            <param name="supportingObject">Supporting object.</param> 
            <exception cref="T:System.ArgumentNullException">Exception is raised when null arguments are passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Exception is raised when connection to database fails.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Exception is raised when an entity is failed to create.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException">Exception is raised when we fail to get the root selection name from the catalog.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefaultFndnException">Exception is raised while getting foundation from the foundation port.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException">Exception is raised when the supported object collection contains points and equipments together.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">Exception is raised when input part is invalid for the supported objects passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">Exception is raised when failure occurred while getting the supported objects.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception is raised when supported objects count is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">Exception is raised when failure occurred in setting the supported objects.</exception>
            <example>This example is to create equipment foundation by single point with plane as supporting object.
            <code>
            'Get the plant. 
            Dim plant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            
            'Get the root system object. 
            Dim rootSystem As ISystem = plant.RootSystem
            Dim structuralSystem As New StructuralSystem(rootSystem)
            
            'Get the catalog part. 
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim part As Part = catalogStructHelper.GetPart("BlockAndSlabEqpFndnAsm")
            
            'Creating the grid elevation plane.
            Dim coordinateSystem As New CoordinateSystem(plant, CoordinateSystem.CoordinateSystemType.Grids)
            Dim zAxis As New GridAxis(coordinateSystem, AxisType.Z)
            Dim Z_n1 As New GridElevationPlane(-1, zAxis)
            
            'Creating the point where equipment foundation need to be placed. 
            Dim point3d As New Point3d(0, 15, 3) 
            
            'Create equipment foundation with part, point and plane.
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, part, point3d, Z_n1)
            MiddleServiceProvider.TransactionMgr.Commit("EquipmentFoundationByPointAndSupporting")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.#ctor(Ingr.SP3D.Structure.Middle.EquipmentFoundation)">
            <summary>
            Copy constructor for the equipment foundation.
            </summary>
            <param name="equipmentFoundation">Equipment foundation being copied.</param>
            <example>
            <code>
            'Create EquipmentFoundation with Equipment. 
            Dim equipmentFoundation As New EquipmentFoundation(structuralSystem, equipment)
            'Create EquipmentFoundation with EquipmentFoundation.
            Dim copyEquipmentFoundation As New EquipmentFoundation(equipmentFoundation)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetInputHelper">
            <summary>
            Retrieves the equipment foundation input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetSupportElements(System.Object,System.Object)">
            <summary>
            Retrieves the supported and supporting elements for the equipment foundation.
            </summary>
            <param name="supportedElements">Instance of equipment foundation supported elements.</param>
            <param name="supportingElements">Instance of equipment foundation supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.SetSupportElements(System.Object,System.Object)">
            <summary>
            Sets the supported and supporting elements on the equipment foundation.
            </summary>
            <param name="supportedElements">Collection of Supported Elements.</param>
            <param name="supportingElements">Collection of Supporting Elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetSupportCollection(System.Object)">
            <summary>
            Converts IJElements collections to BusinessObject collection.
            </summary>
            <param name="elements">Collections of IJElements.</param>
            <returns>Collection of Business Objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetInputCriteria">
            <summary>
            Retrieves the equipment foundation input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.ValidateInputObjectType(System.Object)">
            <summary>
            Abstract method to check whether the input object passed is valid or not.
            </summary>
            <param name="oSupportedObject">Input supported object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetValidSupportedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Abstract method to get the valid supported objects.
            </summary>
            <param name="supportedObjects">Collection of input supported objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the EquipmentFoundation
            </summary>
            <param name="xAxisNew">X-axis of the foundation port that needs to be set.</param>
            <param name="yAxisNew">Y-axis of the Foundation port that needs to be set.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.GetEquipmentFoundation(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Helper method to get equipment foundation using COM factory method.
            </summary>
            <param name="parentSystem">Parent system under which the equipment foundation needs to be created.</param>
            <param name="part">Catalog part.</param>
            <param name="supportedObjects">Collection of supported objects.</param>
            <param name="supportingObjects">Collection of supporting objects.</param>
            <returns>COM equipment foundation.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.EquipmentFoundation.ValidateEquipmentFoundationInputs(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validate the equipment foundation inputs.
            </summary>
            <param name="part">Equipment foundation Part.</param>
            <param name="supportedObjects">Collection of Supported Business Objects.</param>
            <param name="supportingObjects">Collection of Supporting Business Objects.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.XAxis">
            <summary>
            Returns the X-axis of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.YAxis">
            <summary>
            Returns the Y-axis of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.ZAxis">
            <summary>
            Returns the Z-axis of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.Origin">
            <summary>
            Gets or sets the position of EquipmentFoundation.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.EquipmentFoundation.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of EquipmentFoundation.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructConnectableHelper">
            <summary>
            Helper class to implement IStructConnectable
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.#ctor(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for the StructConnectableHelper class.
            </summary>
            <param name="oStructConn">Business Object which is a StructConnectable </param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Get StructPorts from an entity filtered by PortType and GeometryStage.
            </summary>
            <param name="ePortType">enum PortType </param>
            <param name="eGeometryStage">enum GeometryStage</param>
            <returns>TopologyPort ReadOnlyCollection</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the PortType.  PortType not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by PortType and GeometryStage.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Get StructPorts from an entity filtered by PortType and GeometryOperationTypes in the graph.
            </summary>
            <param name="ePortType">enum PortType</param>
            <param name="eGeometryOperation">enum GeometryOperationTypes</param>
            <param name="eGraphPosition">enum GraphPosition</param>
            <returns>TopologyPort ReadOnlyCollection</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the PortType.  PortType not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this Geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by PortType and GeometryOperationTypes.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Get StructPorts from an entity filtered by Context and GeometryStage in the graph.
            </summary>
            <param name="ePortType">enum PortType</param>
            <param name="eContext">enum ContextTypes</param>
            <param name="eGeometryStage">enum GeometryStage</param>
            <returns>TopologyPort ReadOnlyCollection</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the PortType.  PortType not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by Context and GeometryStage.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Get StructPorts from an entity filtered by Context and GeometryOperationTypes in the graph.
            </summary>
            <param name="ePortType">enum PortType</param>
            <param name="eContext">enum ContextTypes</param>
            <param name="eGeometryOperation">enum GeometryOperationTypes</param>
            <param name="eGraphPosition">enum GraphPosition</param>
            <returns>TopologyPort ReadOnlyCollection</returns>
            <exception cref="T:System.InvalidOperationException">The base object does not support this operation.</exception>
            <exception cref="T:System.NotImplementedException">GraphPosition.After not implemented at this time.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">Entity does not support this Geometry operation.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the PortType.  PortType not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">Unexpected failure while getting StructPorts filtered by Context and GeometryOperationTypes.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Get an existing port or a late binding port on the given entity with the given topological proxy and port moniker data. 
            Use this method to get a port whose geometry will be created by a later operation but the port is needed to hook-up a connection. 
            Typical use is in creation of Physical connection whose port geometry will be provided by an End Cut operation.
            </summary>
            <param name="eGeometryType">Topology Geometry Type.</param>
            <param name="operationId">Operation Id which will create the port.</param>
            <param name="operatorId">Operator Id.</param>
            <param name="eContext">Context imprinted on the port.</param>
            <param name="iSectionFaceType">Section Face Type/Cross Section Id imprinted on the port.</param>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">Failed to retrieve the PortType.  PortType not found.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPortException">Failed to find port.</exception>
            <returns>Struct port created by the given moniker data.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FromSOMToCOMPortType(Ingr.SP3D.Structure.Middle.TopologyGeometryType)">
            <summary>
            Convert enum .NET TopologyGeometryType to COM PortType.
            </summary>
            <param name="ePortType">enum TopologyGeometryType.</param>
            <returns>COM equivalent PortType.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FromSOMToCOMGeometrySelector(Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Convert enum .NET GeometryStage to COM StructGeometrySelector.
            </summary>
            <param name="eGeometryStage">enum GeometryStage.</param>
            <returns>COM equivalent StructGeometrySelector.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GetProgIdFromGeometryOperation(Ingr.SP3D.Structure.Middle.GeometryOperationTypes)">
            <summary>
            Get the prog id from the geometry operation.
            </summary>
            <param name="geometryOperation">enum GeometryOperationTypes.</param>
            <returns>Prog id based on the passed geometry operation.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FilterPorts(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            Filter ports based on given criteria
            </summary>
            <param name="eGeometryType">Geometry type. Considered for filtering if greater than 1.</param>
            <param name="iOperatorId">Operator ID. Considered for filtering if greater than 0.</param>
            <param name="iOperationId">Operation ID. Considered for filtering if greater than 0.</param>
            <param name="iCtx">Context Type. Considered for filtering if greater than 0.</param>
            <param name="iXid">Section ID. Considered for filtering if greater than equal to -1.</param>
            <param name="oCOMElements">Collection (IJElements) of candidate ports.</param>
            <returns>Collection of ports meeting filter criteria.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructConnectableHelper.FromCOMToSOMPorts(System.Collections.ObjectModel.Collection{System.Object})">
            <summary>
            Converts a COM ports collection to persistent Topology ports collection
            </summary>
            <param name="oCOMFilteredPorts">Collection of COM ports</param>
            <returns>Read-Only collection of topology ports which are persistent</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.StructConnectableHelper.GeometryOperations">
            <summary>
            Get geometry operations currently in the graph of the entity geometry. 
            Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FrameConnection">
            <summary>
            FrameConnection class describes the positioning relationship between the parent member system and constraining objects.
            Two Frame connections (one at either end) are generated by the parent MemberSystem.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a frame connection from the database.
            </summary>
            <param name="privateBusinessObject">PrivateBusinessObject.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetEndMemberSystems">
            <summary>
            Gets the member systems connected at this end.
            </summary>
            <returns>Read-only collection of member system objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException">Failed to get the member systems connected at the frame connection.</exception>
            <example>This is an example of the GetEndMemberSystems method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim colEndMemberSystems As ReadOnlyCollection(Of MemberSystem) = frameConnectionStartSupported.GetEndMemberSystems()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@)">
            <summary>
            Validates the given located objects for the frame connection and returns the related objects.
            </summary>
            <param name="locatedObjects">Collection of located objects.</param>
            <param name="relatedObjects">Collection of related objects.</param>
            <returns>Validate status of the connection.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException">Unexpected failure encountered during validation of the related objects from the frame connection.</exception>
            <example>This is an example of the ValidateRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)
            Dim locatedObjects As New Collection(Of BusinessObject)()
            Dim relatedObjects As Collection(Of BusinessObject) = Nothing
            locatedObjects.Add(frameConnectionSupporting)
            Dim connectionValidateStatus As ConnectionValidateStatus = frameConnectionStartSupported.ValidateRelatedObjects(locatedObjects, relatedObjects)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Sets the related objects to the connection.
            These related objects can be any of the following:
            Member system, Point, Surface, Frame connection, Plane, or Grid line. 
            Each combination of objects should result in a unique position on that end. Therefore, 
            following combinations are currently supported on an end: 
            MemberSystem/MemberSystem, MemberSystem/Surface, MemberSystem/Point3d(projected to the MemberSystem), 
            Surface/Point3d (projected to the surface), FrameConnection, Point3d, 
            Gridline/Gridline, Gridplane/Gridline
            This also accepts the empty collection to disconnect the membersystem from its related objects if any.
            </summary>
            <param name="relatedObjects">Collection of related objects.</param>
            <returns>Validation status of the connection.</returns>
            <exception cref="T:System.ArgumentNullException">Given collection of related objects to the frame connection is null or contains null objects.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Given collection of related objects to the frame connection does not provide a valid constraint for the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Given collection of related objects to the frame connection is invalid.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">Given frame connection is already disconnected or frame connection cannot be disconnected.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when error occurs in getting point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error occurs in setting point-on distance value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when error occurs in setting point-on ratio value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when error occurs in setting point-on position rule in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when error occurs in setting point-on member end in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system Sketch3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get end points on curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Sketch3d path is not compatible with the given related object at the start or end of the member.</exception>
            <example>This is an example of the SetRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)
            Dim relatedObjects As New Collection(Of BusinessObject)()
            relatedObjects.Add(frameConnectionSupporting)
            Dim connectionValidateStatus As ConnectionValidateStatus = frameConnectionStartSupported.SetRelatedObjects(relatedObjects)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetRelatedObjects">
            <summary>
            Gets the collection of related objects.
            </summary>
            <returns>Collection of related objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException">Failed to get the related objects from the frame connection.</exception>
            <example>This is an example of the GetRelatedObjects method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)       
            Dim relatedObjects As Collection(Of BusinessObject) = frameConnectionStartSupported.GetRelatedObjects()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnLocation(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.PositionRule,System.Double)">
            <summary>
            Sets the point-on member end rule, point-on position rule, and point-on ratio or point-on distance depending upon the point-on position rule. 
            </summary>
            <param name="memberEnd">Enumerated values for point-on member end rule.</param>
            <param name="positionRule">Enumerated values for point-on position rule.</param>
            <param name="value">The point-on ratio or point-on distance value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within MemberAxisEnd or PositionRule enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting point-on member end in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when error in setting point-on position rule in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">Exception raised if the point-on ratio value is less than 0 or greater then 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when error in setting point-on ratio value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">Exception raised if the point on distance value is less than 0 or greater than the member length for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error in setting point-on distance value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException">Exception raised for frame connection on a curved member system.</exception>
            <example>This is an example of the SetPointOnLocation method.
            <code>
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)       
            frameConnectionStartSupported.SetPointOnLocation(MemberAxisEnd.Start, PositionRule.Ratio, 0.2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnLocation(Ingr.SP3D.Structure.Middle.MemberSystem,Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.PositionRule,System.Double)">
            <summary>
            Sets the frame connection as point-on to the given supporting member system with the given point-on member end rule, point-on position rule, and point-on ratio or point-on distance value.
            </summary>
            <param name="memberEnd">Enumerated values for point-on member end rule.</param>
            <param name="positionRule">Enumerated values for point-on position rule.</param>
            <param name="value">The point-on ratio or point-on distance value.</param>
            <param name="supportingMember">The supporting member system on which the frame connection connected as point-on.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within MemberAxisEnd or PositionRule enumerated values.</exception>
            <exception cref="T:System.ArgumentNullException">Member system is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Exception raised when supporting and supported members are the same.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting point-on member end in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting point-on position rule in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">Exception raised if the point-on ratio is greater than 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting the point-on ratio in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">Exception raised if the point-on distance is greater than 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting point-on distance in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException">Exception raised for frame connection on a curved member system.</exception>
            <example>This is an example of the SetPointOnLocation method.
            <code>
            Dim memberSystemSupported as MemberSystem 'Create a member system using member system constructor.
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)
            'Create memberSystemSupporting on which the FC should be set as pointOn.
            Dim memberSystemSupporting as MemberSystem  'Create member system on which the FC of other member should be set as point-on using member system constructor.
            frameConnectionStartSupported.SetPointOnLocation(memberSystemSupporting, MemberAxisEnd.Start, PositionRule.Ratio, 0.25)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ExecuteSelectionRule(System.String)">
            <summary>
            Executes the selection rule on the frame connection with the given root selection. 
            Returns the item which results from the selection rule.
            </summary>
            <param name="rootSelection">Root selection from which to start.</param>
            <returns>Item selected by selector rule.</returns>
            <exception cref="T:System.ArgumentNullException">Root selection argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">Exception raised if an error is encountered in the ExecuteSelectionRule method.</exception>
            <example>
            <code>
            'Example for method ExecuteSelectionRule.
            Dim frameConnectionStartSupported As FrameConnection = memberSystemSupported.FrameConnection(MemberAxisEnd.Start)         
            Dim selectionRule As String =  frameConnectionStartSupported.ExecuteSelectionRule("Seated-Top")
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Applies the given matrix on the frame conenction.
            </summary>
            <param name="transformMatrix">Transformation matrix.</param>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException">Failed to apply transform on the frame connection.</exception>
            <example>This is an example of the Transform method.
            <code>
            Dim frameConnectionSupporting As FrameConnection = memberSystemSupporting.FrameConnection(MemberAxisEnd.End)        
            Dim transformMatrix As New Matrix4X4()
            transformMatrix.SetIndexValue(12, 100)
            frameConnectionSupporting.Transform(transformMatrix)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsRelObjTypeBad(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks to see if the related object is a valid type or not.
            </summary>
            <param name="oRelatedObject">Related object.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsRelatedObjectFrameConnOrMemberSys(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            This method checks to see if any item in the relatedObjects collection is a member system or a frame connection.
            </summary>
            <param name="colRelatedObjects">The objects that are related to the connection.</param>
            <returns>True if any object in the collection is either a member system or a frame connection, otherwise false.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ConvertFCValidateStatusToSOM(Ingr.SP3D.SPSMembers.SPSFCInputHelperStatus)">
            <summary>
            Converts SPSFCInputHelperStatus to ConnectionValidateStatus.
            </summary>
            <param name="eStatus"> SPSFCInputHelperStatus enumerator.</param>
            <returns> Equivalent ConnectionValidateStatus.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.IsValidPointOnRelatedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validate related objects for point-on condition to set.
            </summary>
            <param name="relatedObjects">Collection of related objects.</param>
            <returns>True if valid to set point-on properties.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException">Failed to find a valid member end from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnMemberEnd(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Sets the point-on member end for this frame connection.
            </summary>
            <param name="axisEnd">Which member end.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when error in setting point-on member end in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnPositionRule(Ingr.SP3D.Structure.Middle.PositionRule)">
            <summary>
            Sets the point-on position rule for this frame connection.
            </summary>
            <param name="positionRule">Enum value for position rule.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when error in setting point-on position rule in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnRatio(System.Double)">
            <summary>
            Sets the point-on ratio for this frame connection. 
            </summary>
            <param name="pointOnRatio">Point-on ratio value.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when error in setting point-on ratio value in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPointOnDistance(System.Double)">
            <summary>
            Sets the point-on distance for this frame connection. 
            </summary>
            <param name="pointOnDistance">Point-on distance value.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error in setting point-on distance value in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.GetPointOnDistanceRatioValue(System.Double@,System.Double@)">
            <summary>
            Gets the point-on ratio and point-on distance value for this frame connection. 
            </summary>
            <param name="pointOnRatio">Point-on ratio value.</param>
            <param name="pointOnDistance">Point-on distance value.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when error in getting point-on distance or ratio value from the frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetObjectsAtEnd(Ingr.SP3D.Structure.Middle.MemberAxisEnd,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Boolean)">
            <summary>
            Set the Related Objects to the member end.
            </summary>
            <param name="memberEnd">Which member end.</param>
            <param name="colRelatedObjects">Collection of related objects.</param>
            <param name="isDisconnectRelatedObjects"></param>
            <returns>Enumerator to provide validate status of the frame connection with the given set of related objects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">Exception raised when error in getting point-on distance or ratio value from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when error in setting point-on distance value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when error in setting point-on ratio value in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when error in setting point-on position rule in frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when error in setting point-on member end in frame connection.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.SetPositionAndAxis(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Structure.Middle.MemberSystem)">
            <summary>
            This method sets the Position and Orientation of the Member Axis.
            </summary>
            <param name="colRelatedObjects">The collection related objects.</param>
            <param name="eMemberEnd">The member end.</param>
            <param name="oMemSys">The member system.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Related objects at start or end do not provide a valid constraint for the member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">Cannot retrieve the curved member system sketched or end points.</exception> 
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">Cannot retrieve the curved member system sketched 3d collection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Cannot get end points on curved member system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">Skech 3d path is not compatible with the given related object at the start or end of the member.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjectConstraints(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Checks to see the related objects are valid in terms of constraints
            </summary>
            <param name="colRelatedObjects">Collection of related objects.</param>
            <param name="eMemberEnd">Member End</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FrameConnection.ValidateRelatedObjectType(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Checks to see if the related objects is a valid in terms of count and type or not.
            </summary>
            <param name="colRelatedObjects">Collection of related objects.</param>
            <param name="eMemberEnd">Member End</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.MemberEnd">
            <summary>
            Read-only property to get the member end where the frame connection is located.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException">Failed to find a valid member end from the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.Position">
            <summary>
            Read-only property to get the position of the frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">Failed to get the position of the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.MemberSystem">
            <summary>
            Read-only property to get the member system to which the frame connection belongs.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException">Failed to get the member system from the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WPOGlobal">
            <summary>
            Gets or sets the global work point offset vector definition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException">Failed to get or set the global work point offset on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Given WPOGlobal vector is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WPOLocal">
            <summary>
            Gets or sets the local work point offset vector definition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException">Failed to get or set local work point offset on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Given WPOLocal vector is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WPOCardinalPoint">
            <summary>
            Gets or sets the work point offset cardinal point definition.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException">Failed to get or set the work point offset cardinal point on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException">Invalid work point offset cardinal point being set on the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOn">
            <summary>
            Read-only property that indicates if the member system end as identified by this frame connection is point-on.
            </summary>
            <returns>True if point-on condition is satisfied.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException">Failed to get the point-on condition from the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnDistance">
            <summary>
            Gets or sets the point-on distance for this frame connection. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException">Exception raised when there is an error in getting the point-on distance from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">Exception raised if the point-on distance value is less than 0 or greater than the member length for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">Exception raised when there is an error in setting the point-on distance value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting the point-on position rule in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnRatio">
            <summary>
            Gets or sets the point-on ratio for this frame connection. 
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException">Exception raised when there is an error in getting point-on ratio from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">Exception raised if the point-on ratio value is less than 0 or greater then 1.0 for this frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">Exception raised when there is an error in setting point-on ratio value in the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting point-on position rule in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnPositionRule">
            <summary>
            Gets or sets the point-on position rule for this frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException">Exception raised when there is an error in getting the point-on position rule from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within PositionRule enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">Exception raised when there is an error in setting point-on position rule in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PointOnMemberEnd">
            <summary>
            Gets or sets the point-on member end for this frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException">Exception raised when there is an error in getting the point-on member end from the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">Exception raised if the member system is not point-on.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within MemberAxisEnd enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">Exception raised when there is an error in setting the point-on member end in the frame connection.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.PartName">
            <summary>
            Gets or sets the definition or part by name on the frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">Failed to get the part name on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">Failed to set the part name on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part name value is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">Given collection of related objects to the frame connection does not provide a valid constraint for the member.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">Given collection of related objects to the frame connection is invalid.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.Part">
            <summary>
            Gets or sets the definition or part on the frame connection.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPartException">Failed to get the part on the frame connection.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetPartException">Failed to set the part on the frame connection.</exception>
            <exception cref="T:System.ArgumentNullException">Part value is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginOid">
            <summary>
            Gets or sets the object identifier associated with the object in the application of origin. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginAppName">
            <summary>
            Gets or sets the name of the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginAppDesc">
            <summary>
            Gets or sets the description associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.OriginAppId">
            <summary>
            Gets or sets the identifier associated with the application of origin.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.EDIFlag">
            <summary>
            Gets or sets the Electronic Data Interchange (EDI) flag to be available for future use.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.ActiveNameRule">
            <summary>
            Gets or sets the active name rule. This method should be overriden because NameRule is associated to the FrameConnection.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FrameConnection.COMClassString">
            <summary>
            Returns the class string corresponding to the COM class.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ProfilePart">
            <summary>
            Provides generalization of all entities supporting profile-like behavior and functionality. 
            Base class for all parts belonging to a profile group.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IStructCrossSection">
            <summary>
            Derived from ICrossSection. 
            Realized by all wrapper classes which allow setting a cross section and returning key point dimensions and nominal dimensions. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ICrossSection">
            <summary>
            Realized by all wrapper classes which allow setting a cross section. 
            Should be defined in CommonMiddle.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.CrossSection">
            <summary>
            Gets or sets the cross section catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.SectionStandard">
            <summary>
            Gets the section standard of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.SectionType">
            <summary>
            Gets the section type of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.SectionName">
            <summary>
            Gets the section name of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ICrossSection.CrossSectionTypeName">
            <summary>
            Gets the type name (alias) of the cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetKeyPointCoordinates(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in u-v space.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="uCoord"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoord"> V-coordinate for the keypoint in the cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetKeyPointCoordinates(System.Int32,Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in u-v space at the given position along the profile.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="PositionAlong"> Position along the profile.</param>
            <param name="uCoord"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoord"> V-coordinate for the keypoint in the cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetNominalSectionSize(System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            </summary>
            <param name="width"> Width of the profile section. </param>
            <param name="depth"> Depth of the profile section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IStructCrossSection.GetNominalSectionSize(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            </summary>
            <param name="PositionAlong"></param>
            <param name="width"> Width of the profile section. </param>
            <param name="depth"> Depth of the profile section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="privateBusinessObject">Private business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.#ctor">
            <summary>
            Constructor for the ProfilePart class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.PlaceEndCutFeature(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Structure.Middle.Feature,Ingr.SP3D.Structure.Middle.EndCutType)">
            <summary>
            Places an end cut feature on a member.
            </summary>
            <param name="oBoundedPort"> End of the profile part used for the end cut feature placement.</param>
            <param name="oFeature"> End cut feature to be placed. </param>
            <param name="eEndCutType"> Type of end cut feature - web or flange.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PlaceEndCutFeatureException">Error in placing end cut feature.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
            <example>This is an example of the PlaceEndCutFeature method. 
            <code>
            Dim oFeature As New Feature
            Dim oBoundedPort As IPort
            Dim eCutType As EndCutType = EndCutType.FlangeCutTop 
            oMemberPart.PlaceEndCutFeature(oBoundedPort, oFeature, eCutType) 
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetSectionEdgesAtPlane(Ingr.SP3D.Common.Middle.IPlane,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Structure.Middle.TopologyCurve}@,System.Collections.ObjectModel.ReadOnlyCollection{System.Int32}@)">
            <summary>
            Gets section edges of a profile part at a given plane for end cut feature computation.    
            </summary>
            <param name="Plane"> Intersecting section plane. </param>
            <param name="bExtend"> Flag to extend the profile part before intersecting the plane. </param>
            <param name="SectionEdges"> Collection of section edges. </param>
            <param name="SectionXids"> Collection of edge names. </param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSectionEdgesAtPlaneException">Error in getting section edges at plane.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
            <example>This is an example of the GetSectionEdgesAtPlane method. 
            <code>
            Dim oPlaneColl As New Collection(Of Position)()
            oPlaneColl.Add(oPlnPoint1)
            oPlaneColl.Add(oPlnPoint2)
            oPlaneColl.Add(oPlnPoint3)
            Dim oPlane As IPlane = New Plane3d(oPlaneColl)
            Dim bExtend As Boolean = False
            Dim oSectionEdgesCol As ReadOnlyCollection(Of WireBody) = Nothing
            Dim oSectionXidsCol As ReadOnlyCollection(Of Integer) = Nothing
            oMemberPart.GetSectionEdgesAtPlane(oPlane, bExtend, oSectionEdgesCol, oSectionXidsCol)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetSectionFaces(System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection{Ingr.SP3D.Common.Middle.BusinessObject}@,System.Collections.ObjectModel.ReadOnlyCollection{System.Int32}@)">
            <summary>
            Gets the section faces from a profile part.
            </summary>
            <param name="bExtend"> Flag to extend the profile part before intersecting the plane.</param>
            <param name="SectionFaces"> Collection of section faces. </param>
            <param name="SectionXids"> Collection of edge names. </param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetSectionFacesException">Error in getting section faces.</exception>
            <example>This is an example of the GetSectionFaces method. 
            <code>
            Dim bExtend As Boolean = False
            Dim oSectionFacesCol As ReadOnlyCollection(Of BusinessObject) = Nothing
            Dim oSectionFacesXidsCol As ReadOnlyCollection(Of Integer) = Nothing
            oMemberPart.GetSectionFaces(bExtend, oSectionFacesCol, oSectionFacesXidsCol)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetEndCutSketchingPlaneOrigin(Ingr.SP3D.Common.Middle.Matrix4X4,Ingr.SP3D.Structure.Middle.EndCutType)">
            <summary>
            Gets the end cut sketching plane origin for the end cut type.
            </summary>
            <param name="Matrix">Matrix4X4 object.</param>
            <param name="eEndCutType">EndCutType enumerator.</param>
            <returns>Position</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndCutSketchingPlaneOriginException">Error in getting the end cut sketching plane origin.</exception>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
            <example>This is an example of the GetEndCutSketchingPlaneOrigin method. 
            <code>
            Dim oSketchingPlaneOrigin As Position
            Dim eEndCutType As EndCutType = EndCutType.FlangeCutTop
            Dim oMatrix As Matrix4X4 
            oSketchingPlaneOrigin = oMemberPart.GetEndCutSketchingPlaneOrigin(oMatrix, eEndCutType)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.SetOrientation(Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Sets the orientation of the object.
            </summary>
            <param name="xAxisNew">X-axis of the foundation port that needs to be set.</param>
            <param name="yAxisNew">Y-axis of the foundation port that needs to be set.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds another assembly child to the profile part.
            </summary>
            <param name="oChild">AssemblyChild interface.</param>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetKeyPointCoordinates(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space.
            Abstract method to be implemented by the subclass.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="uCoordinate"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoordinate"> V-coordinate for the keypoint in the cross section.</param>
            <example>This is an example of the GetKeyPointCoordinates method.
            <code>
            Dim lKeyPoint As Integer = 1
            Dim uCoOrd As Double = 0
            Dim vCoOrd As Double = 0
            oMemberPart.GetKeyPointCoordinates(lKeyPoint, oPositionAlong, uCoOrd, vCoOrd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetKeyPointCoordinates(System.Int32,Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space at the given position along the profile.
            This abstract method is to be implemented by the subclass.
            </summary>
            <param name="keyPoint">Load point or cardinal point.</param>
            <param name="posAlong"> Position along the profile.</param>
            <param name="uCoordinate"> U-coordinate for the keypoint in the cross section.</param>
            <param name="vCoordinate"> V-coordinate for the keypoint in the cross section.</param>
            <example>This is an example of the GetKeyPointCoordinates method.
            <code>
            Dim lKeyPoint As Integer = 1
            Dim oPositionAlong As New Position(5, 5, 0)
            Dim uCoOrd As Double = 0
            Dim vCoOrd As Double = 0
            oMemberPart.GetKeyPointCoordinates(lKeyPoint, oPositionAlong, uCoOrd, vCoOrd)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetNominalSectionSize(System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            This abstract method is to be implemented by the subclass.
            </summary>
            <param name="width"> Width of the profile section. </param>
            <param name="depth"> Depth of the profile section.</param>
            <example>This is an example of the GetNominalSectionSize method.
            <code>
            Dim dwidth As Double = 0
            Dim ddepth As Double = 0
            oMemberPart.GetNominalSectionSize(dwidth, ddepth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ProfilePart.GetNominalSectionSize(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets nominal size, which is the width and depth of the profile section.
            This abstract method is to be implemented by the subclass.
            </summary>
            <param name="posAlong">Position along the profile part.</param>
            <param name="width">Width of the profile section. </param>
            <param name="depth">Depth of the profile section.</param>
            <example>This is an example of the GetNominalSectionSize method.
            <code>
            Dim oPositionAlong As New Position(5, 5, 0)
            Dim dwidth As Double = 0
            Dim ddepth As Double = 0
            oMemberPart.GetNominalSectionSize( oPositionAlong, dwidth, ddepth)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.XAxis">
            <summary>
            Gets the X-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.YAxis">
            <summary>
            Gets the Y-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.ZAxis">
            <summary>
            Gets the Z-axis of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Origin">
            <summary>
            Gets or sets the position of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Matrix">
            <summary>
            Gets or sets the local coordinate system matrix of the object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.AssemblyChildren">
            <summary>
            Gets the read-only collection of Assembly Children objects of the parent object. An empty list is returned if there are
            no children for the parent object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of the profile part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.CrossSection">
            <summary>
            Gets or sets the cross section catalog part.  
            Abstract method to be implemented by the subclass.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.SectionStandard">
            <summary>
            Read-only property to get the section standard of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.SectionType">
            <summary>
            Read-only property to get the section type of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.SectionName">
            <summary>
            Read-only property to get the section name of the cross section.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.CrossSectionTypeName">
             <summary>
             Read-only property to get the type name (alias) of the cross section.
             </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionClassException">CrossSectionClass object is null.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.Material">
            <summary>
            Gets or sets the material part.  
            Abstract method to be implemented by the subclass.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.MaterialStandard">
            <summary>
            Read-only property to get the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.MaterialType">
            <summary>
            Read-only property to get the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.ProfilePart.MaterialGrade">
            <summary>
            Read-only property to get the material grade.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Feature">
            <summary>
            Part feature class definition.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberAxisPortType">
            <summary>
            Enumerator for identifying the axis port type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisPortType.Along">
            <summary>
            Port is not at an end of the axis of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisPortType.Start">
            <summary>
            Port is at the start of the axis of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.MemberAxisPortType.End">
            <summary>
            Port is at the end of the axis of the member part.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.EndCutType">
            <summary>
            Enumerator for identifying the type of end cut of the member part.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EndCutType.WebCut">
            <summary>
            The end cut of the member part is a web cut.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EndCutType.FlangeCutTop">
            <summary>
            The end cut of the member part is a flange cut top.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.EndCutType.FlangeCutBottom">
            <summary>
            The end cut of the member part is a flange cut bottom.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberPart">
            <summary>
            MemberPart class represents the real physical part in the model. A MemberPart is generated by the parent MemberSystem
            or can be created directly through its constructors.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Private wrapper constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Public constructor for MemberPart class using a Sketch3d axis to define the object.
            </summary>
            <param name="oParentSystem">Parent system of member part being created.</param>
            <param name="oAxis">Axis of the member part.</param>
            <param name="oCrossSection">Cross definition occurance that defines the shape of the member part.</param>
            <param name="oMaterial">Material of which the member part is made.</param>
            <param name="memberType">Type of the member part.</param>
            <param name="typeCategory">Category of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the member part.</param>
            <param name="rotationAngle">Angle of rotation of the member part.</param>
            <param name="bMirror">Flag that indicates whether the member part is mirrored.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">Non-linear axis not supported for the given cross section type.</exception>
            <example>This is an example of the MemberPart constructor using a Sketch3D axis to define the member part.
            <code>
            'Get the catalog helper.
            Dim oCatConn As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            Dim oCatStruHlpr As New CatalogStructHelper(oCatConn)
            
            'Get a cross section.
            Dim sRefStdName As String = "AISC-LRFD-3.1"
            Dim sSecType As String = "W"
            Dim sSecName As String = "W8x10"
            
            'Get the cross section object based on RefStdName, SecType, SecName.
            Dim oCrossSection As CrossSection = oCatStruHlpr.GetCrossSection(sRefStdName, sSecType, sSecName)
            
            'Get a material.
            Dim sMatType As String = "Steel - Carbon"
            Dim sMatGrade As String = "A"
            
            'Get the material object based on material type and material grade.
            Dim oMaterial As Material = oCatStruHlpr.GetMaterial(sMatType, sMatGrade)
            
            'Use the helper methods to get the codelist value(Integer) for the member type and member category.
            Dim lTypeCategory As Integer = MemberHelper.GetMemberCategoryCodeListValue("Beam")
            Dim lCategory As Integer = MemberHelper.GetMemberTypeCodeListValue("Beam")
            Dim lCardinalPoint As Integer = 8
            Dim dRotationAngle As Double = 0
            Dim bMirror As Boolean = False
            
            'Create a parent system. This must be instantiated.
            Dim oStructSystem As StructuralSystem = Nothing 
            
            'Create axis of the member part. This must be instantiated.
            Dim oSketch3dAxis As Sketch3D = Nothing 
            
            'Create a member part using a Sketch3D axis.
            Dim oMemberPart As New MemberPart(oStructSystem, oSketch3dAxis, oCrossSection, oMaterial, lTypeCategory,lCategory, lCardinalPoint, dRotationAngle, bMirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Public constructor for the MemberPart class using positions to define the object.
            </summary>
            <param name="oParentSystem">Parent system of member part being created.</param>
            <param name="oStartPosition">Start position.</param>
            <param name="oEndPosition">End position.</param>
            <param name="oCrossSection">Cross definition occurrence that defines the shape of the member part.</param>
            <param name="oMaterial">Material the member part is made of.</param>
            <param name="memberType">Type category of the member part.</param>
            <param name="typeCategory">Category of the member part.</param>
            <param name="cardinalPoint">Cardinal point of the member part.</param>
            <param name="rotationAngle">Angle of rotation of the member part.</param>
            <param name="bMirror">Flag that indicates whether the member part is mirrored.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <example>This is an example of the MemberPart constructor using positions to define the member part.
            <code>
            'Get the catalog helper.
            Dim oCatConn As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            Dim oCatStruHlpr As New CatalogStructHelper(oCatConn)
            
            'Get a cross section.
            Dim sRefStdName As String = "AISC-LRFD-3.1"
            Dim sSecType As String = "W"
            Dim sSecName As String = "W8x10"
            
            'Get the cross section object based on RefStdName, SecType, SecName.
            Dim oCrossSection As CrossSection = oCatStruHlpr.GetCrossSection(sRefStdName, sSecType, sSecName)
            
            'Get a material.
            Dim sMatType As String = "Steel - Carbon"
            Dim sMatGrade As String = "A"
            
            'Get the material object based on material type and material grade.
            Dim oMaterial As Material = oCatStruHlpr.GetMaterial(sMatType, sMatGrade)
            
            'Use the helper methods to get the codelist value (Integer) for the member type and member category.
            Dim lTypeCategory As Integer = MemberHelper.GetMemberCategoryCodeListValue("Beam")
            Dim lCategory As Integer = MemberHelper.GetMemberTypeCodeListValue("Beam")
            Dim lCardinalPoint As Integer = 8
            Dim dRotationAngle As Double = 0
            Dim bMirror As Boolean = False
            
            'Create a parent system. This must be instantiated.
            Dim oStructSystem As StructuralSystem = Nothing 
            
            'Create start and end position.
            Dim oStartPosition As New Position(0, 0, 0)
            Dim oEndPosition As New Position(10, 10, 0)
            
            'Create a member part using two positions.
            Dim oMemberPart As New MemberPart(oStructSystem, oStartPosition, oEndPosition, oCrossSection, oMaterial,lTypeCategory, lCategory, lCardinalPoint, dRotationAngle, bMirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Sketch3D,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Public constructor for MemberPart class using a Sketch3d axis to define the object.
            </summary>
            <param name="oParentSystem">Parent system of member part being created.</param>
            <param name="oAxis">Axis of the member part.</param>
            <param name="oCrossSection">Cross definition occurance that defines the shape of the member part.</param>
            <param name="oMaterial">Material of which the member part is made.</param>
            <param name="memberType">Type of the member part.</param>        
            <param name="cardinalPoint">Cardinal point of the member part.</param>
            <param name="rotationAngle">Angle of rotation of the member part.</param>
            <param name="bMirror">Flag that indicates whether the member part is mirrored.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">Non-linear axis not supported for the given cross section type.</exception>
            <example>This is an example of the MemberPart constructor using a Sketch3D axis to define the member part.
            <code>
            'Get the catalog helper.
            Dim oCatConn As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            Dim oCatStruHlpr As New CatalogStructHelper(oCatConn)
            
            'Get a cross section.
            Dim sRefStdName As String = "AISC-LRFD-3.1"
            Dim sSecType As String = "W"
            Dim sSecName As String = "W8x10"
            
            'Get the cross section object based on RefStdName, SecType, SecName.
            Dim oCrossSection As CrossSection = oCatStruHlpr.GetCrossSection(sRefStdName, sSecType, sSecName)
            
            'Get a material.
            Dim sMatType As String = "Steel - Carbon"
            Dim sMatGrade As String = "A"
            
            'Get the material object based on material type and material grade.
            Dim oMaterial As Material = oCatStruHlpr.GetMaterial(sMatType, sMatGrade)
            
            Dim lCategory As Integer = MemberType.Beam
            Dim lCardinalPoint As Integer = 8
            Dim dRotationAngle As Double = 0
            Dim bMirror As Boolean = False
            
            'Create a parent system. This must be instantiated.
            Dim oStructSystem As StructuralSystem = Nothing 
            
            'Create axis of the member part. This must be instantiated.
            Dim oSketch3dAxis As Sketch3D = Nothing 
            
            'Create a member part using a Sketch3D axis.
            Dim oMemberPart As New MemberPart(oStructSystem, oSketch3dAxis, oCrossSection, oMaterial, lCategory, lCardinalPoint, dRotationAngle, bMirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Public constructor for the MemberPart class using positions to define the object.
            </summary>
            <param name="oParentSystem">Parent system of member part being created.</param>
            <param name="oStartPosition">Start position.</param>
            <param name="oEndPosition">End position.</param>
            <param name="oCrossSection">Cross definition occurrence that defines the shape of the member part.</param>
            <param name="oMaterial">Material the member part is made of.</param>
            <param name="memberType">Type category of the member part.</param>        
            <param name="cardinalPoint">Cardinal point of the member part.</param>
            <param name="rotationAngle">Angle of rotation of the member part.</param>
            <param name="bMirror">Flag that indicates whether the member part is mirrored.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <example>This is an example of the MemberPart constructor using positions to define the member part.
            <code>
            'Get the catalog helper.
            Dim oCatConn As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            Dim oCatStruHlpr As New CatalogStructHelper(oCatConn)
            
            'Get a cross section.
            Dim sRefStdName As String = "AISC-LRFD-3.1"
            Dim sSecType As String = "W"
            Dim sSecName As String = "W8x10"
            
            'Get the cross section object based on RefStdName, SecType, SecName.
            Dim oCrossSection As CrossSection = oCatStruHlpr.GetCrossSection(sRefStdName, sSecType, sSecName)
            
            'Get a material.
            Dim sMatType As String = "Steel - Carbon"
            Dim sMatGrade As String = "A"
            
            'Get the material object based on material type and material grade.
            Dim oMaterial As Material = oCatStruHlpr.GetMaterial(sMatType, sMatGrade)
            
            Dim lCategory As Integer = MemberType.Beam
            Dim lCardinalPoint As Integer = 8
            Dim dRotationAngle As Double = 0
            Dim bMirror As Boolean = False
            
            'Create a parent system. This must be instantiated.
            Dim oStructSystem As StructuralSystem = Nothing 
            
            'Create start and end position.
            Dim oStartPosition As New Position(0, 0, 0)
            Dim oEndPosition As New Position(10, 10, 0)
            
            'Create a member part using two positions.
            Dim oMemberPart As New MemberPart(oStructSystem, oStartPosition, oEndPosition, oCrossSection, oMaterial, lCategory, lCardinalPoint, dRotationAngle, bMirror)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Copy constructor for the MemberPart class.
            </summary>
            <param name="oParentSystem">Parent system of the member part being created.</param>
            <param name="oMemberPart">Member part to be copied.</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Member factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">Invalid parent for the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">Non-linear axis not supported for the given cross section type.</exception>
            <example>This is an example of MemberPart copy constructor.
            <code>
            'Create a parent system. This must be instantiated.
            Dim oStructSystem As StructuralSystem = Nothing 
            
            'Create a member part using the copy constructor.
            Dim oMemberPart As New MemberPart(oStructSystem, oMemberPartToBeCopied)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetEndPoints(Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Gets the end points of the member part axis.
            </summary>
            <param name="StartPosition">Start position.</param>
            <param name="EndPosition">End position.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException">
            Cannot perform the desired action on a curved member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">Unexpected failure.</exception>
            <example>This is an example of the GetEndPoints method. 
            <code>
            oStartPosition = New Position()
            oEndPosition = New Position()
            oMemberPart.GetEndPoints(oStartPosition,oEndPosition)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.SetEndPoints(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Sets the end points of the stand-alone member part axis.
            </summary>
            <param name="start">Start position of member part axis.</param>
            <param name="end">End position of member part axis.</param>
            <exception cref="T:System.ArgumentNullException">Raised when a null argument is passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException">Raised when an action that is not allowed on a nonstand-alone member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException">Raised when an action that is not allowed on a curved member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">Raised when an error is encountered while trying to set the end points of the member part axis.</exception>
            <example>This is an example of the SetEndPoints method. 
            <code>
            Dim start As New Position(0, 0, 0)
            Dim end As New Position(2, 0, 0)
            'create proper stand-alone member part
            memberPart.SetEndPoints(start, end)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPartsAtPort(Ingr.SP3D.SPSMembers.ISPSSplitAxisPort,Ingr.SP3D.SPSMembers.PortType,System.Collections.Generic.List{Ingr.SP3D.Common.Middle.BusinessObject}@)">
            <summary>
            Private utility method to get the parts at a port.
            </summary>
            <param name="oInitialPort">Port on the member part that is being examined for connected parts.</param>
            <param name="portType">Selection from PortType enumerator that indicates the type of port.</param>
            <param name="oPartsList">List of connected parts.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetMatrixAtPosition(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Gets a matrix at the given position along the member part.
            </summary>
            <param name="positionAlong">Position of the matrix.</param>
            <returns>Matrix4X4 object.</returns>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null imput argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException">Unexpected failure in the method.</exception>
            <example>This is an example of the GetMatrixAtPosition method.
            <code>
            Dim oPositionAlong As New Position()
            Dim m4X4 As Matrix4X4 = oMemberPart.GetMatrixAtPosition(oPositionAlong)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPointAtEnd(Ingr.SP3D.Structure.Middle.MemberAxisPortType)">
            <summary>
            Gets the point at the given end of the member part.
            </summary>
            <param name="AxisPortType">Flag that indicates to which end to get the point.</param>
            <returns>Point at the given end of the member part.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException">Unexpected failure.</exception>
            <example>This is an example of the GetPointAtEnd method.
            <code>
            Dim oGetPointAtEnd As IPoint = oMemberPart.GetPointAtEnd(MemberAxisPortType.End)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetAxisPort(Ingr.SP3D.Structure.Middle.MemberAxisPortType)">
            <summary>
            Gets the axis port at the given end of the member part.
            </summary>
            <param name="AxisPortType">Flag that indicates to which end to get the port.</param>
            <returns>Port at the given end of the member part.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetAxisPortException">Unexpected failure.</exception>
            <example>This is an example of GetAxisPort method.
            <code>
            Dim oGetAxisPort As IPoint = oMemberPart.GetAxisPort(MemberAxisPortType.Along)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.AddCutbackSurface(Ingr.SP3D.Structure.Middle.MemberAxisEnd,Ingr.SP3D.Common.Middle.ISurface)">
            <summary>
            Adds a cutback surface to the member part at the given end.
            </summary>
            <param name="AxisPortType">Flag that indicates to which end to add the cutback surface.</param>
            <param name="Surface">Cutback surface to be added.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null input argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException">Surface object passed in is
            inappropriate for use as a cutback surface of this member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddCutbackSurfaceException">Unexpected failure.</exception>
            <example>This is an example of the AddCutbackSurface method.
            <code>
            Dim oSurface As ISurface 
            Dim eAxisPortType As MemberAxisEnd 
            oMemberPart.AddCutbackSurface(eAxisPortType,oSurface) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetCutbackSurfaces(Ingr.SP3D.Structure.Middle.MemberAxisEnd)">
            <summary>
            Gets the read-only collection of cutback surfaces on the member part at the given end.
            </summary>
            <param name="AxisPortType">Flag that indicates to which end to get the cutback surfaces.</param>
            <returns></returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCutbackSurfacesException">Unexpected failure.</exception>
            <example>This is an example of the GetCutbackSurfaces method.
            <code>
            Dim eAxisPortType As MemberAxisEnd 
            Dim oGetCutbackSurfaces As ReadOnlyCollection(Of ISurface) = oMemberPart.GetCutbackSurfaces(eAxisPortType) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the member part.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null input argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure. </exception>
            <example>This is an example of the Transform method.
            <code>
            Dim oT4X4 As New Matrix4X4()
            oT4X4.SetIdentity()
            Dim vVectot As New Vector(1,1,1)
            oT4X4.Translate(vVectot)
            oMemberPart.Transform(oT4X4)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetKeyPointCoordinates(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space.
            </summary>
            <param name="nKeyPoint">Load point or cardinal point.</param>
            <param name="dUCoord"> U-coordinate for the keypoint in the cross section.</param>
            <param name="dVCoord"> V-coordinate for the keypoint in the cross section.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionException">Exception raised if an error is encountered while trying to retrieve the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException">Exception raised if an error is encountered while getting the keypoint coordinates.</exception>
            <example>This is an example of the GetKeyPointCoordinates method. 
            <code>
            Dim nKeyPoint As Integer
            Dim dUCoOrd As Double
            Dim dVCoOrd As Double
            oMemberPart.GetKeyPointCoordinates(nKeyPoint,dUCoOrd,dVCoOrd)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetKeyPointCoordinates(System.Int32,Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of the given cardinal or load point on the cross section in U-V space at the given position along the profile.
            </summary>
            <param name="nKeyPoint">Load point or cardinal point.</param>
            <param name="oPositionAlong"> Position along the member.</param>
            <param name="dUCoord"> U-coordinate for the keypoint in the cross section.</param>
            <param name="dVCoord"> V-coordinate for the keypoint in the cross section.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionException">Exception raised if an error is encountered while trying to retrieve the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException">Exception raised if an error is encountered while getting the keypoint coordinates.</exception>
            <example>This is an example of GetKeyPointCoordinates method. 
            <code>
            Dim nKeyPoint As Integer
            Dim oPositionAlong As Position = New Position(5, 0, 0)
            Dim dUCoOrd As Double
            Dim dVCoOrd As Double
            oMemberPart.GetKeyPointCoordinates(nKeyPoint, oPositionAlong, dUCoOrd, dVCoOrd)
            </code>
            </example>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetNominalSectionSize(System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the member section.
            </summary>
            <param name="dWidth"> Width of the member section. </param>
            <param name="dDepth"> Depth of the member section.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionException">Exception raised if an error is encountered while trying to retrieve the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException">Exception raised if an error is encountered while getting the nominal section size.</exception>
            <example>This is an example of GetNominalSectionSize method. 
            <code>     
            Dim dWidth As Double
            Dim dDepth As Double
            oMemberPart.GetNominalSectionSize(dWidth,dDepth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetNominalSectionSize(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets the nominal size, which is the width and depth of the profile section.
            </summary>
            <param name="oPositionAlong">Position along the member.</param>
            <param name="dWidth"> Width of the profile section .</param>
            <param name="dDepth"> Depth of the profile section.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionException">Exception raised if an error is encountered while trying to retrieve the cross section.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException">Exception raised if an error is encountered while getting the nominal section size.</exception>
            <example>This is an example of the GetNominalSectionSize method. 
            <code>
            Dim oPositionAlong As Position = New Position(5, 0, 0)
            Dim dWidth As Double
            Dim dDepth As Double
            oMemberPart.GetNominalSectionSize(oPositionAlong, dWidth, dDepth)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
             <summary>
             Gets ports in the graph of the object for a specific port geometry type (i.e., End) at a given geometry stage (i.e., Current).
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eGeometryStage">Enumerator for geometry stage.</param>
             <returns>TopologyPort ReadOnlyCollection of objects.</returns>
             <example>GetPorts method example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face 
             Dim eGeometryStage As GeometryStage = GeometryStage.Current 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oMemberPart.GetPorts(eFace, eGeometryStage) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
             <summary>
             Gets ports in the graph of the object for a specific port geometry type (i.e., End) with a given operation (i.e., Split); 
             and either before or after the operation.
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eGeometryOperation">Enumerator for geometry operation.</param>
             <param name="eGraphPosition">Enumerator for graph position.</param>
             <returns>TopologyPort ReadOnlyCollection of objects.</returns>
             <example>GetPorts method example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryOperation As GeometryOperationTypes = GeometryOperationTypes.Cutout 
             Dim eGraphPosition As GraphPosition = GraphPosition.After       
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oMemberPart.GetPorts(eFace, eGeometryOperation, eGraphPosition) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
             <summary>
             Gets ports in the graph of the object for a specific topology context (i.e., Lateral Face) at a given geometry stage (i.e., Current).
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eTopologyContext">Enumerator for topology context.</param>
             <param name="eGeometryStage">Enumerator for geometry stage.</param>
             <returns>TopologyPort ReadOnlyCollection of objects.</returns>
             <example>GetPorts method example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryStage As GeometryStage = GeometryStage.Current      
             Dim eTopologyContext As ContextTypes = ContextTypes.Base 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oMemberPart.GetPorts(eFace, eTopologyContext, eGeometryStage)                
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
             <summary>
             Gets ports in the graph of the object for a specific topology context (i.e., Lateral Face),
             with a given operation (i.e., Split), and either before or after the operation.
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eTopologyContext">Enumerator for topology context.</param>
             <param name="eGeometryOperation">Enumerator for geometry operation.</param>
             <param name="eGraphPosition">Enumerator for graph position.</param>
             <returns>TopologyPort ReadOnlyCollection of objects.</returns>
             <example>GetPorts method example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryOperation As GeometryOperationTypes = GeometryOperationTypes.Cutout 
             Dim eGraphPosition As GraphPosition = GraphPosition.After     
             Dim eTopologyContext As ContextTypes = ContextTypes.Base 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oMemberPart.GetPorts(eFace, eTopologyContext, eGeometryOperation, eGraphPosition)                
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPart.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
             <summary>
             Gets an existing port or a late binding port on the given entity with the given topological proxy and port moniker data. 
             Use this method to get a port whose geometry will be created by a later operation but the port is needed to hook-up a connection. 
             Typical use is in creation of a physical connection whose port geometry will be provided by an end cut operation.
             </summary>
             <param name="eGeometryType">Topology geometry type.</param>
             <param name="operationId">Operation ID which will create the port.</param>
             <param name="operatorId">Operator ID.</param>
             <param name="eContext">Context imprinted on the port.</param>
             <param name="iSectionFaceType">Section face type or cross section ID imprinted on the port.</param>
             <returns>Topology port created by the given moniker data.</returns>
             <example>GetPort method example code.
             <code>
             Dim proxyType As TopologyGeometryType = TopologyGeometryType.Face 
             Dim operationId As Integer = 0 
             Dim operatorId As Integer = 0 
             Dim context As ContextTypes = ContextTypes.Base 
             Dim crossSectionId As Integer = CInt(SectionFaceType.Bottom_Flange_Left) 
            
             Dim port As TopologyPort = oMemberPart.GetPort(proxyType, operationId, operatorId, context, crossSectionId)              
             </code>
             </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Curved">
            <summary>
            Gets the read-only property concerned with whether the member part is curved or not.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IsCurvedException">Unexpected failure. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StandAlone">
            <summary>
            Gets whether the member part is a child of a member system.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StandAloneException">Unexpected failure. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.DesignedMember">
            <summary>
            Gets whether the member part wrapper is for a designed member COM business object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DesignedMemberException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Prismatic">
            <summary>
            Gets whether the member part is for a member part prismatic COM business object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PrismaticException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Axis">
            <summary>
            Gets the axis of a member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AxisException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.CardinalPoint">
            <summary>
            Gets or sets the cardinal point of a member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CardinalPointException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.CutLength">
            <summary>
            Gets the cut length of a member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CutLengthException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.MemberSystem">
            <summary>
            Read-only property to get the member system parent of the system generated member part.
            </summary>
            <returns>Member system, for system generated member part; otherwise null.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException">Raised when unable to get the member system parent of a member part.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.ConnectedParts">
            <summary>
            Gets the read-only collection of parts connected to the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ConnectedPartsException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.OrientationVector">
            <summary>
            Gets or sets the orientation vector on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Raised when an action that is not allowed on a non-prismatic member part has been attempted.</exception>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.OrientationVectorException">Raised when an error is encountered while trying to get or set the orientation vector property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.BetaAngle">
            <summary>
            Gets or sets the beta angle on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Raised when an action that is not allowed on a non-prismatic member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BetaAngleException">Raised when an error is encountered while trying to get or set the beta angle property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Mirror">
            <summary>
            Gets or sets the reflect flag on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Raised when an action that is not allowed on a non-prismatic member part has been attempted.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MirrorException">Raised when an error is encountered while trying to get or set the mirror property.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Releases">
            <summary>
            Gets the analysis releases on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ReleasesException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Loads">
            <summary>
            Gets the analysis loads on the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LoadsException">Unexpected failure.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.COMClassString">
            <summary>
            Gets the class string corresponding to the COM class.
            </summary>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartXDisplacement">
            <summary>
            Gets or sets the X displacement at the start of the member part.
            </summary>
            <value>The start X displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException">Thrown when unable to get the start X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException">Thrown when unable to set the start X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartYDisplacement">
            <summary>
            Gets or sets the Y displacement at the start of the member part.
            </summary>
            <value>The start Y displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException">Thrown when unable to get the start Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException">Thrown when unable to set the start Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartZDisplacement">
            <summary>
            Gets or sets the Z displacement at the start of the member part.
            </summary>
            <value>The start Z displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException">Thrown when unable to get the start Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException">Thrown when unable to set the start Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartXRotation">
            <summary>
            Gets or sets the X rotation at the start of the member part.
            </summary>
            <value>The start X rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException">Thrown when unable to get the start X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException">Thrown when unable to set the start X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartYRotation">
            <summary>
            Gets or sets the Y rotation at the start of the member part.
            </summary>
            <value>The start Y rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException">Thrown when unable to get the start Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException">Thrown when unable to set the start Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartZRotation">
            <summary>
            Gets or sets the Z rotation at the start of the member part.
            </summary>
            <value>The start Z rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException">Thrown when unable to get the start Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException">Thrown when unable to set the start Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndXDisplacement">
            <summary>
            Gets or sets the X displacement at the end of the member part.
            </summary>
            <value>The end X displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException">Thrown when unable to get the end X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException">Thrown when unable to set the end X displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndYDisplacement">
            <summary>
            Gets or sets the Y displacement at the end of the member part.
            </summary>
            <value>The end Y displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException">Thrown when unable to get the end Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException">Thrown when unable to set the end Y displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Thrown when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndZDisplacement">
            <summary>
            Gets or sets the Z displacement at the end of the member part.
            </summary>
            <value>The end Z displacement.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException">Raised when unable to get the end Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException">Raised when unable to set the end Z displacement on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndXRotation">
            <summary>
            Gets or sets the X rotation at the end of the member part.
            </summary>
            <value>The end X rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException">Raised when unable to get the end X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException">Raised when unable to set the end X rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndYRotation">
            <summary>
            Gets or sets the Y rotation at the end of the member part.
            </summary>
            <value>The end Y rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException">Raised when unable to get the end Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException">Raised when unable to set the end Y rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndZRotation">
            <summary>
            Gets or sets the Z rotation at the end of the member part.
            </summary>
            <value>The end Z rotation.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException">Raised when unable to get the end Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException">Raised when unable to set the end Z rotation on the member part.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">Raised when the set value for member release is not a valid DisplacementType.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.StartMemberRelease">
            <summary>
            Gets or sets the member release at the start of the member part.
            </summary>
            <value>The start member release.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException">Raised when unable to get the start member release on the member part.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.EndMemberRelease">
            <summary>
            Gets or sets the member release at the end of the member part.
            </summary>
            <value>The end member release.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException">Raised when unable to get the end member release on the member part.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.MemberReleases">
            <summary>
            Gets the member releases for this member part.
            </summary>
            <value>The member releases COM interface.</value>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.TypeCategory">
            <summary>
            Gets or sets the type category of the member part.
            Setting the type category automatically sets the default Type value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeCategoryException">Unexpected failure. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Type">
            <summary>
            Gets or sets the type of the member part.
            Setting the type automatically sets the parent Type category value.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TypeException">Unexpected failure. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Priority">
            <summary>
            Gets or sets the priority of the member part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">
            The object is of the wrong type to support the desired action.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PriorityException">Unexpected failure. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.CrossSection">
            <summary>
            Gets or sets the cross section catalog part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.Material">
            <summary>
             Gets or sets the material part.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">Unexpected failure. </exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.WBSItemParents">
            <summary>
            WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPart.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.CurveType">
            <summary>
            New enumerator for the curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Line">
            <summary>
            Line curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Arc">
            <summary>
            Arc curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Ellipse">
            <summary>
            Ellipse curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.BSpline">
            <summary>
            BSpline curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.Circle">
            <summary>
            Circle curve type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.CurveType.EllipticalArc">
            <summary>
            EllipticalArc curve type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyCurve">
            <summary>
            TopologyCurve class which implements ICurve. Its CurveType property helps in explicit cast.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurve.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurve.op_Explicit(Ingr.SP3D.Structure.Middle.TopologyCurve)~Ingr.SP3D.Structure.Middle.TopologyCurveLine">
            <summary>
            Explicit cast operator to be able to cast TopologyCurve to TopologyCurveLine.
            </summary>
            <param name="oTopologyCurve">TopologyCurve object.</param>
            <returns>Instance of TopologyCurveLine.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurve.Type">
            <summary>
            Gets the topology curve type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologyCurveLine">
            <summary>
            TopologyCurveLine class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologyCurveLine.#ctor(Ingr.SP3D.Structure.Middle.TopologyCurve)">
            <summary>
            TopologyCurveLine constructor.
            </summary>
            <param name="oTopologyCurve">TopologyCurve object.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.Infinite">
            <summary>
            Gets or sets whether this line is infinite.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InfiniteException">Unexpected failure while getting or setting the Infinite property on the Line object.</exception>        
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.StartPoint">
            <summary>
            Gets or sets the start point of the line.
            <para>Note: Do not call this routine for set if the line is infinite.</para>
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StartPointException">Unexpected failure while getting or setting the start point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.EndPoint">
            <summary>
            Gets or sets the end point of the line.
            <para>Note: Do not call this routine for set if the line is infinite.</para>
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.EndPointException">Unexpected failure while getting or setting the end point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.RootPoint">
            <summary>
            Gets or sets the root point of the line.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RootPointException">Unexpected failure while getting or setting the root point.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologyCurveLine.Direction">
            <summary>
            Gets or sets the direction vector.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DirectionException">Unexpected failure while getting or setting the direction vector.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.LogicalConnection">
            <summary>
            Logical connection class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.LogicalConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Logical connection constructor.
            </summary>
            <param name="oPB">Private business object.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.AssemblyConnection">
            <summary>
            Wrapper class for assembly connection class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.AssemblyConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business Object</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Stair">
            <summary>
            Stair class definition. Behavior of the Stair class is customized through user attributes
            using generic property access.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Public constructor for the Stair class using an edge object for top support and side reference.
             </summary>
             <param name="parentSystem">Parent system of the stair.</param>
             <param name="part">The stair catalog part.</param>       
             <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
             <param name="sideReference">The edge which provides side reference for the stair for offset calculations.</param>
             <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">The stair factory object CreateStair method returns null.</exception>        
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of the stair constructor with grid lines as top support and side reference, and grid plane as bottom plane.
             <code>
             ' Get the catalog helper.
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim oCatConn As SP3DConnection = oPlant.PlantCatalog 
             Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn) 
            
             ' Creating parent system for the stair to be created. 
             Dim oRootSystem As ISystem = oPlant.RootSystem 
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject) 
             Dim oStructuralSystem As ISystem = New StructuralSystem(oParent) 
            
             ' Get the ModelConnection object. 
             Dim oConn As SP3DConnection = DirectCast(oPlant, SP3DConnection) 
            
             Dim oStairSystem As ISystem = New StructuralSystem(oParent) 
             Dim oSystemName As Ingr.SP3D.Common.Middle.INamedItem = DirectCast(oStairSystem, Ingr.SP3D.Common.Middle.INamedItem) 
             oSystemName.SetUserDefinedName("Stairs_test") 
            
             'Create coordinate system. 
             Dim oCS As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
             Dim oPos As New Position(10R, 0R, 0R) 
             oCS.Origin = oPos 
             oCS.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            
             'Adding coordinate system to system. 
             oStairSystem.AddSystemChild(oCS) 
            
             Dim dTopPlanePos As Double = 0 
             Dim dBotPlanePos As Double = 0 
             Dim dSidePlanePos As Double = 0 
             Dim dBotPlanePos20 As Double = 0 
            
             'Top plane means vertical plane to support at top of the stair. 
             dTopPlanePos = 10 
             dBotPlanePos = 0 
             dSidePlanePos = 0 
             dBotPlanePos20 = 20 
            
             Dim oBottomPlane As IPlane 
             Dim oBottomPlane20 As IPlane 
             Dim oSideRefPlane As IPlane 
             Dim oTopSupportPlane As IPlane 
            
             Dim oGridAxisTop As New GridAxis(oCS, AxisType.X) 
             Dim oGridAxisSide As New GridAxis(oCS, AxisType.Y) 
             Dim oGridElAxis As New GridAxis(oCS, AxisType.Z) 
            
             Dim oGLTopBottom As Ingr.SP3D.Grids.Middle.GridLine 
             Dim oGLSideBottom As Ingr.SP3D.Grids.Middle.GridLine 
            
             'Create grid plane for top support plane. 
             Dim oGridPlaneTop As New GridPlane(dTopPlanePos, oGridAxisTop) 
             oGridPlaneTop.SetUserDefinedName(("GridPlaneAt" <![CDATA["&"]]> oGridAxisTop.AxisType.ToString()) + dTopPlanePos) 
             oTopSupportPlane = oGridPlaneTop 
            
             'Create grid plane for side reference plane. 
             Dim oGridPlaneSide As New GridPlane(dSidePlanePos, oGridAxisSide) 
             oGridPlaneSide.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisSide.AxisType.ToString()) + dSidePlanePos) 
             oSideRefPlane = oGridPlaneSide 
            
             'Create grid elevation plane at Z for bottom support plane. 
             Dim oGridElevPlane As New GridElevationPlane(dBotPlanePos, oGridElAxis) 
             oGridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos) 
             oBottomPlane = oGridElevPlane 
            
             'Create grid elevation plane at Z20 for bottom support plane20. 
             Dim oGridElevPlane20 As New GridElevationPlane(dBotPlanePos20, oGridElAxis) 
             oGridElevPlane20.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos20) 
             oBottomPlane20 = oGridElevPlane 
            
             oGLTopBottom = oGridElevPlane20.CreateGridLine(oGridPlaneTop) 
             oGLSideBottom = oGridElevPlane20.CreateGridLine(oGridPlaneSide) 
            
             ' Get the catalog part. 
             Dim oPart As Part = DirectCast(oCatalogStructHelper.GetPart("StairA1"), Part) 
            
             Dim oStair As New Stair(oStairSystem, oPart, oGLTopBottom, oBottomPlane, oGLSideBottom) 
             oStair.SetUserDefinedName("StairByTopGridLineAndRefCurve") 
             oStair.SetPropertyValue(New PropertyValueDouble("ISPSHorizVertOffset", "HorizontalOffset", 15)) 
             oStair.SystemParent = oStairSystem 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Public constructor for the Stair class using an edge object for top support without a side reference.
             </summary>
             <param name="parentSystem">Parent system of the stair.</param>
             <param name="part">The stair catalog part.</param>
             <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
             <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">The stair factory object CreateStair method returns null.</exception>        
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of the stair constructor with a grid line as top support and a grid plane as bottom plane.
             <code>
             ' Get the catalog helper.
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim oCatConn As SP3DConnection = oPlant.PlantCatalog 
             Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn) 
            
             ' Creating parent system for the stair to be created. 
             Dim oRootSystem As ISystem = oPlant.RootSystem 
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject) 
             Dim oStructuralSystem As ISystem = New StructuralSystem(oParent) 
            
             ' Get the model connection object. 
             Dim oConn As SP3DConnection = DirectCast(oPlant, SP3DConnection) 
            
             Dim oStairSystem As ISystem = New StructuralSystem(oParent) 
             Dim oSystemName As Ingr.SP3D.Common.Middle.INamedItem = DirectCast(oStairSystem, Ingr.SP3D.Common.Middle.INamedItem) 
             oSystemName.SetUserDefinedName("Stairs_test") 
            
             'Create coordinate system. 
             Dim oCS As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
             Dim oPos As New Position(10R, 0R, 0R) 
             oCS.Origin = oPos 
             oCS.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            
             'Adding coordinate system to system. 
             oStairSystem.AddSystemChild(oCS) 
            
             Dim dTopPlanePos As Double = 0 
             Dim dBotPlanePos As Double = 0 
             Dim dSidePlanePos As Double = 0 
             Dim dBotPlanePos20 As Double = 0 
            
             'Top plane means vertical plane to support at top of stair.
             dTopPlanePos = 10 
             dBotPlanePos = 0 
             dSidePlanePos = 0 
             dBotPlanePos20 = 20 
            
             Dim oBottomPlane As IPlane 
             Dim oBottomPlane20 As IPlane 
             Dim oSideRefPlane As IPlane 
             Dim oTopSupportPlane As IPlane 
            
             Dim oGridAxisTop As New GridAxis(oCS, AxisType.X) 
             Dim oGridAxisSide As New GridAxis(oCS, AxisType.Y) 
             Dim oGridElAxis As New GridAxis(oCS, AxisType.Z) 
            
             Dim oGLTopBottom As Ingr.SP3D.Grids.Middle.GridLine 
             Dim oGLSideBottom As Ingr.SP3D.Grids.Middle.GridLine 
            
             'Create grid plane for top support plane. 
             Dim oGridPlaneTop As New GridPlane(dTopPlanePos, oGridAxisTop) 
             oGridPlaneTop.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisTop.AxisType.ToString()) + dTopPlanePos) 
             oTopSupportPlane = oGridPlaneTop 
            
             'Create grid plane for side reference plane. 
             Dim oGridPlaneSide As New GridPlane(dSidePlanePos, oGridAxisSide) 
             oGridPlaneSide.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisSide.AxisType.ToString()) + dSidePlanePos) 
             oSideRefPlane = oGridPlaneSide 
            
             'Create grid elevation plane at Z for bottom support plane. 
             Dim oGridElevPlane As New GridElevationPlane(dBotPlanePos, oGridElAxis) 
             oGridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos) 
             oBottomPlane = oGridElevPlane 
            
             'Create grid elevation plane at Z20 for bottom support plane20. 
             Dim oGridElevPlane20 As New GridElevationPlane(dBotPlanePos20, oGridElAxis) 
             oGridElevPlane20.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos20) 
             oBottomPlane20 = oGridElevPlane 
            
             oGLTopBottom = oGridElevPlane20.CreateGridLine(oGridPlaneTop) 
             oGLSideBottom = oGridElevPlane20.CreateGridLine(oGridPlaneSide) 
            
             ' Get the catalog part. 
             Dim oPart As Part = DirectCast(oCatalogStructHelper.GetPart("StairA1"), Part) 
            
             Dim oStair As New Stair(oStairSystem, oPart, oGLTopBottom, oBottomPlane) 
             oStair.SetUserDefinedName("StairByTopGridLineWithoutARefPlane") 
             oStair.SetPropertyValue(New PropertyValueDouble("ISPSHorizVertOffset", "HorizontalOffset", 15)) 
             oStair.SystemParent = oStairSystem 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.#ctor(Ingr.SP3D.Structure.Middle.Stair)">
            <summary>
            Copy constructor for the Stair class.
            </summary>
            <param name="stair">The stair to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StairNullException">The stair factory object CreateStair method returns null.</exception>       
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <example>This is an example of the stair copy constructor.
            <code>
            ' Call the constructor.
            Dim oStair As New Stair(oStairToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses an edge object for top support and side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves 
            that are not allowed.   
            </summary>
            <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <param name="sideReference">The edge which provides side reference for the stair for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>   
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support and a plane for side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <param name="sideReference">The plane which provides side reference for the stair for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and a plane object as side reference.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferencePlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses a plane for top support and an edge object for side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The plane which provides the top support for the stair.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <param name="sideReference">The edge which provides side reference for the stair for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>
            <example>This is an example of the overloaded SetInputs method which takes a plane object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportPlane, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Stair.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support without a side reference to set the support properties 
            for a stair.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the stair. The stair top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the stair.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the stair.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support
            and a plane object as bottom plane.
            <code>
            'Create a stair using its constructor.
            oStair.SetInputs(oTopSupportCurve, oBottomPlane)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.TopSupport">
            <summary>
            Read-only property to get the stair top support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TopSupportException">Exception raised if an error is encountered while trying to get stair top support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.SideReference">
            <summary>
            Read-only property to get the stair side reference.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException">Exception raised if an error is encountered while trying to get stair side reference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.BottomSupport">
            <summary>
            Read-only property to get the stair bottom support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BottomSupportException">Exception raised if an error is encountered while trying to get stair bottom support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Stair.Matrix">
            <summary>
            Gets or sets the transformation matrix for the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Failed to get or set the matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Matrix object is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySolid">
            <summary>
            Stub for TopologySolid class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySolid.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.GeometryServices">
            <summary>
            Geometry-related services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsSurface(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks if the provided business object input is a surface or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a surface or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsCurve(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks if the provided business object input is a curve or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a curve or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsLine(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks if the provided business object input is a line or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a line or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsPlane(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks if the provided business object input is a plane or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is a plane or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.IsArc(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks whether the provided business object input is a arc or not.
            </summary>
            <param name="businessObject">Business Object</param>
            <returns>Boolean value indicating whether the object is an arc or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetCurveParameterPosition(Ingr.SP3D.Common.Middle.ICurve,System.Double)">
            <summary>
            Gets a position from a curve parameter.
            </summary>
            <param name="curve">The curve object.</param>
            <param name="curveParameter">The curve parameter.</param>
            <returns>Curve parameter position.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Exception raised while error in getting position from the curve parameter.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetCurveParameter(Ingr.SP3D.Common.Middle.ICurve,System.Double@,System.Double@)">
            <summary>
            Gets the curve start and end parameter range.
            </summary>
            <param name="curve">The curve object.</param>
            <param name="startParameter">Start parameter range.</param>
            <param name="endParameter">End parameter range.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Exception raised while error in getting start and end parameter range from curve.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.EvaluateCurve(Ingr.SP3D.Common.Middle.ICurve,System.Double,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Vector@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Gets the position from a parameter and derivatives at the point from curve.
            </summary>
            <param name="curve">The curve object.</param>
            <param name="parameter">The curve parameter.</param>
            <param name="parameterPosition">Parameter position.</param>
            <param name="tangent">First derivative of the position.</param>
            <param name="deltaTangent">Second derivative of the position.</param>
            <exception cref="T:System.ArgumentNullException">Exception raised if null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.MathArgumentInvalidException">Exception raised while error in getting position from a parameter and derivatives at the point from curve.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetCurveByOffset(Ingr.SP3D.Common.Middle.ComplexString3d,Ingr.SP3D.Common.Middle.Position,System.Double)">
            <summary>
            Creates a new curve, offset from the given planar curve by the specified offset distance. 
            The given offset point lies on the new offset curve.
            </summary>
            <param name="inputCurve">Input curve.</param>
            <param name="pointOnOffsetCurve">Position which lies on the new offset curve.</param>
            <param name="offsetDistance">Offset distance.</param>
            <returns>Offset curve as ComplexString3d object.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException">Exception raised while error in getting curve by offset.</exception>
            <example>Example code for using this method
            <code>
            Dim geometryServices As New GeometryServices()
            Dim pointOnOffsetCurve As New Position(1, 1, 1)
            Dim offsetDistance As Double = 1.0
            Dim inputCurve As ComplexString3d
            Dim offsetCurve As ComplexString3d = geometryServices.GetCurveByOffset(inputCurve, pointOnOffsetCurve, offsetDistance)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetProjectionSurfacesFromCircle(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.ComplexString3d,Ingr.SP3D.Common.Middle.Circle3d,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Sweeps a curve along another curve.
            </summary>
            <param name="connection">SP3DConnection object.</param>
            <param name="traceCurve">The trace curve.</param>
            <param name="sweepCurve">The cross section curve or curve to be swept.</param>
            <param name="sweepOption">Enumerated value for sweep options.</param>
            <returns>Collection of BusinessObjects.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException">Exception raised while error in create by single sweep with cap option on.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetProjectionSurfacesFromCircleException">Exception raised while error in getting projection surfaces from circle.</exception>
            <example>Example code for using this method
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim geometryServices As New GeometryServices()
            'assign proper trace curve
            Dim traceCurve As ComplexString3d
            'assign proper sweep curve
            Dim sweepCurve As Circle3d
            Dim sweepOption As SweepOptions = SweepOptions.BreakCrossSection
            Dim projectionSurfaces As Collection(Of BusinessObject) = geometryServices.GetProjectionSurfacesFromCircle(connection, traceCurve, sweepCurve, sweepOption)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.GetClipSurfaceFromPlanes(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.Projection3d,Ingr.SP3D.Common.Middle.Plane3d)">
            <summary>
            Get the clip surfaces from the projection and plane.
            </summary>
            <param name="connection">SP3D model connection object.</param>
            <param name="projection3d">Projection on which we need to clip.</param>
            <param name="plane">Plane to bound the clip of surfaces.</param>
            <returns>Read-only collection of clip surfaces.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException">Exception raised when an error occurs while getting the clip surfaces from planes.</exception>
            <example>Example code for using this method
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim geometryServices As New GeometryServices()
            'assign proper projection path
            Dim projection3d As Projection3d
            'assign proper plane
            Dim plane As Plane3d
            Dim clipSurfaces As ReadOnlyCollection(Of BusinessObject) = geometryServices.GetClipSurfaceFromPlanes(connection, projection3d, plane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.GeometryServices.SetSurfaceNormalOutwards(Ingr.SP3D.Common.Middle.Surface3d)">
            <summary>
            Sets the outward normal on the given surface.
            </summary>
            <param name="surface">surface on which the outward normal is set.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructHelper">
            <summary>
            Class to define all the helper methods for structure entities.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StructHelper.DISTTOL">
            <summary>
            const double value for distance tolerance.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StructHelper.MEDIUMDISTTOL">
            <summary>
            const double value for medium distance tolerance.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.StructHelper.SMALLDISTTOL">
            <summary>
            const double value for small distance tolerance.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetDefaultNameRule(System.String)">
            <summary>
            Gets the default name rule for the given class.
            </summary>
            <param name="sProgID"> COM class ProgID for which the name rule is being asked.</param>
            <returns>BusinessObject</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetStringProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a string property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The string property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetLongProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a long property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The long property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetDoubleProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a double property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The double property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetBoolProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets a boolean property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The boolean property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetIntProperty(Ingr.SP3D.Common.Middle.BusinessObject,System.String,System.String)">
            <summary>
            Gets an integer property for the given business object using generic property access.
            </summary>
            <param name="businessObject">Business object implementing the interface.</param>
            <param name="interfaceName">Interface name.</param>
            <param name="propertyName">Property name on the interface.</param>
            <returns>The int property value.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreEqual(System.Double,System.Double)">
            <summary>
            Compares two doubles with a default tolerance (0.0001).
            </summary>
            <param name="dbl1">First double variable.</param>
            <param name="dbl2">Second double variable.</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreEqual(System.Double,System.Double,System.Double)">
            <summary>
            Compares two doubles within a given tolerance.
            </summary>
            <param name="dbl1">First double variable.</param>
            <param name="dbl2">Second double variable.</param>
            <param name="dTol">Tolerance for test.</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetToDoRecordCodelistTable(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Helper method to get the ToDo record codelist table name if the business object is in the ToDo list.
            </summary>
            <param name="businessObject">Business object in the ToDo list.</param>
            <returns>ToDo record codelist table name if the business object is in the ToDo list; otherwise an empty string.</returns>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException">Exception raised when an error occurs in getting the ToDo record codelist table name from the given business object.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.GetCodeListInfo(System.String,System.String)">
            <summary>
            Helper method to get codelist information.
            </summary>
            <param name="codelistTableName">Codelist table name.</param>
            <param name="nameSpace">Codelist table namespace.</param>
            <returns>Codelist information.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.IsValidCodeListValue(System.String,System.String,System.Int32)">
            <summary>
            Checks whether the codelist value is exist in the codelist table passed in.
            </summary>
            <param name="codelistTableName">Codelist table name.</param>
            <param name="codelistTableNamespace">Codelist table namespace name.</param>
            <param name="value">Integer for codelist value.</param>
            <returns><c>true</c> if the value is exist in the codelist table; otherwise, <c>false.</c></returns>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <example>This is an example of the MemberSystem constructor.
            <code>
            Dim codelistTableName As String = "StructAlignment"
            Dim codelistTableNamespace As String = "REFDAT"
            Dim isValidCodeListValue As Boolean = StructHelper.IsValidCodeListValue(codelistTableName, codelistTableNamespace, 1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.CreateStructPlane(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.Common.Middle.PlaneDefinition)">
            <summary>
            Helper method to create the plane using the PlaneDefinition class. This method calls the factory method to create StructPlane3D from the PlaneDefinition object.
            validation such as colinear check and same position check are done before the factory method is called.
            </summary>
            <param name="connection">SP3D Connection object.</param>
            <param name="planeDefinition">The plane definition.</param>
            <returns>StructPlane3D</returns>
            <exception cref="T:System.ArgumentNullException">Argument is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateStructPlane3DException">Failed to create struct plane3d object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GeometryPattern">Failed to set the geometry pattern on the plane.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">When the inputs are invalid.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructHelper.AreCollinear(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Point3d})">
            <summary>
            Helper method checks whether the three points passed to the plane definition constructor are colinear or not.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.BoundaryDefinition">
            <summary>
             Boundary Definition class.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_oBoundaryObject">
            <summary>
            Boundary business object. 
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_dOffset">
            <summary>
            Offset in case of members.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.BoundaryDefinition.m_eFacePosition">
            <summary>
            Port face position.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.BoundaryDefinition.#ctor(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Structure.Middle.PortFacePosition,System.Double)">
            <summary>
            Public constructor for the BoundaryDefinition class.
            </summary>
            <param name="boundary">The boundary object.</param>
            <param name="portFacePosition">Enumerated value for the port face position.</param>
            <param name="offset">The offset value.</param>
            <example>This is an example of the BoundaryDefinition constructor.
            <code>
            Dim oBoundaryDefinition As New BoundaryDefinition(oMemberSystem.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.BoundaryObject">
            <summary>
            Gets or sets the Boundary object of the slab. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.Offset">
            <summary>
            Gets or sets the offset of the slab. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.BoundaryDefinition.FacePosition">
            <summary>
            Gets or sets the face position of the slab. 
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.WallSystem">
            <summary>
            Wrapper for the wall system. This class is the logical container for
            a wall part and run. Surface representation of the wall is obtained by extruding
            the path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Instantiates a WallSystem object from the database.
            </summary>
            <param name="oPB">PrivateBusinessObject that corresponds to a WallSystem object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Sketch3D,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Constructor method to create a wall system using Sketch3D path.
             </summary>
             <param name="oParentSystem">Parent system under which the wall system needs to be created.</param>
             <param name="oCrossSection">Cross section of the wall system.</param>
             <param name="oWallType">Type of the wall system.</param>
             <param name="oWallComposition">Composition of the wall system.</param>
             <param name="oSupportPlane">Supporting plane of the wall system.</param>
             <param name="oPath">Sketch3D path of the wall system.</param>
             <param name="oCardinalPoint">Cardinal point of the wall system.</param>
             <param name="oReflect">Reflect attribute of the system.</param>
             <param name="oHeight">Height of the wall system.</param>
             <param name="oThickness">Thickness of the wall system.</param>
             <example>This is an example of a WallSystem constructor with Sketch3D.
             <code>
             'Get CrossSection object from CatalogStructHelper.
             Dim oCatalogStructHelper As New CatalogStructHelper()
             Dim oCrossSection As CrossSection
             oCrossSection = oCatalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             'Get PlantCatalog Object.
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             'Get WallCatalogPart and WallComposition from catalog.
             Dim oWallCatalogPart As Part = Nothing
             Dim oWallComposition As Part = Nothing
             Dim oCatalogBaseHelper As New CatalogBaseHelper(oCatalog)
             Dim partFullName As [String] = "Clading C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""
             oWallCatalogPart = DirectCast(oCatalogBaseHelper.GetPart(partFullName), Part)
             oWallComposition = DirectCast(oCatalogBaseHelper.GetPart("P_Stone_Granite_6"""), Part)
                    
             'Get the Connection object. 
             Dim oConnection As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the plant. 
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the root system as parent. 
             Dim oRootSystem As ISystem = oPlant.RootSystem
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            
             'Create a Persistant Elevation Plane:
             Dim oElvPlnPoint1 As New Position(0, 0, 0)
             Dim oElvPlnPoint2 As New Position(4, 0, 0)
             Dim oElvPlnPoint3 As New Position(0, 4, 0)
             Dim oPlanePosColl As New Collection(Of Position)()
             oPlanePosColl.Add(oElvPlnPoint1)
             oPlanePosColl.Add(oElvPlnPoint2)
             oPlanePosColl.Add(oElvPlnPoint3)
             Dim oPersistPlane As IPlane = New Plane3d(oConnection, oPlanePosColl)
            
             'Create and customize the Sketch3D object here.
             Dim oSketch3d As New Sketch3D(oPlant)
             Dim oSketchColl As New Collection(Of SketchPoint)()
             Dim oSkPt1 As New SketchPoint(0, 0, 0)
             Dim oSkPt2 As New SketchPoint(10, 0, 0)
             Dim oSkPt3 As New SketchPoint(10, 10, 0)
             
             Dim oLF As LineFeature = oSkPt1.CreateLineFeature(oSkPt2)
              
             'Create a line feature between this point and the next.
             oLF = oSkPt2.CreateLineFeature(oSkPt3)
             oSketchColl.Add(oSkPt1)
             oSketchColl.Add(oSkPt2)
             oSketchColl.Add(oSkPt3)
             oSketch3d.SetSketchPoints(oSketchColl)
             
             'Create a structural system.
             Dim oStrSys As ISystem = New StructuralSystem(oParent)
             
             Dim dHeight, dThickness as double
             dHeight = 1.0 : dThickness = 0.1
             Dim lCardinalPt as int
             lCardinalPt = 3
              
             'WallSystem with persisted plane.
             WallSystem oWallSys1 = new WallSystem(oStrSys, oCrossSection, oWallCatalogPart, oWallComposition, oPersistPlane, oSketch3d, lCardinalPt, false, dHeight, dThickness);
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Sketch3D,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Constructor method to create a wall system using Sketch3D path.
             </summary>
             <param name="parentSystem">Parent system under which the wall system needs to be created.</param>
             <param name="crossSection">Cross section of the wall system.</param>
             <param name="wallPart">Type of the wall system.</param>
             <param name="supportPlane">Supporting plane of the wall system.</param>
             <param name="path">Sketch3D path of the wall system.</param>
             <param name="cardinalPoint">Cardinal point of the wall system.</param>
             <param name="reflect">Reflect attribute of the system.</param>
             <param name="height">Height of the wall system.</param>
             <param name="thickness">Thickness of the wall system.</param>
             <exception cref="T:System.ArgumentNullException">Null objects passed.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create wall factory..</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection can not be obtained from the given parent system.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Failed to create wall factory..</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.WallSystem3DException">Unexpected failure while trying to Create a WallSystem using Sketch 3D.</exception>
             <example>This is an example of a WallSystem constructor with Sketch3D.
             <code>
             'Get CrossSection object from CatalogStructHelper.
             Dim oCatalogStructHelper As New CatalogStructHelper()
             Dim oCrossSection As CrossSection
             oCrossSection = oCatalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             'Get PlantCatalog Object.
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             'Get WallCatalogPart and WallComposition from catalog.
             Dim oWallCatalogPart As Part = Nothing
             Dim oWallComposition As Part = Nothing
             Dim oCatalogBaseHelper As New CatalogBaseHelper(oCatalog)
             Dim wallType As [String] = "Clading" 
             Dim wallComposition As [String] = "C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""
             oWallCatalogPart = DirectCast(oCatalogBaseHelper.GetPart(wallType,wallComposition), Part)
                    
             'Get the Connection object. 
             Dim oConnection As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the plant. 
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the root system as parent. 
             Dim oRootSystem As ISystem = oPlant.RootSystem
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            
             'Create a Persistant Elevation Plane:
             Dim oElvPlnPoint1 As New Position(0, 0, 0)
             Dim oElvPlnPoint2 As New Position(4, 0, 0)
             Dim oElvPlnPoint3 As New Position(0, 4, 0)
             Dim oPlanePosColl As New Collection(Of Position)()
             oPlanePosColl.Add(oElvPlnPoint1)
             oPlanePosColl.Add(oElvPlnPoint2)
             oPlanePosColl.Add(oElvPlnPoint3)
             Dim oPersistPlane As IPlane = New Plane3d(oConnection, oPlanePosColl)
            
             'Create and customize the Sketch3D object here.
             Dim oSketch3d As New Sketch3D(oPlant)
             Dim oSketchColl As New Collection(Of SketchPoint)()
             Dim oSkPt1 As New SketchPoint(0, 0, 0)
             Dim oSkPt2 As New SketchPoint(10, 0, 0)
             Dim oSkPt3 As New SketchPoint(10, 10, 0)
             
             Dim oLF As LineFeature = oSkPt1.CreateLineFeature(oSkPt2)
              
             'Create a line feature between this point and the next.
             oLF = oSkPt2.CreateLineFeature(oSkPt3)
             oSketchColl.Add(oSkPt1)
             oSketchColl.Add(oSkPt2)
             oSketchColl.Add(oSkPt3)
             oSketch3d.SetSketchPoints(oSketchColl)
             
             'Create a structural system.
             Dim oStrSys As ISystem = New StructuralSystem(oParent)
             
             Dim dHeight, dThickness as double
             dHeight = 1.0 : dThickness = 0.1
             Dim lCardinalPt as int
             lCardinalPt = 3
              
             'WallSystem with persisted plane.
             WallSystem oWallSys1 = new WallSystem(oStrSys, oCrossSection, oWallCatalogPart, oPersistPlane, oSketch3d, lCardinalPt, false, dHeight, dThickness);
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String,System.String,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.Sketch3D,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Constructor method to create a wall system using Sketch3D path.
             </summary>
             <param name="parentSystem">Parent system under which the wall system needs to be created.</param>
             <param name="crossSection">Cross section of the wall system.</param>
             <param name="wallType">Type of the wall system.</param>
             <param name="wallComposition">Composition of the wall system.</param>
             <param name="supportPlane">Supporting plane of the wall system.</param>
             <param name="path">Sketch3D path of the wall system.</param>
             <param name="cardinalPoint">Cardinal point of the wall system.</param>
             <param name="reflect">Reflect attribute of the system.</param>
             <param name="height">Height of the wall system.</param>
             <param name="thickness">Thickness of the wall system.</param>
             <exception cref="T:System.ArgumentNullException">Null objects passed.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Invalid objects passed.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create wall factory..</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection can not be obtained from the given parent system.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Failed to create wall factory..</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.WallSystem3DException">Unexpected failure while trying to Create a WallSystem using Sketch 3D.</exception>
             <example>This is an example of a WallSystem constructor with Sketch3D.
             <code>
             'Get CrossSection object from CatalogStructHelper.
             Dim oCatalogStructHelper As New CatalogStructHelper()
             Dim oCrossSection As CrossSection
             oCrossSection = oCatalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             'Get PlantCatalog Object.
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
                    
             'Get the Connection object. 
             Dim oConnection As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the plant. 
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the root system as parent. 
             Dim oRootSystem As ISystem = oPlant.RootSystem
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            
             'Create a Persistant Elevation Plane:
             Dim oElvPlnPoint1 As New Position(0, 0, 0)
             Dim oElvPlnPoint2 As New Position(4, 0, 0)
             Dim oElvPlnPoint3 As New Position(0, 4, 0)
             Dim oPlanePosColl As New Collection(Of Position)()
             oPlanePosColl.Add(oElvPlnPoint1)
             oPlanePosColl.Add(oElvPlnPoint2)
             oPlanePosColl.Add(oElvPlnPoint3)
             Dim oPersistPlane As IPlane = New Plane3d(oConnection, oPlanePosColl)
            
             Dim wallType As [String] = "Clading" 
             Dim wallComposition As [String] = "C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""
             
             'Create and customize the Sketch3D object here.
             Dim oSketch3d As New Sketch3D(oPlant)
             Dim oSketchColl As New Collection(Of SketchPoint)()
             Dim oSkPt1 As New SketchPoint(0, 0, 0)
             Dim oSkPt2 As New SketchPoint(10, 0, 0)
             Dim oSkPt3 As New SketchPoint(10, 10, 0)
             
             Dim oLF As LineFeature = oSkPt1.CreateLineFeature(oSkPt2)
              
             'Create a line feature between this point and the next.
             oLF = oSkPt2.CreateLineFeature(oSkPt3)
             oSketchColl.Add(oSkPt1)
             oSketchColl.Add(oSkPt2)
             oSketchColl.Add(oSkPt3)
             oSketch3d.SetSketchPoints(oSketchColl)
             
             'Create a structural system.
             Dim oStrSys As ISystem = New StructuralSystem(oParent)
             
             Dim dHeight, dThickness as double
             dHeight = 1.0 : dThickness = 0.1
             Dim lCardinalPt as int
             lCardinalPt = 3
              
             'WallSystem with persisted plane.
             WallSystem oWallSys1 = new WallSystem(oStrSys, oCrossSection, wallType, wallComposition, oPersistPlane, oSketch3d, lCardinalPt, false, dHeight, dThickness);
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Structure.Middle.TopologyCurve,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Constructor method to create a wall system using Sketch2D path.
             NOT IMPLEMENTED
             </summary>
             <param name="oParentSystem">Parent system under which the wall system needs to be created.</param>
             <param name="oCrossSection">Cross section of the wall system.</param>
             <param name="oWallType">Type of the wall system.</param>
             <param name="oWallComposition">Composition of the wall system.</param>
             <param name="oSupportPlane">Supporting plane of the wall system.</param>
             <param name="oPath">Sketch2D path of the wall system.</param>
             <param name="oCardinalPoint">Cardinal point of the wall system.</param>
             <param name="oReflect">Reflect attribute of the wall system.</param>
             <param name="oHeight">Height of the wall system.</param>
             <param name="oThickness">Thickness of the wall system.</param>
             <example>This is an example of a WallSystem constructor with wire body.  ---WireBody Not yet implemented
             <code>
             'Get CrossSection Object from CatalogStructHelper.
             Dim oCatalogStructHelper As New CatalogStructHelper()
             Dim oCrossSection As CrossSection
             oCrossSection = oCatalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             'Get PlantCatalog object.
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             'Get WallCatalogPart and WallComposition from catalog.
             Dim oWallCatalogPart As Part = Nothing
             Dim oWallComposition As Part = Nothing
             Dim oCatalogBaseHelper As New CatalogBaseHelper(oCatalog)
             Dim partFullName As [String] = "Clading C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""
             oWallCatalogPart = DirectCast(oCatalogBaseHelper.GetPart(partFullName), Part)
             oWallComposition = DirectCast(oCatalogBaseHelper.GetPart("P_Stone_Granite_6"""), Part)
                    
             'Get the Connection object. 
             Dim oConnection As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the plant. 
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the root system as parent. 
             Dim oRootSystem As ISystem = oPlant.RootSystem
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            
             'Create a persistant elevation plane.
             Dim oElvPlnPoint1 As New Position(0, 0, 0)
             Dim oElvPlnPoint2 As New Position(4, 0, 0)
             Dim oElvPlnPoint3 As New Position(0, 4, 0)
             Dim oPlanePosColl As New Collection(Of Position)()
             oPlanePosColl.Add(oElvPlnPoint1)
             oPlanePosColl.Add(oElvPlnPoint2)
             oPlanePosColl.Add(oElvPlnPoint3)
             Dim oPersistPlane As IPlane = New Plane3d(oConnection, oPlanePosColl)
            
             'Create a WireBody object- oWirebody --- Not yet Implemented.
              
             'Create a structural system.
             Dim oStrSys As ISystem = New StructuralSystem(oParent)
              
             Dim dHeight, dThickness as double
             dHeight = 1.0 : dThickness = 0.1
             Dim lCardinalPt as int
             lCardinalPt = 3
              
             'WallSystem with persisted plane.
             WallSystem oWallSysWireBody = new WallSystem(oStrSys, oCrossSection, oWallCatalogPart, oWallComposition, oPersistPlane, oWirebody, lCardinalPt, false, dHeight, dThickness);
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Structure.Middle.TopologyCurve,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Constructor method to create a wall system using Sketch2D path.
             NOT IMPLEMENTED
             </summary>
             <param name="oParentSystem">Parent system under which the wall system needs to be created.</param>
             <param name="oCrossSection">Cross section of the wall system.</param>
             <param name="oWallPart">Type of the wall system.</param>
             <param name="oSupportPlane">Supporting plane of the wall system.</param>
             <param name="oPath">Sketch2D path of the wall system.</param>
             <param name="oCardinalPoint">Cardinal point of the wall system.</param>
             <param name="oReflect">Reflect attribute of the wall system.</param>
             <param name="oHeight">Height of the wall system.</param>
             <param name="oThickness">Thickness of the wall system.</param>
             <example>This is an example of a WallSystem constructor with wire body.  ---WireBody Not yet implemented
             <code>
             'Get CrossSection Object from CatalogStructHelper.
             Dim oCatalogStructHelper As New CatalogStructHelper()
             Dim oCrossSection As CrossSection
             oCrossSection = oCatalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             'Get PlantCatalog object.
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             'Get WallCatalogPart and WallComposition from catalog.
             Dim oWallCatalogPart As Part = Nothing
             Dim oWallComposition As Part = Nothing
             Dim oCatalogBaseHelper As New CatalogBaseHelper(oCatalog)
             Dim wallType As [String] = "Clading" 
             Dim wallComposition As [String] = "C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""
             oWallCatalogPart = DirectCast(oCatalogBaseHelper.GetPart(wallType,wallComposition), Part)
                    
             'Get the Connection object. 
             Dim oConnection As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the plant. 
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the root system as parent. 
             Dim oRootSystem As ISystem = oPlant.RootSystem
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            
             'Create a persistant elevation plane.
             Dim oElvPlnPoint1 As New Position(0, 0, 0)
             Dim oElvPlnPoint2 As New Position(4, 0, 0)
             Dim oElvPlnPoint3 As New Position(0, 4, 0)
             Dim oPlanePosColl As New Collection(Of Position)()
             oPlanePosColl.Add(oElvPlnPoint1)
             oPlanePosColl.Add(oElvPlnPoint2)
             oPlanePosColl.Add(oElvPlnPoint3)
             Dim oPersistPlane As IPlane = New Plane3d(oConnection, oPlanePosColl)
            
             'Create a WireBody object- oWirebody --- Not yet Implemented.
              
             'Create a structural system.
             Dim oStrSys As ISystem = New StructuralSystem(oParent)
              
             Dim dHeight, dThickness as double
             dHeight = 1.0 : dThickness = 0.1
             Dim lCardinalPt as int
             lCardinalPt = 3
              
             'WallSystem with persisted plane.
             WallSystem oWallSysWireBody = new WallSystem(oStrSys, oCrossSection, oWallCatalogPart, oPersistPlane, oWirebody, lCardinalPt, false, dHeight, dThickness);
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String,System.String,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Structure.Middle.TopologyCurve,System.Int32,System.Boolean,System.Double,System.Double)">
             <summary>
             Constructor method to create a wall system using Sketch2D path.
             NOT IMPLEMENTED
             </summary>
             <param name="oParentSystem">Parent system under which the wall system needs to be created.</param>
             <param name="oCrossSection">Cross section of the wall system.</param>
             <param name="sWallType">Type of the wall system.</param>
             <param name="sWallComposition">Composition of the wall system.</param>
             <param name="oSupportPlane">Supporting plane of the wall system.</param>
             <param name="oPath">Sketch2D path of the wall system.</param>
             <param name="oCardinalPoint">Cardinal point of the wall system.</param>
             <param name="oReflect">Reflect attribute of the wall system.</param>
             <param name="oHeight">Height of the wall system.</param>
             <param name="oThickness">Thickness of the wall system.</param>
             <example>This is an example of a WallSystem constructor with wire body.  ---WireBody Not yet implemented
             <code>
             'Get CrossSection Object from CatalogStructHelper.
             Dim oCatalogStructHelper As New CatalogStructHelper()
             Dim oCrossSection As CrossSection
             oCrossSection = oCatalogStructHelper.GetCrossSection("Wall Cross-Sections", "Rect", "Rect19""x3.5""")
            
             'Get PlantCatalog object.
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             'Get WallCatalogPart and WallComposition from catalog.
             Dim wallType As [String] = "Clading" 
             Dim wallComposition As [String] = "C_Siding_Steel - Carbon_4""_Steel_Framing_2""_Siding_Steel - Carbon_4"""
                    
             'Get the Connection object. 
             Dim oConnection As SP3DConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the plant. 
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
              
             'Get the root system as parent. 
             Dim oRootSystem As ISystem = oPlant.RootSystem
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject)
            
             'Create a persistant elevation plane.
             Dim oElvPlnPoint1 As New Position(0, 0, 0)
             Dim oElvPlnPoint2 As New Position(4, 0, 0)
             Dim oElvPlnPoint3 As New Position(0, 4, 0)
             Dim oPlanePosColl As New Collection(Of Position)()
             oPlanePosColl.Add(oElvPlnPoint1)
             oPlanePosColl.Add(oElvPlnPoint2)
             oPlanePosColl.Add(oElvPlnPoint3)
             Dim oPersistPlane As IPlane = New Plane3d(oConnection, oPlanePosColl)
            
             'Create a WireBody object- oWirebody --- Not yet Implemented.
              
             'Create a structural system.
             Dim oStrSys As ISystem = New StructuralSystem(oParent)
              
             Dim dHeight, dThickness as double
             dHeight = 1.0 : dThickness = 0.1
             Dim lCardinalPt as int
             lCardinalPt = 3
              
             'WallSystem with persisted plane.
             WallSystem oWallSysWireBody = new WallSystem(oStrSys, oCrossSection, wallType, wallComposition, oPersistPlane, oWirebody, lCardinalPt, false, dHeight, dThickness);
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Structure.Middle.WallSystem)">
            <summary>
            Creates a wall system copied from the original one.
            </summary>
            <param name="oParentSystem"> The parent system for the new wall.</param>
            <param name="oWallSystem">The orignal wall system whose copy will be created.</param>
            <example>This is an example of a WallSystem copy constructor with existing wall system.
            <code>
            'oRootSystem can be any system that the user wants as a parent for the wall system created.
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel
            Dim oRootSystem As ISystem = oPlant.RootSystem
            'Creating wall system with Existed WallSystem- oWallSys1.
            Dim oWallSys2 As New WallSystem(oRootSystem, oWallSys1)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets StructPorts from an entity filtered by port geometry type and geometry stage.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eGeometryStage">Enumerated value for geometry stage.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type and geometry stage.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.oWallSys1.GetPorts(TopologyGeometryType.Face, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets StructPorts from an entity filtered by port geometry type and geometry operation in the graph.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eGeometryOperation">Enumerated value for geometry operation.</param>
            <param name="eGraphPosition">Enumerated value for graph position.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            /// <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, geometry operation, and the graph position.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.GetPorts(TopologyGeometryType.Edge, GeometryOperationTypes.Bound, GraphPosition.After)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
            <summary>
            Gets TopologyPorts from an entity filtered by context and geometry stage in the graph.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eTopologyContext">Enumerated value for topology context.</param>
            <param name="eGeometryStage">Enumerated value for geometry stage.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, topology context, and geometry stage.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.GetPorts(TopologyGeometryType.Edge, ContextTypes.Base, GeometryStage.Current)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
            <summary>
            Gets TopologyPorts from an entity filtered by context and geometry operation in the graph.
            </summary>
            <param name="ePortType">Enumerated value for port geometry type.</param>
            <param name="eTopologyContext">Enumerated value for topology context.</param>
            <param name="eGeometryOperation">Enumerated value for geometry operation.</param>
            <param name="eGraphPosition">Enumerated value for graph position.</param>
            <returns>ReadOnlyCollection of TopologyPort objects.</returns>
            <example>This is an example for the overloaded GetPorts method which takes in the port geometry type, topology context, geometry operation, and graph position.
            <code>
            Dim oWallSys As WallSystem
            Dim oTopologyPorts As ReadOnlyCollection(Of TopologyPort)
            oTopologyPorts = oWallSys.GetPorts(TopologyGeometryType.Edge, ContextTypes.Base, GeometryOperationTypes.Bound, GraphPosition.Before)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
            <summary>
            Gets an existing port or a late binding port on the given entity with the given topological proxy and port moniker data. 
            Use this method to get a port whose geometry will be created by a later operation but the port is needed to hook-up a connection. 
            Typical use is in creation of a physical connection whose port geometry will be provided by an end cut operation.
            </summary>
            <param name="eGeometryType">Enumerated value for topology geometry type.</param>
            <param name="operationId">Operation ID which will create the port.</param>
            <param name="operatorId">Operator ID.</param>
            <param name="eContext">Enumerated value for context imprinted on the port.</param>
            <param name="iSectionFaceType">Section face type/cross section ID imprinted on the port.</param>
            <returns>Struct port created by the given moniker data.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallSystem.AddSystemChild(Ingr.SP3D.Common.Middle.ISystemChild)">
            <summary>
            Given a system child, establishes the child relationship between this object and the child.
            </summary>
            <param name="oChild"> A child to which a parent and child relationship should be created. </param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">Unexpected failure when AddSystemChild method is called on WallPart as it is not supported.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.SupportPlane">
            <summary>
            Gets or sets the support plane of the wall system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Parts">
            <summary>
            Gets wall parts associated to the wall.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Path">
            <summary>
            Gets or sets the two-dimensional or three-dimensional path of the wall system. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Boundaries">
            <summary>
            Gets or sets the boundaries of the wall system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.ContinuityType">
            <summary>
            Gets or sets the continuity type of the wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.PriorityNumber">
            <summary>
            Gets or sets the priority number of the wall system.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.Run">
            <summary>
            Returns the wall run associated to the wall system.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.WallSystem.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.WallConnection">
            <summary>
            Class definition for WallConnection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.WallConnection.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructs a wall connection from the database.
            </summary>
            <param name="oPB">PrivateBusinessObject</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Ladder">
            <summary>
            Ladder class definition. Behavior of the Ladder class is customized through user
            attributes using generic property access.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Public constructor for the Ladder class using an edge object for top support and side reference.
             </summary>
             <param name="parentSystem">Parent system of the ladder.</param>
             <param name="part">The ladder catalog part.</param>
             <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
             <param name="sideReference">The edge which provides side reference for the ladder for offset calculations.</param>
             <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>        
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">The Ladder factory object CreateLadder method returns null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of the ladder constructor with grid lines as top support and side reference, and grid plane as bottom plane.
             <code>
             ' Get the catalog helper.
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim oCatConn As SP3DConnection = oPlant.PlantCatalog 
             Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn) 
            
             ' Creating parent system for the ladder to be created. 
             Dim oRootSystem As ISystem = oPlant.RootSystem 
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject) 
             Dim oStructuralSystem As ISystem = New StructuralSystem(oParent) 
            
             ' Get the ModelConnection object. 
             Dim oConn As SP3DConnection = DirectCast(oPlant, SP3DConnection) 
            
             Dim oLadderSystem As ISystem = New StructuralSystem(oParent) 
             Dim oSystemName As Ingr.SP3D.Common.Middle.INamedItem = DirectCast(oLadderSystem, Ingr.SP3D.Common.Middle.INamedItem) 
             oSystemName.SetUserDefinedName("Ladders_test") 
            
             'Create coordinate system. 
             Dim oCS As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
             Dim oPos As New Position(10R, 0R, 0R) 
             oCS.Origin = oPos 
             oCS.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            
             'Adding coordinate system to system. 
             oLadderSystem.AddSystemChild(oCS) 
            
             Dim dTopPlanePos As Double = 0 
             Dim dBotPlanePos As Double = 0 
             Dim dSidePlanePos As Double = 0 
             Dim dBotPlanePos20 As Double = 0 
            
             'TopPlane means VerticalPlane to support at top of ladder. 
             dTopPlanePos = 10 
             dBotPlanePos = 0 
             dSidePlanePos = 0 
             dBotPlanePos20 = 20 
            
             Dim oBottomPlane As IPlane 
             Dim oBottomPlane20 As IPlane 
             Dim oSideRefPlane As IPlane 
             Dim oTopSupportPlane As IPlane 
            
             Dim oGridAxisTop As New GridAxis(oCS, AxisType.X) 
             Dim oGridAxisSide As New GridAxis(oCS, AxisType.Y) 
             Dim oGridElAxis As New GridAxis(oCS, AxisType.Z) 
            
             Dim oGLTopBottom As Ingr.SP3D.Grids.Middle.GridLine 
             Dim oGLSideBottom As Ingr.SP3D.Grids.Middle.GridLine 
            
             'Create GridPlane for TopSupportPlane. 
             Dim oGridPlaneTop As New GridPlane(dTopPlanePos, oGridAxisTop) 
             oGridPlaneTop.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisTop.AxisType.ToString()) + dTopPlanePos) 
             oTopSupportPlane = oGridPlaneTop 
            
             'Create GridPlane for SideReferencePlane. 
             Dim oGridPlaneSide As New GridPlane(dSidePlanePos, oGridAxisSide) 
             oGridPlaneSide.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisSide.AxisType.ToString()) + dSidePlanePos) 
             oSideRefPlane = oGridPlaneSide 
            
             'Create GridElevation Plane at Z for BottomSupportPlane. 
             Dim oGridElevPlane As New GridElevationPlane(dBotPlanePos, oGridElAxis) 
             oGridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos) 
             oBottomPlane = oGridElevPlane 
            
             'Create GridElevation Plane at Z20 for BottomSupportPlane20. 
             Dim oGridElevPlane20 As New GridElevationPlane(dBotPlanePos20, oGridElAxis) 
             oGridElevPlane20.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos20) 
             oBottomPlane20 = oGridElevPlane 
            
             oGLTopBottom = oGridElevPlane20.CreateGridLine(oGridPlaneTop) 
             oGLSideBottom = oGridElevPlane20.CreateGridLine(oGridPlaneSide) 
            
             ' Get the catalog part. 
             Dim oPart As Part = DirectCast(oCatalogStructHelper.GetPart("LadderA1"), Part) 
            
             Dim oLadder As New Ladder(oLadderSystem, oPart, oGLTopBottom, oBottomPlane, oGLSideBottom) 
             oLadder.SetUserDefinedName("LadderByTopGridLineAndRefCurve") 
             oLadder.SetPropertyValue(New PropertyValueDouble("ISPSHorizVertOffset", "HorizontalOffset", 15)) 
             oLadder.SystemParent = oLadderSystem        
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
             <summary>
             Public constructor for the Ladder class using an edge object for top support without a side reference.
             </summary>
             <param name="parentSystem">Parent system of the ladder.</param>
             <param name="part">The ladder catalog part.</param>
             <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
             <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
             <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
             <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>        
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">The Ladder factory object CreateLadder method returns null.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
             <example>This is an example of the ladder constructor with a grid line as top support and a grid plane as bottom plane.
             <code>
             ' Get the catalog helper.
             Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
             Dim oCatConn As SP3DConnection = oPlant.PlantCatalog 
             Dim oCatalogStructHelper As New CatalogStructHelper(oCatConn) 
            
             ' Creating parent system for the ladder to be created. 
             Dim oRootSystem As ISystem = oPlant.RootSystem 
             Dim oParent As BusinessObject = DirectCast(oRootSystem, BusinessObject) 
             Dim oStructuralSystem As ISystem = New StructuralSystem(oParent) 
            
             ' Get the ModelConnection object. 
             Dim oConn As SP3DConnection = DirectCast(oPlant, SP3DConnection) 
            
             Dim oLadderSystem As ISystem = New StructuralSystem(oParent) 
             Dim oSystemName As Ingr.SP3D.Common.Middle.INamedItem = DirectCast(oLadderSystem, Ingr.SP3D.Common.Middle.INamedItem) 
             oSystemName.SetUserDefinedName("Ladders_test") 
            
             'Create coordinate system. 
             Dim oCS As New CoordinateSystem(oConn, CoordinateSystem.CoordinateSystemType.Grids) 
             Dim oPos As New Position(10R, 0R, 0R) 
             oCS.Origin = oPos 
             oCS.SetPropertyValue("CS_Test", "IJNamedItem", "Name") 
            
             'Adding coordinate system to system. 
             oLadderSystem.AddSystemChild(oCS) 
            
             Dim dTopPlanePos As Double = 0 
             Dim dBotPlanePos As Double = 0 
             Dim dSidePlanePos As Double = 0 
             Dim dBotPlanePos20 As Double = 0 
            
             'TopPlane means VerticalPlane to support at top of ladder.
             dTopPlanePos = 10 
             dBotPlanePos = 0 
             dSidePlanePos = 0 
             dBotPlanePos20 = 20 
            
             Dim oBottomPlane As IPlane 
             Dim oBottomPlane20 As IPlane 
             Dim oSideRefPlane As IPlane 
             Dim oTopSupportPlane As IPlane 
            
             Dim oGridAxisTop As New GridAxis(oCS, AxisType.X) 
             Dim oGridAxisSide As New GridAxis(oCS, AxisType.Y) 
             Dim oGridElAxis As New GridAxis(oCS, AxisType.Z) 
            
             Dim oGLTopBottom As Ingr.SP3D.Grids.Middle.GridLine 
             Dim oGLSideBottom As Ingr.SP3D.Grids.Middle.GridLine 
            
             'Create GridPlane for TopSupportPlane. 
             Dim oGridPlaneTop As New GridPlane(dTopPlanePos, oGridAxisTop) 
             oGridPlaneTop.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisTop.AxisType.ToString()) + dTopPlanePos) 
             oTopSupportPlane = oGridPlaneTop 
            
             'Create GridPlane for SideReferencePlane. 
             Dim oGridPlaneSide As New GridPlane(dSidePlanePos, oGridAxisSide) 
             oGridPlaneSide.SetUserDefinedName(("GridPlaneAt" <![CDATA[&]]> oGridAxisSide.AxisType.ToString()) + dSidePlanePos) 
             oSideRefPlane = oGridPlaneSide 
            
             'Create GridElevation Plane at Z for BottomSupportPlane. 
             Dim oGridElevPlane As New GridElevationPlane(dBotPlanePos, oGridElAxis) 
             oGridElevPlane.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos) 
             oBottomPlane = oGridElevPlane 
            
             'Create GridElevation Plane at Z20 for BottomSupportPlane20. 
             Dim oGridElevPlane20 As New GridElevationPlane(dBotPlanePos20, oGridElAxis) 
             oGridElevPlane20.SetUserDefinedName("BottomElevPlaneAtZ" <![CDATA[&]]> dBotPlanePos20) 
             oBottomPlane20 = oGridElevPlane 
            
             oGLTopBottom = oGridElevPlane20.CreateGridLine(oGridPlaneTop) 
             oGLSideBottom = oGridElevPlane20.CreateGridLine(oGridPlaneSide) 
            
             ' Get the catalog part. 
             Dim oPart As Part = DirectCast(oCatalogStructHelper.GetPart("LadderA1"), Part) 
            
             Dim oLadder As New Ladder(oLadderSystem, oPart, oGLTopBottom, oBottomPlane) 
             oLadder.SetUserDefinedName("LadderByTopGridLineWithoutARefPlane") 
             oLadder.SetPropertyValue(New PropertyValueDouble("ISPSHorizVertOffset", "HorizontalOffset", 15)) 
             oLadder.SystemParent = oLadderSystem        
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.#ctor(Ingr.SP3D.Structure.Middle.Ladder)">
            <summary>
            Copy constructor for the Ladder class.
            </summary>
            <param name="ladder">The ladder to be copied.</param>
            <exception cref="T:System.ArgumentNullException">Passed parameter is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Passed enumeration is out of range.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create factory object.</exception>        
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">The Ladder factory object CreateLadder method returns null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <example>This is an example of Ladder copy constructor.
            <code>
            'Create a ladder using this constructor.
             Dim oLadder As New Ladder(oLadderToCopy)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses an edge object for top support and side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves 
            that are not allowed.   
            </summary>
            <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <param name="sideReference">The edge which provides side reference for the ladder for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>   
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support and a plane for side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <param name="sideReference">The plane which provides side reference for the ladder for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support,
            a plane object as bottom plane, and a plane object as side reference.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportCurve, oBottomPlane, oSideReferencePlane)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.IPlane,Ingr.SP3D.Common.Middle.ICurve)">
            <summary>
            Uses a plane for top support and an edge object for side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The plane which provides the top support for the ladder.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <param name="sideReference">The edge which provides side reference for the ladder for offset calculations.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>
            <example>This is an example of the overloaded SetInputs method which takes a plane object as top support,
            a plane object as bottom plane, and an edge object as side reference.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportPlane, oBottomPlane, oSideReferenceCurve)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Ladder.SetInputs(Ingr.SP3D.Common.Middle.ICurve,Ingr.SP3D.Common.Middle.IPlane)">
            <summary>
            Uses an edge object for top support without a side reference to set the support properties 
            for a ladder.  Properties cannot be set individually since there are certain combinations of planes and curves that 
            are not allowed.
            </summary>
            <param name="topSupport">The edge which provides the top support for the ladder. The ladder top rung is flush with this edge.</param>
            <param name="bottomPlane">The plane which provides the bottom support for the ladder.</param>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">Unexpected failure while defining the ladder.</exception>
            <example>This is an example of the overloaded SetInputs method which takes an edge object as top support
            and a plane object as bottom plane.
            <code>
            'Create a ladder using its constructor.
            oLadder.SetInputs(oTopSupportCurve, oBottomPlane)
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.TopSupport">
            <summary>
            Read-only property to get the ladder top support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TopSupportException">Exception raised if an error is encountered while trying to get ladder top support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.SideReference">
            <summary>
            Read-only property to get the ladder side reference.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException">Exception raised if an error is encountered while trying to get ladder side reference.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.BottomSupport">
            <summary>
            Read-only property to get the ladder bottom support.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BottomSupportException">Exception raised if an error is encountered while trying to get ladder bottom support.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Ladder.Matrix">
            <summary>
            Gets or sets the transformation matrix for the object.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.MatrixException">Failed to get or set the matrix.</exception>
            <exception cref="T:System.ArgumentNullException">Matrix object is null.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySurfaceBase">
            <summary>
            TopologySurfaceBase class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.#ctor(Ingr.SP3D.Structure.Middle.TopologySurface)">
            <summary>
            TopologySurfaceBase constructor.
            </summary>
            <param name="oTopologySurface">TopologySurface object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.GetTopologySurfaceCOMBO">
            <summary>
            Gets the TopologySurface COM BusinessObject.
            </summary>
            <returns>COM Business Object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Centroid(Ingr.SP3D.Common.Middle.Line3d,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position}@)">
            <summary>
            Finds one or more centroids of this surface.
            </summary>
            <param name="oLine">If not null, it helps locate which centroid to return.</param>
            <param name="colCentroids">Multiple centroids are returned only when a projection can be broken.</param>
            <example>This is an example of finding the centroid of the surface.
            <code>
            Dim centroidCollection As Collection(Of Position) 
            oTopologySurface.Centroid(Nothing, centroidCollection) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.LocatedCentroids(Ingr.SP3D.Common.Middle.Line3d)">
            <summary>
            Finds one or more centroids of this surface.
            </summary>
            <param name="line">Line to locate which centroid will be returned based on which surface face the line locates.</param>
            <returns>Centroid positions which are located with input line.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Centroids">
            <summary>
            Finds the Centoid(s) of the surface.
            </summary>
            <returns>All centroid positions.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Centroid">
            <summary>
            Finds the Centroid of the surface.
            </summary>
            <returns>Centroid of the whole surface.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.DistanceBetween(Ingr.SP3D.Common.Middle.ISurface,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
             <summary>
             Finds the distance between this surface and an input surface.
             </summary>
             <param name="oInSurf">Input surface.</param>
             <param name="dMinDist">Output minimum distance.</param>
             <param name="posSrc">Point at minimum distance on this surface.</param>
             <param name="posIn">Point at minimum distance on input surface.</param>
             <example>This is an example of finding the distance between this surface and an input surface.
             <code>
             Dim distance As Double 
             Dim topologySurfacePosition As Position 
             Dim inputTopologySurfacePosition As Position 
            
             oTopologySurface.DistanceBetween(inputTopologySurface, distance, topologySurfacePosition, inputTopologySurfacePosition) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.DistanceBetween(Ingr.SP3D.Common.Middle.ICurve,System.Double@,Ingr.SP3D.Common.Middle.Position@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface and an input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="dMinDist">Output minimum distance.</param>
            <param name="posSrc">Point at minimum distance on this surface.</param>
            <param name="posIn">Point at minimum distance on input curve.</param>
            <example>This is an example of finding the distance between this surface and an input curve.
            <code>
            Dim distance As Double 
            Dim topologySurfacePosition As Position 
            Dim memberSystemPosition As Position 
            
            oTopologySurface.DistanceBetween(DirectCast(memberSystem, ICurve), distance, topologySurfacePosition, memberSystemPosition) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.DistanceBetween(Ingr.SP3D.Common.Middle.Point3d,System.Double@,Ingr.SP3D.Common.Middle.Position@)">
            <summary>
            Finds the distance between this surface and an input point.
            </summary>
            <param name="oPoint3d">Input point.</param>
            <param name="dMinDist">Output minimum distance.</param>
            <param name="posSrc">Point at minimum distance on this surface.</param>
            <example>This is an example of finding the distance between this surface and an input point.
            <code>
            Dim distance As Double 
            Dim topologySurfacePosition As Position 
            Dim point As New Point3d(15, 0, 0) 
            
            oTopologySurface.DistanceBetween(point, distance, topologySurfacePosition)         
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Intersect(Ingr.SP3D.Common.Middle.ISurface,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ICurve}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this surface and an input surface.
            </summary>
            <param name="oInSurf">Input surface.</param>
            <param name="colCurves">Output collection of curves. Note that this could be a collection of Points3d objects.</param>
            <param name="eCode">GeometryIntersectionType describing type of intersection.</param>
            <example>This is an example of finding the intersect between this surface and an input surface.
            <code>
            Dim iCurveCollection As Collection(Of ICurve) 
            Dim intersectConstants As GeometryIntersectionType 
            oTopologySurface.Intersect(DirectCast(inputTopologySurface, ISurface), iCurveCollection, intersectConstants) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.Intersect(Ingr.SP3D.Common.Middle.ICurve,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject}@,Ingr.SP3D.Common.Middle.GeometryIntersectionType@)">
            <summary>
            Intersects this surface and an input curve.
            </summary>
            <param name="oInCurve">Input curve.</param>
            <param name="colCurves">Output collection of curves. Note that this could be a collection of Points3d objects.</param>
            <param name="eCode">GeometryIntersectionType describing type of intersection.</param>
            <example>This is an example of finding the intersect between this surface and an input curve.
            <code> 
            Dim objCollection As Collection(Of BusinessObject)
            Dim intersectConstants As GeometryIntersectionType 
            oTopologySurface.Intersect(DirectCast(memberSystem, ICurve), objCollection, intersectConstants) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.IsPointOn(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Determines whether the input point is on the surface.
            </summary>
            <param name="posPosition">Point as Position object.</param>
            <returns>If True, the point is on the surface; If False, the point is not on the surface.</returns>
            <example>This is an example of finding whether the input point is on the surface.
            <code>
            Dim point As New Position(3, 0, 0) 
            Dim isPointOn As Boolean = oTopologySurface.IsPointOn(point)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.OutwardNormalAtPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds the outward normal at a given point.
            </summary>
            <param name="pos">Position in which to find the outward normal.</param>
            <returns>Vector - outward normal.</returns>
            <example>This is an example of finding the outward normal at a given point.
            <code>
            Dim vector As Vector = oTopologySurface.OutwardNormalAtPoint(New Position(5, 0, 0)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Finds a point on the surface along normal vector from the given point.
            </summary>
            <param name="pos">Position in which to project to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the surface along normal vector from a given point.
            <code>
            Dim pointToProject As New Position(0, 0, 5) 
            Dim projectPoint As Position = oTopologySurface.ProjectPoint(pointToProject) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ProjectPoint(Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector)">
            <summary>
            Finds a point on the surface along vector from given point.
            </summary>
            <param name="pos">Position to project to curve.</param>
            <param name="vecProj">Vector to project along. If null,
            then the function projects along vector normal to curve.</param>
            <returns>Position - projected point.</returns>
            <example>This is an example of finding a point on the surface from a give vector and from a given point.
            <code>
            Dim pointToProject As New Position(0, 0, 5) 
            Dim projectPoint As Position = oTopologySurface.ProjectPoint(pointToProject, New Vector(5, -5, -5)) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ScopeNormal(Ingr.SP3D.Common.Middle.SurfaceScopeType@,Ingr.SP3D.Common.Middle.Vector@)">
            <summary>
            Determines the planarity of the surface and normal.
            </summary>
            <param name="eScope">SurfaceScopeType defining the planarity of the surface.</param>
            <param name="vecNormal">Normal Geom3dSurfaceScopeConstants value, if the surface is planar.</param>
            <remarks>
            <list type="table">
               <listheader>
                   <term>SurfaceScopeType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Surface scope is unknown.</description>
               </item>    
               <item>
                   <term>Planar = 1</term>
                   <description>Surface is planar.</description>
               </item>
               <item>
                   <term>NonPlanar = 2</term>
                   <description>Surface is non-planar.</description>
               </item>        
            </list>
            </remarks>
            <example>This is an example of finding the planarity of the surface and normal.
            <code>
            Dim eScope As SurfaceScopeType 
            Dim vNormal As Vector 
            oTopologySurface.ScopeNormal(eScope, vNormal)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.PositionAtParameters(System.Double,System.Double)">
            <summary>
            Gets the position from the surface at given U, V values.
            </summary>
            <param name="dUParam">U parameter value.</param>
            <param name="dVParam">V parameter value.</param>
            <returns>Position on the surface.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ParametersAtPosition(Ingr.SP3D.Common.Middle.Position,System.Double@,System.Double@)">
            <summary>
            Gets parameters of the surface at the given position.
            </summary>
            <param name="oPos">Given position.</param>
            <param name="dUParam">U parameter value.</param>
            <param name="dVParam">V parameter value.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.NormalAtParameter(System.Double,System.Double)">
            <summary>
            Gets the normal of the given surafce at the given parameter values.
            </summary>
            <param name="dUPar">U parameter value.</param>
            <param name="dVPar">V parameter value.</param>
            <returns>Normal vector.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.ParameterRange(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the parameter range of the given surface.
            </summary>
            <param name="dStartU">U parameter value at start.</param>
            <param name="dStartV">V parameter value at start.</param>
            <param name="dEndU">U parameter value at end.</param>
            <param name="dEndV">V parameter value at end.</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.uForm">
            <summary>
            Gets the closure of the surface in U-direction.
            </summary> 
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfaceBase.vForm">
            <summary>
            Gets the closure of the surface in V-direction.
            </summary>
            <remarks>
            <list type="table">
               <listheader>
                   <term>CurveFormType</term>
                   <description>Description</description>
               </listheader>
               <item>
                   <term>Unknown = 0</term>
                   <description>Form is unknown.</description>
               </item>    
               <item>
                   <term>Open = 1</term>
                   <description>Curve is open.</description>
               </item>
               <item>
                   <term>Closed = 2</term>
                   <description>Curve is closed.</description>
               </item>
               <item>
                   <term>ClosedWithTangent = 3</term>
                   <description>Curve is closed with tangency.</description>
               </item>
               <item>
                   <term>ClosedWithCurvature = 4</term>
                   <description>Curve is closed with curvature.</description>
               </item>
               <item>
                   <term>ClosedWithTorsion = 5</term>
                   <description>Curve is closed with torsion.</description>
               </item>
               <item>
                   <term>ClosedPeriodic = 6</term>
                   <description>Curve is closed and periodic.</description>
               </item>
            </list>
            </remarks>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberHelper">
            <summary>
            Class to define all the helper classes for member system and member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.SetMemberPartProperties(Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32)">
            <summary>
            Internal method to set the properties on the member part.
            </summary>
            <param name="oMemberPart">Member part on which properties need to be set.</param>
            <param name="oCrossSection">Cross section part.</param>
            <param name="oMaterial">Material part.</param>
            <param name="cardinalPoint">Cardinal point on the cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.SetMemberPartProperties(Ingr.SP3D.Structure.Middle.MemberPart,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.ReferenceData.Middle.Material,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Internal method to set the properties on the standalone member part.
            </summary>
            <param name="oMemberPart">Member part on which properties need to be set.</param>
            <param name="oCrossSection">Cross section part.</param>
            <param name="oMaterial">Material part</param>
            <param name="cardinalPoint">Cardinal point on the cross section. </param>
            <param name="memberType"> Type of the member part. </param>
            <param name="angle"> Beta angle (rotation) of the member part.</param>
            <param name="bMirror"> Mirror property for member part cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.SetMemberSystemProperties(Ingr.SP3D.Structure.Middle.MemberSystem,System.Int32,System.Double,System.Boolean)">
            <summary>
            Internal method to set the properties on the member system.
            </summary>
            <param name="oMemberSystem"> Member system on which properties need to be set.</param>
            <param name="memberType"> Type of the member part. </param>        
            <param name="angle"> Beta angle (rotation) of the member part.</param>
            <param name="bMirror"> Mirror property for member part cross section.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetRelatedObjectsFromFrameConnection(Ingr.SP3D.SPSMembers.ISPSFrameConnection,System.Object@,System.Object@)">
            <summary>
            Gets the related objects from the frame connection.
            </summary>
            <param name="oFrameConnection">ISPSFrameConnection</param>
            <param name="oRelatedObj1">Object 1</param>
            <param name="oRelatedObj2">Object 2</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsBuiltUpSection(Ingr.SP3D.ReferenceData.Middle.CrossSection)">
            <summary>
            Checks to see if a section is built-up.
            </summary>
            <param name="oCrossSection">CrossSection</param>
            <returns> True if the section is built-up, False otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsRelatedObjPosition(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Checks to see if a related object is a position object (FC/Point/Position).
            </summary>
            <param name="obj">BusinessObject</param>
            <returns> True if object is a posiiton object, False otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetPositionFromRelObj(Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Gets position from a related object (FC/Point).
            </summary>
            <param name="oRelatedObj">BusinessObject</param>
            <returns> Position of the object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsGridConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a GridLine.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsSurfaceConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a surface.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsMemberConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a member.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsPositionConstraintBad(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks to see if the related object collection has a valid set of constraints with a position.
            </summary>
            <param name="relatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsOverConstrainted(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Checks if the collection contains both point type objects, if so raise an Over Constrainted Exception
            i.e., Point and Point,Point and FC,FC and Point,FC and FC
            </summary>
            <param name="oRelatedObjects">Collection of BusinessObjects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetPositionWithRelatedObjects(Ingr.SP3D.Common.Middle.BusinessObject,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Method to calculate the end position from the related objects for the frame connection.
            This position will be used to set the logical axis of the member.
            </summary>
            <param name="oRelatedObj1"> First related object of the frame connection.</param>
            <param name="oRelatedObj2"> Second related object of the frame connection.</param>
            <returns> Position resulting from the related objects if a successful intersection is found, null otherwise.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsMemberTypeValid(System.Int32)">
            <summary>
            Checks whether the member type set by the user is valid; i.e., within the member type codelist values.
            </summary>
            <param name="memberType">String for member type.</param>
            <returns>Boolean which indicates whether the input is valid or not.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemberTypeCodeList(System.Int32)">
            <summary>
            
            </summary>
            <param name="memberType"></param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsMemberTypeCategoryValid(System.Int32)">
            <summary>
            Checks whether the member type set by the user is valid; i.e., within the member type codelist values.
            </summary>
            <param name="memberTypeCategory">The member type category.</param>
            <returns>
            	<c>true</c> if the input is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemberTypeCategoryCodeList(System.Int32)">
            <summary>
            Gets the MemberTypeCategory codelist value.
            </summary>
            <param name="memberTypeCategory">The MemberTypeCategory.</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemTypeCodeListInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetMemTypeCategoryCodeListInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.IsCardinalPointValid(System.Int32)">
            <summary>
            Checks whether the cardinal point is valid; i.e., within the cardinal point codelist values.
            </summary>
            <param name="cardinalPoint">Integer cardinal point.</param>
            <returns>Boolean</returns>
            <example>This is an example of the IsCardinalPointValid method.
            <code>
            Dim IsValidCardinalPoint As Boolean = MemberHelper.IsCardinalPointValid(5)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetParentTypeCategory(System.Int32)">
            <summary>
            Gets the parent type category for the given member type value.
            </summary>
            <param name="memberType">The member type codelist value.</param>
            <returns>The parent MemberTypeCategory codelist value.</returns>
            <example>
            <code>
            Dim memberType As Integer = CInt(Type.Beam) 
            Dim parentTypeCategory As Integer = MemberHelper.GetParentTypeCategory(memberType)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberHelper.GetChildTypes(System.Int32)">
            <summary>
            Gets the collection of member type values for the given member type category.
            </summary>
            <param name="typeCategory">The member type category codelist value.</param>
            <returns>Collection of member type values for the given member type category.</returns>
            <example>
            <code>
            Dim typeCategory As Integer = CInt(TypeCategory.Beam) 
            Dim childTypeColl As ReadOnlyCollection(Of Integer) = MemberHelper.GetChildTypes(typeCategory)
            </code>
            </example>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SweepOptions">
            <summary>
            Options for creation of surfaces by sweeping a cross section along a path.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOptions.CreateCaps">
            <summary>
            Create additional surfaces on the end caps.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOptions.BreakCrossSection">
            <summary>
            Create additional surfaces by breaking the cross section.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOptions.BreakPath">
            <summary>
            Create additional surfaces by breaking the sweep path.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.SweepOrientation">
            <summary>
            Options for orienting projected surfaces when sweeping a cross section along a path.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOrientation.NormalToSurface">
            <summary>
            Sweep in the normal to the surface direction.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Services.SweepOrientation.NormalAlongZ">
            <summary>
            Sweep in Z-axis direction.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices">
            <summary>
            Cross-section services class implementation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Common.Middle.Position,Ingr.SP3D.Common.Middle.Vector,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Gets the projection surfaces from cross section along the projection path with the given orientation for the end cap surfaces. 
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to <c>true</c> on the profile mirror the cross-section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="posStart">The start position for vector at cap surface at start.</param>
            <param name="startNormal">The normal for cap surface at start.</param>
            <param name="posEnd">The end position for vector at cap surface at end.</param>
            <param name="endNormal">The normal for cap surface at end.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <returns>Projection surfaces from cross section with the given orientation for the end cap surfaces.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if some null argument passed in.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from cross section along some given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            Dim start As New Position(0, 0, 0), end As New Position(1, 0, 0)
            Dim startNormal As New Vector(0.0, 1.0, 0.0)
            Dim endNormal As New Vector(0.0, 0.0, 1.0)
            Dim line As New Line3d(connection, start, end)
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection(connection, crossSection, _ 
                                                line, 4, False, 0, start, startNormal, end, endNormal, sweepOptions)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Structure.Middle.Services.SweepOptions)">
            <summary>
            Gets the projection surfaces from cross section along the projection path. 
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to <c>true</c> on the profile mirror the cross-section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <returns>Projection surfaces from cross section with the given orientation</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if some null argument passed in.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from cross section along some given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            'Need to provide proper projection path
            Dim line As Line3d
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection(connection, crossSection, _ 
                                                                                                            line, 4, False, 0, sweepOptions)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectionSurfacesFromCrossSection(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,Ingr.SP3D.Structure.Middle.Services.SweepOptions,Ingr.SP3D.Structure.Middle.Services.SweepOrientation)">
            <summary>
            Gets the projection surfaces from cross section along the projection path with the option for orienting projected surfaces.
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to <c>true</c> on the profile mirror the cross-section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <param name="sweepOrientation">Options for orienting projected surfaces when sweeping a cross section along a path.</param>
            <returns>Projection surfaces from cross section with the given orientation.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if some null argument passed in.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions or CrossSectionOrientation enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from cross section along some given projection path.</exception>
            <example>Example code for using this method.
            <code>
            Dim connection As SP3DConnection = OccurrenceConnection
            Dim catalogStructHelper As New CatalogStructHelper()
            Dim referenceStandardName As String = "AISC-LRFD-3.1"
            Dim sectionName As String = "C12x25"
            Dim crossSection As CrossSection = catalogStructHelper.GetCrossSection(referenceStandardName, sectionName)
            Dim crossSectionServices As New CrossSectionServices()
            Dim sweepOptions As SweepOptions = SweepOptions.CreateCaps
            'Need to provide proper projection path
            Dim projectionPath As ComplexString3d
            Dim orientation As CrossSectionOrientation = CrossSectionOrientation.Perpendicular
            Dim surfaces As Collection(Of ISurface) = crossSectionServices.GetProjectionSurfacesFromCrossSection(connection, crossSection, _ 
                                                projectionPath, 4, False, 0, sweepOptions, orientation)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetCardinalPointDelta(Ingr.SP3D.Structure.Middle.ProfilePart,Ingr.SP3D.Common.Middle.Position,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the distance of the cardinal point from another cardinal point in U-V space at the given position. 
            </summary>
            <param name="profilePart">Profile part.</param>
            <param name="posAlong">Position along object.</param>
            <param name="cardinalPointIndexFrom">Integer index from.</param>
            <param name="cardinalPointIndexTo">Integer index to.</param>
            <param name="uDistance">Double as U-distance.</param>
            <param name="vDistance">Double as V-distance.</param>       
            <exception cref="T:System.ArgumentNullException">Exception raised if a null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException">Exception raised if a null argument is passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetCardinalPointDelta(Ingr.SP3D.Structure.Middle.ProfilePart,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the distance of the cardinal point from another cardinal point in U-V space. 
            </summary>
            <param name="profilePart">Profile part.</param>
            <param name="cardinalPointIndexFrom">Integer index from.</param>
            <param name="cardinalPointIndexTo">Integer index to.</param>
            <param name="uDistance">Double as U-distance.</param>
            <param name="vDistance">Double as V-distance.</param>       
            <exception cref="T:System.ArgumentNullException">Exception raised if a null argument is passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException">Exception raised if a null argument is passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.IsValidMemberCrossSection(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String@)">
            <summary>
            Determines whether the given cross section is valid for member.
            </summary>
            <param name="crosssection">CrossSection object.</param>
            <param name="errorMessage">Returns error message if the cross section is invalid.</param>
            <returns>
            	<c>true</c> if the specified cross section is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.IsSymFileExist(Ingr.SP3D.ReferenceData.Middle.CrossSection,System.String@)">
            <summary>
            This method checks whether symbol (*.sym) file exists for the given cross-section object in the symbol share and also user has access to it.
            </summary>
            <param name="crossSection">Cross-section object.</param>
            <param name="symFileName">Symbol (*.sym) file full path if exist otherwise empty string.</param>
            <returns><c>true</c> if symbol (*.sym) file exists and user has access to it; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Raised when null argument passed in.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.DefinitionParametersException">Raised when enexpected error occoured while getting the definition parameter from cross-section.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetMemberStructCrossSection(Ingr.SP3D.Structure.Middle.MemberPart)">
            <summary>
            Method to get the member struct cross-section.
            </summary>
            <param name="memberPart">Member part.</param>
            <returns>The cross section of the member part as object.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CrossSectionException">Exception raised if an error is encountered while trying to retrieve the cross section.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Services.CrossSectionServices.GetProjectedSurfaces(Ingr.SP3D.Common.Middle.Services.SP3DConnection,Ingr.SP3D.ReferenceData.Middle.CrossSection,Ingr.SP3D.Common.Middle.ICurve,System.Int32,System.Boolean,System.Double,System.Double[],System.Double[],Ingr.SP3D.Structure.Middle.Services.SweepOptions,Ingr.SP3D.Structure.Middle.Services.SweepOrientation)">
            <summary>
            Gets the projection surfaces from cross section.
            </summary>
            <param name="connection">The model database connection.</param>
            <param name="crossSection">The cross section catalog part.</param>
            <param name="projectionPath">The projection path.</param>
            <param name="cardinalPoint">The cardinal point to be used.</param>
            <param name="mirrorOption">If set to <c>true</c> on the profile mirror the cross-section.</param>
            <param name="rotationAngle">The rotation angle in radians for the profile.</param>
            <param name="startPositionNormal">The start position and normal for vector at cap surface at start.</param>
            <param name="endPositionNormal">The end position and normal for vector at cap surface at end.</param>
            <param name="sweepOptions">Options for creation of surfaces by sweeping a cross section along a path.</param>
            <param name="sweepOrientation">Options for orienting projected surfaces when sweeping a cross section along a path.</param>
            <returns>Surfaces projected along the given trace curve.</returns>
            <exception cref="T:System.ArgumentNullException">Exception raised if some null argument passed in.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Exception raised if the argument is not within SweepOptions or CrossSectionOrientation enumerated values.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">Exception raised while creating surfaces from cross section along some given projection path.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.IAmbiguity">
            <summary>
            IAmbiguity interface definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.AmbiguousPatch})">
            <summary>
            Returns true if the ambiguity is resolved with the collection of ambiguous solutions provided by the user.
            </summary>
            <param name="SolutionsToKeep">Collection of AmbiguousPatch objects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position})">
            <summary>
            Returns true if the ambiguity is resolved with the collection of points provided by the user.
            </summary>
            <param name="SolutionsToKeep">Collection of Position objects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(Ingr.SP3D.Structure.Middle.AmbiguousPatch)">
            <summary>
            Returns true if the ambiguity is resolved with an ambiguous solution provided by the user.
            </summary>
            <param name="SolutionToKeep">AmbiguousPatch object.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.IAmbiguity.ResolveAmbiguity(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Returns true if the ambiguity is resolved with a point solution provided by the user.
            </summary>
            <param name="SolutionToKeep">Position objects.</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IAmbiguity.AmbiguousPatches">
            <summary>
            Gets the ambiguous solutions. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IAmbiguity.IsAmbiguous">
            <summary>
            Returns true if the solution is ambiguous.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.IAmbiguity.UnusedBoundaries">
            <summary>
            Returns the boundaries which are not used by the current ambiguity configuration.
            </summary>
            <returns>ReadOnlyCollection of BusinessObjects.</returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.ICustomEdgeMappingRule">
            <summary>
            Implemented by services that return end cut mapping information.  
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.ICustomEdgeMappingRule.GetEdgeMapping(Ingr.SP3D.Common.Middle.IPort,Ingr.SP3D.Common.Middle.IPort,System.Int32@,System.Boolean@)">
            <summary>
            Gets the edge mapping.
            </summary>
            <param name="boundingMember">The bounding member.</param>
            <param name="boundedMember">The bounded member.</param>
            <param name="sectionAlias">The section alias.</param>
            <param name="penetratesWeb">if set to <c>true</c> [penetrates web].</param>
            <returns>Edge cut mapping information.</returns>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException">
            <summary>
            Raised when calling routines do not have a proper parent system object passed as an argument.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidParentException.#ctor(System.String)">
            <summary>
             Instantiates when calling routines do not have a proper parent system object passed as an argument.
            </summary>
            <param name="strMessage"> The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">
            <summary>
            Raised when a factory fails to initialize.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException.#ctor(System.String)">
            <summary>
             Instantiates when creation of a factory object fails.
            </summary>
            <param name="strMessage"> The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException.#ctor(System.String,System.Exception)">
            <summary>
             Instantiates when creation of a factory object fails.
            </summary>
            <param name="strMessage"> The error message that explains the reason for the exception. </param>
            <param name="e">Inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">
            <summary>
            Raised when an invalid argument is passed to a method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException.#ctor(System.String)">
             <summary>
            Instantiates when an invalid argument is passed to the method. 
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints">
            <summary>
            Raised when the given objects cannot properly constrain an object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberInvalidConstraints.#ctor(System.String)">
             <summary>
            Instantiates when the passed in objects fail to get the right output. 
             </summary>
             <param name="strMessage">The error message that explains the reason for the exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNotSupportedException">
            <summary>
            Exception raised if an unsupported operation is attempted on a structure object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNotSupportedException.#ctor(System.String)">
            <summary>
            Instantiates when an unsupported operation is attempted on a structure object.
            </summary>
            <param name="strMessage">The error message that explains the structure is not supported.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNoNameRuleException">
            <summary>
            Exception raised if a business object does not have a name rule associated to it.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNoNameRuleException.#ctor(System.String)">
            <summary>
            Instantiates when a business object does not have a name rule associated to it.
            </summary>
            <param name="strMessage">The error message that explains there is no associated name rule.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException">
            <summary>
            Exception raised if related objects cannot be set on the member frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnInvalidRelatedObjsException.#ctor(System.String)">
            <summary>
            Instantiates when related objects cannot be set on the member frame connection.
            </summary>
            <param name="strMessage">The error message that explains there are invalid related objects.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">
            <summary>
            Exception raised if a connection cannot be obtained from an object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException.#ctor(System.String)">
            <summary>
            Instantiates when a connection cannot be obtained from an object.
            </summary>
            <param name="strMessage">The error message that explains the connection cannot be obtained.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException">
            <summary>
            Exception raised if an error is encountered while getting the member end from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the member end from the frame connection.
            </summary>
            <param name="strMessage">The error message that explains that getting the connection failed.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberEndException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the member end from the frame connection.
            <param name="strMessage"> Error message.</param>
            <param name="e"> Inner Exception.</param>
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException">
            <summary>
            Raised when an action that is not allowed for a member part that is a child of a
            member system has been attempted.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            An action that is not allowed for a member part that is a child of a
            member system has been attempted.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForChildMemberPartException.#ctor">
            <summary>
            An action that is not allowed for a member part that is a child of a
            member system has been attempted.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException">
            <summary>
            Raised when an action that is not allowed on a non-prismatic member part has been attempted.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            An action that is not allowed on a non-prismatic member part has been attempted.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForNonPrismaticMemberPartException.#ctor">
            <summary>
            Raised when an action that is not allowed on a non-prismatic member part has been attempted.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException">
            <summary>
            Raised when an action that is not allowed on a curved member part has been attempted.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            An action that is not allowed on a curved member part has been attempted.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidActionForCurvedMemberPartException.#ctor">
            <summary>
            Raised when an action that is not allowed on a curved member part has been attempted.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException">
            <summary>
            Raised when the selected object is of an unexpected type and does not support a
            needed interface.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            The selected object is of an unexpected type and does not support a
            needed interface.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidObjectTypeException.#ctor">
            <summary>
            Raised when the selected object is of an unexpected type and does not support a
            needed interface.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException">
            <summary>
            Raised when the input surface is invalid as a cutback surface for the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            The input surface is invalid as a cutback surface for the member part.
            </summary>
            <param name="inner">The COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureInvalidCutbackSurfaceException.#ctor">
            <summary>
            The input surface is invalid as a cutback surface for the member part.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException">
            <summary>
            Raised when cannot create a member part with a non-linear axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException.#ctor(System.Runtime.InteropServices.COMException)">
            <summary>
            Cannot create a member part with a non-linear axis.
            </summary>
            <param name="inner">The inner COMException.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNonLinearAxisException.#ctor">
            <summary>
            Raised when cannot create a member part with a non-linear axis.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TransformException">
            <summary>
            Exception raised if an error is encountered while performing a transformation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TransformException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while performing a transformation.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TransformException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while performing a transformation.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PriorityException">
            <summary>
            Exception raised if an error is encountered while getting or setting the priority.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PriorityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when if an error is encountered while getting or setting the priority.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TypeException">
            <summary>
            Exception raised if an error is encountered while getting or setting the type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TypeCategoryException">
            <summary>
            Exception raised if an error is encountered while getting or setting the type category.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeCategoryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type category.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TypeCategoryException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting or setting the type category.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.LoadsException">
            <summary>
            Exception raised if an error is encountered while getting the Loads property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.LoadsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Loads property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ReleasesException">
            <summary>
            Exception raised if an error is encountered while getting the Releases property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ReleasesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Releases property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCutbackSurfacesException">
            <summary>
            Exception raised if an error is encountered while getting the cutback surfaces of member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCutbackSurfacesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the cutback surfaces of member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddCutbackSurfaceException">
            <summary>
            Exception raised if an error is encountered while adding the cutback surface to the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddCutbackSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while adding the cutback surface to the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetAxisPortException">
            <summary>
            Exception raised if an error is encountered while trying to get the axis port of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAxisPortException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the axis port of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsCurvedException">
            <summary>
            Exception raised if an error is encountered while trying to check whether a member is curved or not.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsCurvedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to check whether a member is curved or not.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CrossSectionException">
            <summary>
            Exception raised if an error is encountered while trying to retrieve the cross section.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CrossSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to retrieve the cross section.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetAxisException">
            <summary>
            Exception raised if an error is encountered while trying to set the axis of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the axis of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRelatedObjectsException">
            <summary>
            Exception raised if an error is encountered while trying to get related objects of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRelatedObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get related objects of of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.Sketch3DException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the sketch 3d path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.Sketch3DException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the sketch 3d path.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.Sketch3DException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the sketch 3d path.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException">
            <summary>
            Exception raised if an error is encountered while trying to set the end positions on a sketch 3d path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set the end positions on a sketch 3d path.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSketch3DEndPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the end positions on a sketch 3d path.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException">
            <summary>
            Exception raised if an error is encountered while trying to get the point at end of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointAtEndException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the point at end of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MirrorException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the mirror property of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MirrorException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when if an error is encountered while trying to get or set the mirror property of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.BetaAngleException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the mirror property of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BetaAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get or set the mirror property of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OrientationVectorException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the OrientationVector property of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OrientationVectorException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the OrientationVector property of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException">
            <summary>
            Exception raised if an error is encountered while trying to get the matrix at a position of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMatrixAtPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the matrix at a position of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ConnectedPartsException">
            <summary>
            Exception raised if an error is encountered while trying to get connected parts of the member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ConnectedPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get connected parts of the member.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException">
            <summary>
            Exception raised if an error is encountered while trying to get the member system of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the member system of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CutLengthException">
            <summary>
            Exception raised if an error is encountered while trying to get the cut length of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CutLengthException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the cut length of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CardinalPointException">
            <summary>
            Exception raised if an error is encountered while trying to get the cardinal point of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CardinalPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the cardinal point of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AxisException">
            <summary>
            Exception raised if an error is encountered while trying to get the axis of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the axis of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AxisException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the axis of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StandAloneException">
            <summary>
            Exception raised if an error is encountered while trying to get the StandAlone property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StandAloneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the StandAlone property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DesignedMemberException">
            <summary>
            Exception raised if an error is encountered while trying to get the DesignedMember property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DesignedMemberException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the DesignedMember property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PrismaticException">
            <summary>
            Exception raised if an error is encountered while trying to get the Prismatic property of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PrismaticException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the Prismatic property of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndPointsException">
            <summary>
            Exception raised if an error is encountered while trying to get end points of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndPointsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndPointsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndPointsException">
            <summary>
            Exception raised if an error is encountered while trying to set end points of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndPointsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndPointsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set end points of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartsException">
            <summary>
            Exception raised if an error is encountered while trying to get parts of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get parts of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartException">
            <summary>
            Exception raised if an error is encountered while trying to get the part of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the part of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the part of the member part.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPartException">
            <summary>
            Exception raised if an error is encountered while trying to set the part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set the part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartsAtPositionException">
            <summary>
            Exception raised if an error is encountered while trying to get the part at the position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartsAtPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the part at the position of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException">
            <summary>
            Exception raised if an error is encountered while trying to get the frame connection at position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFrameConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the frame connection of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException">
            <summary>
            Exception raised if an error is encountered while trying to get split connections at the position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException"/> class with the given message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get split connections of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMatrixException">
            <summary>
            Exception raised if an error is encountered while trying to get the matrix at position of the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the matrix of the member part.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortException">
            <summary>
            Exception raised if an error is encountered while trying to get a port on a connectable.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get a port on a connectable.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get a port on a connectable.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FindPortException">
            <summary>
            Exception raised if an error is encountered while trying to find a port on a connectable from a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindPortException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to find a port on a connectable from a connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FindPortException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to find a port on a connectable from a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException">
            <summary>
            Exception raised if an error is encountered while trying to enumerate ports on a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to enumerate ports on a connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EnumPortsFailedException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to enumerate ports on a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRangeFailedException">
            <summary>
            Exception raised if an error is encountered while trying to get the range of a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the range of a connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeFailedException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the range of a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException">
            <summary>
            Exception raised if an error is encountered while trying to get the position of a connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the position of a connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnPositionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the position of a connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException">
            <summary>
            Exception raised if an error is encountered while trying to get the member system from the connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the member system from the connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnMemberSystemException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the member system from the connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException">
            <summary>
            Exception raised if an error is encountered while trying to get the end member systems from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the end member systems from the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnEndMemberSystemsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the end member systems from the frame connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the global work point offset on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the global work point offset on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the global work point offset on the frame connection.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException">
            <summary>
            Exception raised if an invalid cardinal point is being set.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidCardinalPointException.#ctor(System.String)">
            <summary>
            Instantiates when an invalid cardinal point is being set.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException">
            <summary>
            Exception raised if an error is encountered while trying to get or set the work point offset cardinal point on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the work point offset cardinal point on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnWPOCardinalPtException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get or set the work point offset cardinal point on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException">
            <summary>
            Exception raised if an error is encountered while trying to validate the related objects on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to validate the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnValidateRelObjsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to validate the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException">
            <summary>
            Exception raised if an error is encountered while trying to get the related objects on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnGetRelObjsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the related objects on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException">
            <summary>
            Exception raised if an error is encountered while trying to get the point on condition on the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the point on condition on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnectionGetPointOnException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the point on condition on the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException">
            <summary>
            Exception raised if an error is encountered while trying to transform the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to transform the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FrameConnTransformException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to transform the frame connection. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberTypeException">
            <summary>
            Exception raised if an error is encountered while trying to get the codelist value for member type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberTypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the codelist value for member type. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberCategoryException">
            <summary>
            Exception raised if an error is encountered while trying to get the codelist value for member type category.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberCategoryException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the codelist value for member type category. 
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectionsException">
            <summary>
            Exception raised if an error is encountered while trying to get the connections of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectionsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the connections of the member system.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PlaceEndCutFeatureException">
            <summary>
            Exception raised if an error is encountered while placing the end cut feature.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PlaceEndCutFeatureException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to place the end cut feature.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSectionEdgesAtPlaneException">
            <summary>
            Exception raised if an error is encountered while getting the section edges at given plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSectionEdgesAtPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the section edges at a plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSectionFacesException">
            <summary>
            Exception raised if an error is encountered while getting the section faces.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSectionFacesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get section faces.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndCutSketchingPlaneOriginException">
            <summary>
            Exception raised if an error is encountered while getting the end cut sketching plane origin.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndCutSketchingPlaneOriginException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the end cut sketching plane origin.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CrossSectionClassException">
            <summary>
            Exception raised if an error is encountered while getting the cross section class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CrossSectionClassException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the cross section class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException">
            <summary>
            Exception raised if an error is encountered while getting the keypoint coordinates.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetKeyPointCoordinatesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the keypoint coordinates.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException">
            <summary>
            Exception raised if an error is encountered while getting the nominal section size.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNominalSectionSizeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the nominal section size.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MatrixException">
            <summary>
            Exception raised if an error is encountered while determining the transformation matrix.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the transformation matrix.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MatrixException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while determining the transformation matrix.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.XAxisException">
            <summary>
            Exception raised if an error is encountered while determining the X-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.XAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the X-axis.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.YAxisException">
            <summary>
            Exception raised if an error is encountered while determining the Y-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.YAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the Y-axis.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ZAxisException">
            <summary>
            Exception raised if an error is encountered while determining the Z-axis.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ZAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the Z-axis.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.OriginException">
            <summary>
            Exception raised if an error is encountered while determining the origin.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OriginException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while determining the origin.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.OriginException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the origin.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryOffsetException">
            <summary>
            Exception raised if an error is encountered while trying to get the boundary offset of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the boundary offset of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryOffsetException">
            <summary>
            Exception raised if an error is encountered while trying to set the boundary offset of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundaryOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the boundary offset of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallTypeException">
            <summary>
            Exception raised if an error is encountered while trying to get the type part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the type part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetWallTypeException">
            <summary>
            Exception raised if an error is encountered while trying to set the type part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetWallTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the type part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaximumHeightException">
            <summary>
            Exception raised if an error is encountered while getting the maximum height of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaximumHeightException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the maximum height of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetMaximumHeightException">
            <summary>
            Exception raised if an error is encountered while setting the maximum height of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMaximumHeightException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the maximum height of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReflectException">
            <summary>
            Exception raised if an error is encountered while getting the Reflect property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReflectException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Reflect property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetReflectException">
            <summary>
            Exception raised if an error is encountered while setting the Reflect property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetReflectException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the Reflect property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetVerticalOffsetException">
            <summary>
            Exception raised if an error is encountered while getting the VerticalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetVerticalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the VerticalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetVerticalOffsetException">
            <summary>
            Exception raised if an error is encountered while setting the VerticalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetVerticalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the VerticalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetHorizontalOffsetException">
            <summary>
            Exception raised if an error is encountered while getting the HorizontalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetHorizontalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the HorizontalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetHorizontalOffsetException">
            <summary>
            Exception raised if an error is encountered while setting the HorizontalOffset property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetHorizontalOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the HorizontalOffset property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetAngleException">
            <summary>
            Exception raised if an error is encountered while getting the Angle property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Angle property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetAngleException">
            <summary>
            Exception raised if an error is encountered while setting the Angle property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the Angle property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCompositionPartException">
            <summary>
            Exception raised if there is an unexpected failure while getting the composition part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCompositionPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while getting the composition part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCompositionPartException">
            <summary>
            Exception raised if there is an unexpected failure while setting the composition part of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCompositionPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while setting the composition part of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCompositionLayersException">
            <summary>
            Exception raised if there is an unexpected failure while getting the composition layers of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCompositionLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while getting the composition layers of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCompositionLayersException">
            <summary>
            Exception raised if there is an unexpected failure while setting the composition layers of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCompositionLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while setting the composition layers of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReferenceLayerException">
            <summary>
            Exception raised if there is an unexpected failure while getting the reference layer of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferenceLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when there is an unexpected failure while getting the reference layer of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetThicknessException">
            <summary>
            Exception raised if an error is encountered while getting the Thickness property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the Thickness property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetThicknessException">
            <summary>
            Exception raised if an error is encountered while setting the Thickness property of the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while setting the Thickness property of the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddSystemChildException">
            <summary>
            Exception raised if an error is encountered while AddSystemChild is called on the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSystemChildException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while AddSystemChild is called on the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSystemChildException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while AddSystemChild is called on the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SystemChildrenException">
            <summary>
            Exception raised if an error is encountered while getting system children is called on the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SystemChildrenException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting system children is called on the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SystemChildrenException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting system children is called on the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSystemParentException">
            <summary>
            Exception raised if an error is encountered when setting system parent for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSystemParentException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when setting system parent for the wall.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSystemParentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting system parent for wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSystemParentException">
            <summary>
            Exception raised if an error is encountered when setting system parent for wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSystemParentException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when setting system parent for wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSystemParentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting system parent for wall.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetActiveNameRuleException">
            <summary>
            Exception raised if an error is encountered when setting active name rule for wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetActiveNameRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting active name rule for wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetActiveNameRuleException">
            <summary>
            Exception raised if an error is encountered when setting active name rule for wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetActiveNameRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting active name rule for wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetNameException">
            <summary>
            Exception raised if an error is encountered when getting the name for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when getting the name for a wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the name for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetNameException">
            <summary>
            Exception raised if an error is encountered when setting the name for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the name for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetUserDefinedNameException">
            <summary>
            Exception raised if an error is encountered when getting the user-defined name for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetUserDefinedNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the user-defined name for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetUserDefinedNameException">
            <summary>
            Exception raised if an error is encountered when setting the user-defined name for the wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetUserDefinedNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when setting the user-defined name for the wall.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetUserDefinedNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the user-defined name for the wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRangeException">
            <summary>
            Exception raised if an error is encountered when getting the range. 
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered when getting the range.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRangeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the range. 
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.WBSItemChildHelperObjException">
            <summary>
            Exception raised if an unexpected failure occurs while getting WBSItemChildHelperObj for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.WBSItemChildHelperObjException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an unexpected failure occurs while getting WBSItemChildHelperObj for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.WBSItemParentsException">
            <summary>
            Exception raised if an unexpected failure occurs while getting WBSItemParents for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.WBSItemParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an unexpected failure occurs while getting WBSItemParent for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException">
            <summary>
            Exception raised if an error is encountered when getting a cross section for wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCrossSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting a cross section for wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException">
            <summary>
            Exception raised if an error is encountered when setting a cross section for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCrossSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting a cross section for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCrossSectionTypeException">
            <summary>
            Exception raised if an error is encountered when setting a cross section type for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCrossSectionTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting a cross section type for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException">
            <summary>
            Exception raised if an error is encountered while getting the connectable ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the connectable ports.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectablePortsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the connectable ports.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException">
            <summary>
            Exception raised if an error is encountered while getting the connected ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the connected ports.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectedPortsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the connected ports.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortsException">
            <summary>
            Exception raised if an error is encountered while getting the ports.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the ports.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the ports.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IsConnectedToException">
            <summary>
            Exception raised if an error is encountered while IsConnectedTo is called.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsConnectedToException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while IsConnectedTo is called.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IsConnectedToException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while IsConnectedTo is called.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.WallSystem3DException">
            <summary>
            Exception raised if an unexpected failure occurs while trying to create a wall system using Sketch3D.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.WallSystem3DException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure occurs while trying to create a wall system using Sketch3D.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSupportPlaneException">
            <summary>
            Exception raised if an error is encountered when getting the support plane for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting the support plane for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSupportPlaneException">
            <summary>
            Exception raised if an error is encountered when setting the support plane for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when setting the support plane for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallPartsException">
            <summary>
            Exception raised if an error is encountered when getting wall parts for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered when getting wall parts for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPathException">
            <summary>
            Exception raised if an error is encountered when getting the path for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPathException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the path for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPathException">
            <summary>
            Exception raised if an error is encountered when setting the path for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPathException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting the path for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundariesException">
            <summary>
            Exception raised if an error is encountered when getting boundaries for a wall or plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting boundaries for a wall or plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryException">
            <summary>
            Exception raised if an error is encountered when getting boundary for a plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting boundaries for a plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundariesException">
            <summary>
            Exception raised if an error is encountered when setting boundaries for a wall or plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting boundaries for a wall or plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryException">
            <summary>
            Exception raised if an error is encountered when setting a boundary for a wall or plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting a boundary for a wall or plane.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetContinuityTypeException">
            <summary>
            Exception raised if an error is encountered when getting the continuity type for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetContinuityTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the continuity type for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetContinuityTypeException">
            <summary>
            Exception raised if an error is encountered when setting the continuity type for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetContinuityTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting the continuity type for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPriorityNumberException">
            <summary>
            Exception raised if an error is encountered when getting the priority number for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPriorityNumberException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the priority number for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPriorityNumberException">
            <summary>
            Exception raised if an error is encountered when setting the priority number for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPriorityNumberException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting the priority number for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRunException">
            <summary>
            Exception raised if an error is encountered when getting a run for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRunException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting a run for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetRunException">
            <summary>
            Exception raised if an error is encountered when setting a run for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetRunException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when setting a run for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallConnectionsException">
            <summary>
            Exception raised if an error is encountered when getting wall connections for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallConnectionsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting wall connections for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallSystemException">
            <summary>
            Exception raised if an error is encountered when getting a wall system for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting a wall system for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallSystemException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered when getting a wall system for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetConnectedPartsException">
            <summary>
            Exception raised if an error is encountered when getting the connected parts for a wall.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetConnectedPartsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the connected parts for a wall.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetWallSystemFromRunException">
            <summary>
            Exception raised if an error is encountered when getting the wall system for a wall run.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetWallSystemFromRunException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered when getting the wall system for a wall run.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetIsReferenceException">
            <summary>
            Exception raised if a failure occurs while getting the IsReference property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIsReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if a failure occurs while getting the IsReference property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetIsReferenceException">
            <summary>
            Exception raised if a failure occurs while setting the IsReference property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetIsReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if a failure occurs while setting the IsReference property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayerThicknessException">
            <summary>
            Exception raised if an error is encountered while getting the LayerThickness property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the LayerThickness property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayerThicknessException">
            <summary>
            Exception raised if an error is encountered while setting the LayerThickness property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the LayerThickness property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayerContinuityException">
            <summary>
            Exception raised if an error is encountered while getting the LayerContinuity property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerContinuityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerContinuityException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayerContinuityException">
            <summary>
            Exception raised if an error is encountered while setting the LayerContinuity property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerContinuityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerContinuityException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while setting the LayerContinuity property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayerCatalogPartException">
            <summary>
            Exception raised if an error is encountered while getting the LayerCatalogPart property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayerCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the LayerCatalogPart property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayerCatalogPartException">
            <summary>
            Exception raised if an error is encountered while setting the LayerCatalogPart property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayerCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the LayerCatalogPart property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaterialException">
            <summary>
            Exception raised if an error is encountered while getting the Material property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetMaterialException">
            <summary>
            Exception raised if an error is encountered while setting the Material property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMaterialException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the Material property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaterialTypeException">
            <summary>
            Exception raised if an error is encountered while getting the MaterialType property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the MaterialType property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialTypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the MaterialType property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMaterialGradeException">
            <summary>
            Exception raised if an error is encountered while getting the MaterialGrade property of the layer.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMaterialGradeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the MaterialGrade property of the layer.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">
            <summary>
            Exception raised if an error is encountered while getting the port index.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortIndexException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the port index.
            </summary>
            <param name="strMessage">Error message.</param>       
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortIndexException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the port index.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PortTypeException">
            <summary>
            Exception raised if an error is encountered while getting the port type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortTypeException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the port type.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PortTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the port type.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The inner Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberPartException">
            <summary>
            Exception raised if an error is encountered while trying to get the member part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the member part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException">
            <summary>
            Exception raised if an error is encountered while trying to get the port geometry.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPortGeometryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the port geometry.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOperatorIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the operator identifier.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOperatorIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the operator identifier.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetOperationIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the operation identifier.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetOperationIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the operation identifier.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetContextIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the context ID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetContextIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the context ID.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSectionIdException">
            <summary>
            Exception raised if an error is encountered while trying to get the section ID.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSectionIdException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the section ID.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetIsPersistentException">
            <summary>
            Exception raised if an error is encountered while trying to get whether persistent.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetIsPersistentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get whether persistent.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetTopologyProxyTypeException">
            <summary>
            Exception raised if an error is encountered while trying to get the topology proxy type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetTopologyProxyTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the topology proxy type.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException">
            <summary>
            Exception raised if an error is encountered while trying to get the geometry operation from an entity which does not support it.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the geometry operation from an entity which does not support it.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometryOperationNotSupportedException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the geometry operation from an entity which does not support it.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StairNullException">
            <summary>
            Exception raised if an error is encountered while trying to create a stair.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StairNullException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to create a stair.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.LadderNullException">
            <summary>
            Exception raised if an error is encountered while trying to create a ladder.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.LadderNullException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to create a ladder.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.TopSupportException">
            <summary>
            Exception raised if an error is encountered while trying to get stair or ladder top support.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TopSupportException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get stair or ladder top support.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.TopSupportException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get stair or ladder top support.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SideReferenceException">
            <summary>
            Exception raised if an error is encountered while trying to get stair or ladder side reference.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SideReferenceException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get stair or ladder side reference.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SideReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get stair or ladder side reference.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.BottomSupportException">
            <summary>
            Exception raised if an error is encountered while trying to get stair or ladder bottom support.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BottomSupportException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get stair or ladder bottom support.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BottomSupportException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get stair or ladder bottom support.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StructureNullObjectException">
            <summary>
            Exception raised if a structure object has a null reference.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StructureNullObjectException.#ctor(System.String)">
            <summary>
            Instantiates when a structure object has a null reference.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.HandrailNullException">
            <summary>
            Exception raised if an error is encountered while trying to create a handrail.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.HandrailNullException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to create a handrail.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException">
            <summary>
            Exception raised if an error is encountered while getting the catalog part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException">
            <summary>
            Exception raised if an error is encountered while getting the proxy from the part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the proxy from the part.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProxyFromPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the proxy from the part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOrientationException">
            <summary>
            Exception raised if an error is encountered while setting the orientation of the local coordinate system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOrientationException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while setting the orientation of the local coordinate system.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOrientationException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the orientation of the local coordinate system.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPlaneInputsException">
            <summary>
            Exception raised if an error is encountered when a wrong overloaded GetInputs method is called for a particular plane definition type.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPlaneInputsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered when a wrong overloaded GetInputs method is called for a particular plane definition type.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateStructPlane3DException">
            <summary>
            Exception raised if an error is encountered during the creation of a Plane3d object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateStructPlane3DException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered during the creation of a Plane3d object.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GeometryPattern">
            <summary>
            Exception raised if an error is encountered while setting the geometry pattern on the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GeometryPattern.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while setting the geometry pattern on the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException">
            <summary>
            Exception raised if an error is encountered while trying to set the catalog part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCatalogPartException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException">
            <summary>
            Exception raised if an error is encountered while getting the catalog part from proxy.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part from proxy.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCatalogPartFromProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the catalog part from proxy.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSupportInfoException">
            <summary>
            Exception raised if an error is encountered while getting the support of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the support of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSupportInfoException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the support of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the support of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCompositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the composition of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCompositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the composition of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetCompositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the composition of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetCompositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the composition of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetTypeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the type of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the type of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetTypeException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the type of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the type of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetFacePositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the face position of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFacePositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the face position of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetFacePositionException.#ctor(System.String)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the face position of the slab.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetFacePositionException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the face position of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetFacePositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the face position of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetLayersException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the layers of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the layers of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetLayersException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the layers of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetLayersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the layers of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryInfoException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the boundaries of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the boundaries of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryInfoException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the boundaries of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetBoundaryInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the boundaries of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabReferenceLayerException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the reference layer of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabReferenceLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the reference layer of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTotalVolumeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the total volume of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTotalVolumeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the total volume of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabNetVolumeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the net volume of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabNetVolumeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the net volume of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTotalSurfaceException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the total surface of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTotalSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the total surface of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabNetSurfaceException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the net surface of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabNetSurfaceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the net surface of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTotalProjectedAreaException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the total projected area of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTotalProjectedAreaException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the total projected area of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabNetProjectedAreaException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the net projected area of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabNetProjectedAreaException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the net projected area of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabAngleException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the angle of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabAngleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the angle of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabSlopeException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the slope of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabSlopeException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the slope of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabLowestElevationPointException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the lowest elevation point of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabLowestElevationPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the lowest elevation point of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabHighestElevationPointException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the highest elevation point of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabHighestElevationPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the highest elevation point of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabBottomOfConcreteException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the bottom of the concrete of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabBottomOfConcreteException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the bottom of the concrete of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabTopOfConcreteException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the top of the concrete of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabTopOfConcreteException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the top of the concrete of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabThicknessException">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the thickness of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the thickness of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSlabThicknessException">
            <summary>
            Exception raised if an unexpected failure is encountered while setting the thickness of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSlabThicknessException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while setting the thickness of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabAssemblyConnections">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the assembly connections of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabAssemblyConnections.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the assembly connections of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabAmbiguousPatches">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the ambiguous patches of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabAmbiguousPatches.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the ambiguous patches of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabUnusedBoundaries">
            <summary>
            Exception raised if an unexpected failure is encountered while getting the unused boundaries of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabUnusedBoundaries.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while getting the unused boundaries of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SlabResolveAmbiguity">
            <summary>
            Exception raised if an unexpected failure is encountered while trying to resolve the ambiguity of the slab.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SlabResolveAmbiguity.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while trying to resolve the ambiguity of the slab.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSlabIsAmbiguous">
            <summary>
            Exception raised if an unexpected failure is encountered while trying to retrieve whether the slab is ambiguous.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSlabIsAmbiguous.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while trying to retrieve whether the slab is ambiguous.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException">
            <summary>
            Exception raised if an unexpected failure is encountered while defining a traffic entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException.#ctor(System.String)">
            <summary>
            Instantiates when an unexpected failure is encountered while defining a traffic entity.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefineStairLadderException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an unexpected failure is encountered while defining a traffic entity.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException">
            <summary>
            Exception raised if an error is encountered in the ExecuteSelectionRule method.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in the ExecuteSelectionRule method.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ExecuteSelectionRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered in the ExecuteSelectionRule method.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPartNameException">
            <summary>
            Exception raised if an error is encountered in getting part name property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in getting part name property.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPartNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered in getting part name property.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPartNameException">
            <summary>
            Exception raised if an error is encountered in setting part name property.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartNameException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered in setting part name property.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPartNameException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered in setting part name property.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException">
            <summary>
            Exception is raised if an error is encountered while trying to get the supported objects from the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while trying to get the supported objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportedObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the supported objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException">
            <summary>
            Exception is raised if an error is encountered while trying to get the supporting objects from the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while trying to get the supporting objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationGetSupportingObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while trying to get the supporting objects from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException">
            <summary>
            Exception is raised if supported objects cannot be set on the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if supported objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportedObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if supported objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException">
            <summary>
            Exception is raised if supporting objects cannot be set on the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if supporting objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if supporting objects cannot be set on the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefinitionObjectsException">
            <summary>
            Exception is raised if the definition object cannot be retrieved.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if the definition object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the definition object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.FootingInputHelperException">
            <summary>
            Exception is raised if the footing input helper object cannot be retrieved.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FootingInputHelperException.#ctor(System.String)">
            <summary>
            Instantiates if the footing input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.FootingInputHelperException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the footing input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidObjectForFooting">
            <summary>
            Exception raised if an invalid input object is passed for creating the footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidObjectForFooting.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered if an invalid input object is passed for creating the footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidObjectForFooting.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered if an invalid input object is passed for creating the footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">
            <summary>
            Exception raised if an error is encountered while creating an entity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateEntityException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while creating an entity.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateEntityException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while creating an entity.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateFootingException">
            <summary>
            Exception raised if an error is encountered while creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateFootingException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateFootingException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException">
            <summary>
            Exception raised if an error is encountered while retrieving the information of the supported object while creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supported object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportedObjectInfoException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supported object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException">
            <summary>
            Exception raised if an error is encountered while retrieving the information of the supporting object while creating a footing.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supporting object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SupportingObjectInfoException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while retrieving the information of the supporting object while creating a footing.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateHelperClassException">
            <summary>
            Exception raised if an error is encountered while instantiating the helper class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateHelperClassException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while instantiating the helper class.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateHelperClassException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while instantiating the helper class.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount">
            <summary>
            Exception raised if the number of supported objects is less than two.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the number of supported objects is less than two.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidSupportedObjectCount.#ctor(System.String)">
            <summary>
            Instantiates if the number of supported objects is less than two.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException">
            <summary>
            Exception raised if invalid inputs are passed for footing creation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if invalid inputs are passed for footing creation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidFootingInputException.#ctor(System.String)">
            <summary>
            Instantiates if invalid inputs are passed for footing creation.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException">
            <summary>
            Exception raised if invalid inputs are passed for equipment foundation creation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if invalid inputs are passed for equipment foundation creation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidEquipFoundationInputException.#ctor(System.String)">
            <summary>
            Instantiates if invalid inputs are passed for equipment foundation creation.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EquipFoundationInputHelperException">
            <summary>
            Exception is raised if the equipment foundation input helper object cannot be retrieved.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EquipFoundationInputHelperException.#ctor(System.String)">
            <summary>
            Instantiates if the equipment foundation input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EquipFoundationInputHelperException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if the equipment foundation input helper object cannot be retrieved.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSupportObjectsException">
            <summary>
            Exception is raised if an error is encountered while getting the support objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSupportObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetSupportObjectsException">
            <summary>
            Exception is raised if an error is encountered while setting the support objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportObjectsException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while setting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetSupportObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while setting the support objects.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the root selection name from the catalog part.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetRootSelNameException.#ctor(System.String,System.Exception)">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the root selection name from the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefaultFndnException">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the default foundation name from the foundation port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefaultFndnException.#ctor(System.String,System.Exception)">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the default foundation name from the foundation.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetRootSelNameException">
            <summary>
            Exception is raised if an unexpected failure occurs while setting the root selection name on the foundation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetRootSelNameException.#ctor(System.String,System.Exception)">
            <summary>
            Exception is raised if an unexpected failure occurs while getting the root selection name from the catalog part.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InfiniteException">
            <summary>
            Exception is raised if an error is encountered while getting/setting the Infinite Property on line object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InfiniteException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while calling Infinite Property.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StartPointException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the start point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StartPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the start point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EndPointException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the end point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EndPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the end point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RootPointException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the root point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RootPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the root point.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DirectionException">
            <summary>
            Exception is raised if an error is encountered while getting or setting the direction vector.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DirectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting the direction.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetuFormException">
            <summary>
            Exception is raised if an error is encountered while getting the uForm.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetuFormException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the uForm.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetuFormException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the uForm.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetvFormException">
            <summary>
            Exception is raised if an error is encountered while getting the vForm.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetvFormException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the vForm.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetvFormException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the vForm.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddBoundaryException">
            <summary>
            Exception is raised if an error is encountered while adding a boundary to the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddBoundaryException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while adding a boundary to the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while adding a boundary to the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddHoleException">
            <summary>
            Exception is raised if an error is encountered while adding a hole to the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddHoleException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while adding a hole to the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddHoleException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while adding a hole to the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.BoundaryCountException">
            <summary>
            Exception is raised if an error is encountered while getting the boundary count of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BoundaryCountException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the boundary count of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.BoundaryCountException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the boundary count of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NormalException">
            <summary>
            Exception is raised if an error is encountered while getting/setting the normal of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NormalException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting/setting the normal of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NormalException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting/setting the normal of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException">
            <summary>
            Exception is raised if an error is encountered while removing all boundaries of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while removing all boundaries of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while removing all boundaries of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException">
            <summary>
            Exception is raised if an error is encountered while removing a boundary of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while removing a boundary of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while removing a boundary of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ReversedException">
            <summary>
            Exception is raised if an error is encountered while getting the reversed flag of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ReversedException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting the reversed flag of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ReversedException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting the reversed flag of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.UDirectionException">
            <summary>
            Exception is raised if an error is encountered while getting or 
            setting U-direction of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.UDirectionException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting or setting U-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.UDirectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting U-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.VDirectionException">
            <summary>
            Exception is raised if an error is encountered while getting or setting V-direction of the plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.VDirectionException.#ctor(System.String)">
            <summary>
            Instantiates if an error is encountered while getting or setting V-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.VDirectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is encountered while getting or setting V-direction of the plane.
            </summary>
            <param name="strMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetProfilesException">
            <summary>
            Exception raised while getting profiles.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProfilesException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when failed with getting profiles.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointException">
            <summary>
            Exception raised while getting the cardinal point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCardinalPointException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when failed with getting cardinal point.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MathMatrixException">
            <summary>
            Exception raised while instantiating DT4x4.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MathMatrixException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when failed with instantiating DT4x4.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ComputeTransformForProjectionException">
            <summary>
            Exception raised while computing transform for projection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ComputeTransformForProjectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when failed to compute transform for projection.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException">
            <summary>
            Exception raised while creating surfaces from cross section along some given projection path.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSurfacesFromSectionException"/> class with the given error message.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.DefinitionParametersException">
            <summary>
            Exception raised while getting the definition parameters.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.DefinitionParametersException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when failed while getting the definition parameters.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException">
            <summary>
            Exception raised while error in creating by single sweep with cap option on.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered in creating by single sweep with cap option on.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateBySingleSweepWCapsOptsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered in creating by single sweep with cap option on.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetProjectionSurfacesFromCircleException">
            <summary>
            Exception raised while error occurred in getting projection surfaces from circle.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetProjectionSurfacesFromCircleException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered in getting projection surfaces from circle.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException">
            <summary>
            Exception raised while error occurred in getting curve by offset.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered in getting curve by offset.
            </summary>
            <param name="sMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCurveByOffsetException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered in getting curve by offset.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException">
            <summary>
            Exception raised if an error is encountered while trying to get physical axis of the member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get physical axis of the member system.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PhysicalAxisException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get physical axis of the member system.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException">
            <summary>
            Exception raised if an error is encountered while trying to get the distance of the cardinal point from another cardinal point in U-V space at the given optional position.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to get the distance of the cardinal point from another cardinal point in U-V space at the given optional position.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCardinalPointDeltaException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to get the distance of the cardinal point from another cardinal point in U-V space at the given optional position.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetWCGException">
            <summary>
            Exception raised if an error is encountered while trying to set weight and center of gravity.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetWCGException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set weight and center of gravity.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetWCGException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set weight and center of gravity.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PlaceCrossSectionOccurrenceException">
            <summary>
            Exception raised if an error is encountered while trying place cross-section occurrence in model.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PlaceCrossSectionOccurrenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying place cross-section occurrence in model.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PlaceCrossSectionOccurrenceException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying place cross-section occurrence in model.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException">
            <summary>
            Exception raised if an error is encountered while trying to set control flags.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while trying to set control flags.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetControlFlagsException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to set control flags.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ParameterException">
            <summary>
            Exception raised if an error is encountered while determining the U and V parameters.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while determining the U and V parameters.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ParameterException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while determining the U and V parameters.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.PositionException">
            <summary>
            Exception raised if an error is encountered while getting the position.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PositionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while getting the position.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.PositionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while getting the position.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.EvaluateException">
            <summary>
            Exception raised if an error is encountered while evaluating the point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EvaluateException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when an error is encountered while evaluating the point.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.EvaluateException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while evaluating the point.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.StandAloneMemberParentException">
            <summary>
            Exception raised when a stand-alone member part is assigned to a member system.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StandAloneMemberParentException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when a stand-alone member part is assigned to a member system.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.StandAloneMemberParentException.#ctor(System.String)">
            <summary>
            Instantiates when a stand-alone member part is assigned to a member system.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NoIntersectionException">
            <summary>
            Exception raised if there is no intersection point.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NoIntersectionException.#ctor(System.String)">
            <summary>
            Instantiates when there is no intersection point.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStructRootException">
            <summary>
            Exception raised if an error is occurred while getting the catalog Structure root.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStructRootException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates if an error is occurred while getting the catalog Structure root.
            </summary>
            <param name="sMessage">Error message.</param>
            <param name="inner">The COM Exception.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStructRootException.#ctor(System.String)">
            <summary>
            Instantiates if an error is occurred while getting the catalog Structure root.
            </summary>
            <param name="sMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException">
            <summary>
            Exception raised if an error is encountered while trying to disconnect the related objects even if there are no related objects on FC.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.RelatedObjDisconnectionException.#ctor(System.String)">
            <summary>
            Instantiates when an error is encountered while trying to disconnect the related objects even if there are no related objects on FC.
            </summary>
            <param name="strMessage">Error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.NullCrossSectionOccurenceException">
             <summary>
            Exception raised if cross section occurrence object is null.
             </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NullCrossSectionOccurenceException.#ctor(System.String)">
            <summary>
            Instantiates when cross section occurrence object is null.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.NullCrossSectionOccurenceException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiates when cross section occurrence object is null.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SplitTypeException">
             <summary>
            Exception raised when the set method is called on the split type.
             </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SplitTypeException.#ctor(System.String)">
            <summary>
            Instantiates when the set method is called on the split type.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InputObjectsException">
            <summary>
            Exception raised while getting input objects from a split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InputObjectsException.#ctor(System.String)">
            <summary>
            Instantiated while getting input objects from a split connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InputObjectsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated while getting input objects from a split connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException">
            <summary>
            Exception is raised when an error occurred while creating split member connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred while creating split member connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSplitMemberConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred while creating split member connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.AddSplitterException">
            <summary>
            Exception is raised when an error occurred while getting helper object from split member connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSplitterException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred while getting helper object from split member connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.AddSplitterException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred while getting helper object from split member connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ValidateParentsException">
            <summary>
            Exception raised when an error occurred during validation of parent objects.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ValidateParentsException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred during validation of parent objects.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ValidateParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred during validation of parent objects.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetParentsException">
            <summary>
            Exception raised when an error occurred during setting up of parent objects on split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetParentsException.#ctor(System.String)">
            <summary>
            Exception raised when an error occurred during setting up of parent objects on split connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Exception raised when an error occurred during setting up of parent objects on split connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException">
            <summary>
            Exception raised when an error occurred during setting up of SplitStatus on a split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException.#ctor(System.String)">
            <summary>
            Instantiated when an error occurred during setting up of SplitStatus on a split connection.
            </summary>
            <param name="strMessage">Error message.</param>        
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SplitParentStatusException.#ctor(System.String,System.Exception)">
            <summary>
            Instantiated when an error occurred during setting up of SplitStatus on a split connection.
            </summary>
            <param name="strMessage">Error message.</param>
             <param name="inner">The COM Exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException">
            <summary>
            Exception raised when an error occurs while getting split connection parents.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionParentsException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException">
            <summary>
            Exception raised when an error occurs while setting MemberSplitType.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetMemberSplitTypeException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException">
            <summary>
            Exception raised when an error occurs while getting MemberSplitType.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetMemberSplitTypeException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException">
            <summary>
            Exception raised when an error occurs while getting the position of the split connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetSplitConnectionPositionException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException">
            <summary>
            Exception raised when an error occurs while getting the boundary definitions.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">
            <summary>
            Exception raised when an error occurs while creating the sketching plane.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException">
            <summary>
            Exception raised if the member system is not point-on.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MemberNotPointOnException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException">
            <summary>
            Exception raised if the point-on ratio value is less than 0 or greater then 1.0 for this frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException">
            <summary>
            Exception raised if the point-on distance value is less than 0 or greater than the member length for this frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.InvalidPointOnMemberDistanceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException">
            <summary>
            Exception raised when error in getting point-on member end from frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnMemberEndException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException">
            <summary>
            Exception raised when error in setting point-on member end in frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnMemberEndException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException">
            <summary>
            Exception raised when error in getting point-on position rule from frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnPositionRuleException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException">
            <summary>
            Exception raised when error in setting point-on position rule in frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnPositionRuleException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException">
            <summary>
            Exception raised when error in getting point-on ratio value from frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnRatioException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException">
            <summary>
            Exception raised when error in setting point-on ratio value in frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnRatioException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException">
            <summary>
            Exception raised when error in getting point-on distance value from frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException">
            <summary>
            Exception raised when error in setting point-on distance value in frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnDistanceException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException">
            <summary>
            Exception raised when error in getting point-on distance or ratio value from the frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetPointOnDistanceRatioException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException">
            <summary>
            Exception raised when error in getting ToDo record Codelist table name from given business object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetCodeListTableNameException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException">
            <summary>
            Exception raised when an error occurs while setting point-on location on frame connection.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetPointOnLocationException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException">
            <summary>
            Exception raised when an error occurs while getting reference object from proxy object.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetReferenceException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException">
            <summary>
            Exception raised when an error occurs while getting the clip surfaces from planes.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetClipSurfaceFromPlanesException"/> class with the given error message and exception stack.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception stack.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException">
            <summary>
            Exception raised when supported object collection contain points and equipments together.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.MixedTypeSupportedObjectsException"/> class with the given error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part StartXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part StartXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part StartYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part StartYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part StartZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part StartZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part StartXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part StartXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part StartYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part StartYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part StartZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part StartZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetStartZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part EndXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part EndXDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part EndYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part EndYDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException">
            <summary>
            Exception raised when an error occurs while getting the member part EndZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException">
            <summary>
            Exception raised when an error occurs while setting the member part EndZDisplacement.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZDisplacementException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part EndXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part EndXRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndXRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part EndYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part EndYRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndYRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException">
            <summary>
            Exception raised when an error occurs while getting the member part EndZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException">
            <summary>
            Exception raised when an error occurs while setting the member part EndZRotation.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetEndZRotationException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException">
            <summary>
            Exception raised when an error occurs while getting the member part StartMemberRelease.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetStartMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException">
            <summary>
            Exception raised when an error occurs while getting the member part EndMemberRelease.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.GetEndMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException">
            <summary>
            Exception raised when an error occurs while setting the member part release.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.IncorrectMemberReleaseException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException">
            <summary>
            Exception raised when an error occurs while setting the outward normal.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ingr.SP3D.Structure.Exceptions.SetOutwardNormalException"/> class.
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Exceptions.ExceptionHandler">
            <summary>
            Internal class to deligate the COM exception to the Common exception handler.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Exceptions.ExceptionHandler.HandleCOMException(System.Runtime.InteropServices.COMException)">
            <summary>
            Internal method to call common exception handler which will handle all generic the COM exceptions related to db success and BO state.
            This method will thorow the required exception if required.
            </summary>
            <param name="comException">The COM exception.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.FoundationComponent">
            <summary>
            Implementation of FoundationComponents abstract class.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPBO">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.#ctor(Ingr.SP3D.Structure.Middle.Foundation,Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Generic Constructor to create either Footing component or EquipmentFoundation Component based upon the inputs given by the user.
            </summary>
            <param name="oFoundation">Parent System</param>
            <param name="oPart">Part</param>
            <exception cref="T:System.ArgumentNullException">The object is unexpectedly null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Footing/EquipFoundation factory failed to initialize or did not create the object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateEntityException">Failed to create an entity.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.GetStablePlanarPort(System.Object)">
            <summary>
            Method to get the stable port from selected object if applicable.
            </summary>
            <param name="port">Located object as supporting object.</param>
            <returns>Stable port from the located object if gettable inless return the same located object.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.FoundationComponent.GetReferencesCollection(System.Object)">
            <summary>
            Helper method to get the reference collection object from passed in object.
            </summary>
            <param name="inputObject">Input object whose reference collection is needed.</param>
            <returns>Reference collection object.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.Material">
            <summary>
            Gets or sets the material of the component.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetMaterialException">Unexpected failure while getting the material of the component.</exception>
            <exception cref="T:System.NotImplementedException">Setting material is not implemented at this time.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.MaterialStandard">
            <summary>
            Gets or sets the material standard.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.MaterialType">
            <summary>
            Gets or sets the material type.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.MaterialGrade">
            <summary>
            Gets or sets the material grade.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.SystemParent">
            <summary>
            Gets the read-only system parent. System parent cannot be set on the foundation components. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.Volume">
            <summary>
            Gets the volume of the foundation components. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.SurfaceArea">
            <summary>
            Gets the surface area of the foundation components. 
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.SupportingObjects">
            <summary>
            Sets the supporting objects for foundation component.
            </summary>
            <exception cref="T:System.ArgumentNullException">Passed value is null.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.FoundationInvalidSupportingObjectsException">Unexpected failure while setting the supporting objects.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.COMClassString">
            <summary>
            Returns the class string corresponding to the COM class.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.FoundationComponent.Part">
            <summary>
            Gets or sets the definition or smart item object on the smart occurrence.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Footing">
            <summary>
            Implementation for the Footing class. This class is used for supporting a member.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPBO">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Structure.Middle.MemberSystem)">
            <summary>
            Constructor for footing to be created by passing member system and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedMember">Member system for which footing is to be created.</param>
            <example>
            <code>
            ' Get the plant.
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("RectPierAndSlabFtg"), ReferenceData.Middle.Part) 
            'Create SingleType footing for a single member.
            Dim oSingleFtngWithMember As New Footing(oParentSystem, oCatalogPart, oMemberSystem)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d)">
            <summary>
            Constructor for footing to be created by passing a point and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which the footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedPoint">Point where the footing is to be created.</param>
            <example>
            <code>
            ' Get the plant.
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("RectPierAndSlabFtg"), ReferenceData.Middle.Part) 
            'Create single type footing at point. 
            Dim oSupportedPoint As New Point3d(2, 2, 8) 
            Dim oSingleFtngWithPoint As New Footing(oParentSystem, oCatalogPart, oSupportedPoint)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Structure.Middle.MemberSystem,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for footing to be created with a member system as supporting object, catalog part, and a supported object.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedMember">Member system for which a footing is to be created.</param>
            <param name="oSupportingObject">Bottom plane or supporting surface for the footing. </param>
            <example>
            <code>
            ' Get the plant.Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("BoundedRectPierFootingAsm"), ReferenceData.Middle.Part) 
            'Create coordinate system.
            Dim oCoordinateSystem As New CoordinateSystem(oPlant, CoordinateSystem.CoordinateSystemType.Grids) 
            Dim oPosition As New Position(0R, 0R, 0R) 
            oCoordinateSystem.Origin = oPosition
            Dim oGridAxisZ As New GridAxis(oCoordinateSystem, AxisType.Z) 
            Dim oGridElevPlane As New GridElevationPlane(0R, oGridAxisZ)
            'Create single type footing for a single member with supporting plane. 
            Dim oSingleFtngWithMemberAndPlane As New Footing(oParentSystem, oCatalogPart, oMemberSystem, DirectCast(oGridElevPlane, BusinessObject))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.Common.Middle.Point3d,Ingr.SP3D.Common.Middle.BusinessObject)">
            <summary>
            Constructor for footing to be created with a point, supporting object, and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedPoint">Point where the footing is to be created.</param>
            <param name="oSupportingObject">Bottom plane or supporting surface for the footing.</param>
            <example>
            <code>
            ' Get the plant.
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("BoundedRectPierFootingAsm"), ReferenceData.Middle.Part) 
            'Create single type footing for single point with supporting plane. 
            Dim oSupportedPoint As New Point3d(13, 2, 8) 
            'Create coordinate system.
            Dim oCoordinateSystem As New CoordinateSystem(oPlant, CoordinateSystem.CoordinateSystemType.Grids) 
            Dim oPosition As New Position(0R, 0R, 0R) 
            oCoordinateSystem.Origin = oPosition
            Dim oGridAxisZ As New GridAxis(oCoordinateSystem, AxisType.Z) 
            Dim oGridElevPlane As New GridElevationPlane(0R, oGridAxisZ)
            Dim oSingleFtngWithPointAndPlane As New Footing(oParentSystem, oCatalogPart, oSupportedPoint, DirectCast(oGridElevPlane, BusinessObject))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.MemberSystem})">
            <summary>
            Constructor for footing to be created by passing a collection of member systems and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedMemberColl">Collection of member systems for which a footing is to be created.</param>
            <example >
            ' Get the plant. 
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("OctSlab_CombFootingAsm"), ReferenceData.Middle.Part) 
            'Create member collection. 
            Dim oSupportedMemberColl As New Collection(Of MemberSystem)() 
            oSupportedMemberColl.Add(oMemberSystem1) 
            oSupportedMemberColl.Add(oMemberSystem2) 
            'Create combined type footing for multiple members. 
            Dim oCombinedFtngWithMembers As New Footing(oParentSystem, oCatalogPart, oSupportedMemberColl)
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Point3d})">
            <summary>
            Constructor for footing to be created with a collection of points and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedPointColl">Collection of points where footing to be created.</param>
            <example>
            <code>
            ' Get the plant. 
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("OctSlab_CombFootingAsm"), ReferenceData.Middle.Part)
            Dim oSupportedPointColl As New Collection(Of Point3d)() 
            Dim oSupportedPoint1 As New Point3d(-10, 0, 5) 
            Dim oSupportedPoint2 As New Point3d(-13, 0, 5) 
            oSupportedPointColl.Add(oSupportedPoint1) 
            oSupportedPointColl.Add(oSupportedPoint2) 
            Dim oCombinedFtngWithPoints1 As New Footing(oParentSystem, oCatalogPart, oSupportedPointColl)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.MemberSystem},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Constructor for footing to be created with a collection of member system, supporting object, and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedMemberColl">Collection of member systems for which a footing to be created.</param>
            <param name="oSupportingObjectColl">Collection of supporting objects.</param>
            <example>
            <code>
            ' Get the plant. 
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("RectPierAndSlab_CombFootingAsm"), ReferenceData.Middle.Part) 
            'Create member collection.
            Dim oSupportedMemberColl As New Collection(Of MemberSystem)() 
            oSupportedMemberColl.Add(oMemberSystem1) 
            oSupportedMemberColl.Add(oMemberSystem2)
            'Create coordinate system.
            Dim oCoordinateSystem As New CoordinateSystem(oPlant, CoordinateSystem.CoordinateSystemType.Grids) 
            Dim oPosition As New Position(0R, 0R, 0R) 
            oCoordinateSystem.Origin = oPosition
            Dim oGridAxisZ As New GridAxis(oCoordinateSystem, AxisType.Z) 
            Dim oGridElevPlane As New GridElevationPlane(0R, oGridAxisZ)
            Dim oCombinedFtngWithMembersAndPlane As New Footing(oParentSystem, oCatalogPart, oSupportedMemberColl, DirectCast(oGridElevPlane, BusinessObject))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Point3d},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Constructor for a footing to be created with a collection of points, supporting object, and catalog part.
            </summary>
            <param name="oParentSystem">Parent system under which footing needs to be created.</param>
            <param name="oPart">Catalog part.</param>
            <param name="oSupportedPointColl">Collection of points where footing to be created.</param>
            <param name="oSupportingObjectColl">Collection of supporting objects.</param>
            <example>
            <code>
            Dim oPlant As Model = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantModel 
            ' Get the root system object. 
            Dim oRootSystem As ISystem = DirectCast(oPlant.RootSystem, ISystem) 
            Dim oParentSystem As New StructuralSystem(DirectCast(oRootSystem, BusinessObject)) 
            ' Get the catalog connection object. 
            Dim oCatalogConnection As SP3DConnection = Nothing 
            oCatalogConnection = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog 
            Dim oCatStructHelper As New CatalogStructHelper(oCatalogConnection) 
            Dim oCatalogPart As ReferenceData.Middle.Part = DirectCast(oCatStructHelper.GetPart("RectPierAndSlab_CombFootingAsm"), ReferenceData.Middle.Part)
            Dim oSupportedPointColl As New Collection(Of Point3d)() 
            Dim oSupportedPoint1 As New Point3d(-10, 0, 5) 
            Dim oSupportedPoint2 As New Point3d(-13, 0, 5) 
            oSupportedPointColl.Add(oSupportedPoint1) 
            oSupportedPointColl.Add(oSupportedPoint2)
            'Create coordinate system.
            Dim oCoordinateSystem As New CoordinateSystem(oPlant, CoordinateSystem.CoordinateSystemType.Grids) 
            Dim oPosition As New Position(0R, 0R, 0R) 
            oCoordinateSystem.Origin = oPosition
            Dim oGridAxisZ As New GridAxis(oCoordinateSystem, AxisType.Z) 
            Dim oGridElevPlane As New GridElevationPlane(0R, oGridAxisZ)
            Dim oCombinedFtngWithPointsAndPlane As New Footing(oParentSystem, oCatalogPart, oSupportedPointColl, DirectCast(oGridElevPlane, BusinessObject))
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.#ctor(Ingr.SP3D.Structure.Middle.Footing)">
            <summary>
            Copy constructor for footing.
            </summary>
            <param name="oFooting">Footing being copied.</param>
            <example>
            <code>
            Dim oFootingCopy As New Footing(oFooting) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetInputHelper">
            <summary>
            Retrieves the footing input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetSupportElements(System.Object,System.Object)">
            <summary>
            Retrieves the supported and supporting elements for the footing.
            </summary>
            <param name="supportedElements">Instance of footing supported elements.</param>
            <param name="supportingElements">Instance of footing supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.SetSupportElements(System.Object,System.Object)">
            <summary>
            Sets the footing supported and supporting elements.
            </summary>
            <param name="supportedElements">Collection of supported elements.</param>
            <param name="supportingElements">Collection of supporting elements.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetSupportCollection(System.Object)">
            <summary>
            Converts IJElements collections to a BusinessObject collection.
            </summary>
            <param name="elements">Collections of IJElements.</param>
            <returns>Collection of Business Objects.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetInputCriteria">
            <summary>
            Retrieves the footing input helper from COM.
            </summary>
            <returns>Returns the COM input helper.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.ValidateInputObjectType(System.Object)">
            <summary>
            Checks whether the input object passed is valid or not.
            </summary>
            <param name="oSupportedObject">Input support object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.GetValidSupportedObjects(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Gets the valid supported objects.
            </summary>
            <param name="InputSupportedObjects">Collection of valid supported objects.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Footing.ValidateFootingInputs(Ingr.SP3D.ReferenceData.Middle.Part,System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject},System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.BusinessObject})">
            <summary>
            Validate the Footing inputs.
            </summary>
            <param name="oPart">Footing Part.</param>
            <param name="oSupportedObjectColl">Collection of Supported Business Objects.</param>
            <param name="oSupportingObjectColl">Collection of Supporting Business Objects.</param>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.SurfaceType">
            <summary>
            New enumerator for the surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SurfaceType.Plane">
            <summary>
            Plane surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SurfaceType.Cone">
            <summary>
            Cone surface type.
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.SurfaceType.BSpline">
            <summary>
            B-spline surface type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySurface">
            <summary>
            TopologySurface class implements ISurface. Its SurfaceType property helps in explicit cast.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurface.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurface.op_Explicit(Ingr.SP3D.Structure.Middle.TopologySurface)~Ingr.SP3D.Structure.Middle.TopologySurfacePlane">
            <summary>
            Explicit cast operator to be able to cast TopologySurface to TopologySurfacePlane.
            </summary>
            <param name="oTopologySurface">TopologySurface object.</param>
            <returns>Instance of TopologySurfacePlane.</returns>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurface.Type">
            <summary>
            Gets the topology surface type.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.TopologySurfacePlane">
            <summary>
            TopologySurfacePlane transient class definition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.#ctor(Ingr.SP3D.Structure.Middle.TopologySurface)">
            <summary>
            TopologySurfacePlane constructor.
            </summary>
            <param name="oTopologySurface">TopologySurface object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.AddBoundary(Ingr.SP3D.Common.Middle.ComplexString3d)">
            <summary>
            Adds a boundary to the plane.
            </summary>
            <param name="iCS">ComplexString3d object.</param>
            <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddBoundaryException">Unexpected failure while adding boundary to a plane.</exception>
            <example>This is an example of adding a boundary.
            <code>           
            oTopologySurface.AddBoundary(complexString3d) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.AddHole(Ingr.SP3D.Common.Middle.ComplexString3d)">
             <summary>
             Adds a hole to the existing one or more boundaries.
             </summary>
             <param name="iCS">ComplexString3d defining a hole.</param>
             <exception cref="T:System.ArgumentNullException">Exception if arguments are null.</exception>
             <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.AddHoleException">Unexpected failure while adding a hole to a plane.</exception>
             <example>This is an example of adding a hole in the plane.
             <code>
             Dim pos1 As New Position(5R, 5R, 0R) 
             Dim pos2 As New Position(7.5, 5R, 0R) 
             Dim pos3 As New Position(7.5, 7.5, 0R) 
            
             Dim curveCollection As New Collection(Of ICurve)() 
             curveCollection.Add(New Line3d(pos1, pos2)) 
             curveCollection.Add(New Line3d(pos2, pos3)) 
             curveCollection.Add(New Line3d(pos3, pos1)) 
            
             Dim complexString3dHole As New ComplexString3d(curveCollection) 
             oTopologySurface.AddHole(complexString3dHole) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.GetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d}@)">
            <summary>
            Gets all the boundaries.
            </summary>
            <param name="colCS">Collection of ComplexString3d objects.</param>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundariesException">Unexpected failure while getting the boundaries of a plane.</exception>
            <example>This is an example of getting all boundaries.
            <code>
            Dim boundaryCollection As Collection(Of ComplexString3d) 
            oTopologySurface.GetBoundaries(boundaryCollection) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.GetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d@)">
            <summary>
            Gets the boundary at the specified index.
            </summary>
            <param name="i">Returns the boundary at index i.</param>
            <param name="oCS">Output boundary.</param>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryException">Unexpected failure while getting the boundary of a plane.</exception>
            <example>This is an example of getting a boundary at a specified index.
            <code>
            Dim complexString3d As ComplexString3d 
            oTopologySurface.GetBoundary(1, complexString3d) 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.RemoveAllBoundaries">
            <summary>
            Removes all boundaries on the plane.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveAllBoundariesException">Unexpected failure while removing all boundaries of a plane.</exception>
            <example>This is an example of removing all boundaries.
            <code>
            oTopologySurface.RemoveAllBoundaries()
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.RemoveBoundary(System.Int32)">
            <summary>
            Removes the boundary at specified index.
            </summary>
            <param name="i">The index of the boundary to remove.</param>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RemoveBoundaryException">Unexpected failure while removing a boundary of a plane.</exception>
            <example>This is an example of removing a boundary at a specified index.
            <code>
            oTopologySurface.RemoveBoundary(2)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.SetBoundaries(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.ComplexString3d})">
             <summary>
             Sets the boundaries.
             This removes any previous boundaries.
             </summary>
             <param name="colCS">Collection of ComplexString3d objects.</param>
             <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundariesException">Unexpected failure while getting or setting the root point of a plane.</exception>
             <example>This is an example of setting boundaries.
             <code>
             Dim complexString3DCollection As New Collection(Of ComplexString3d)() 
             complexString3DCollection.Add(complexString3d) 
             complexString3DCollection.Add(complexString3dHole) 
            
             oTopologySurface.SetBoundaries(complexString3DCollection) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.SetBoundary(System.Int32,Ingr.SP3D.Common.Middle.ComplexString3d)">
             <summary>
             Sets the boundary at the specified index.
             <para>Note: This method is not adding a boundary, but replacing the boundary which is at index.</para>
             </summary>
             <param name="i">Integer</param>
             <param name="iCS">ComplexString3d object.</param>
             <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.SetBoundaryException">Unexpected failure while setting a boundary of a plane.</exception>
             <example>This is an example of setting a boundary at a specified index.
             <code>
             Dim pos1 As New Position(5R, 5R, 0R) 
             Dim pos2 As New Position(7.5, 5R, 0R) 
             Dim pos3 As New Position(7.5, 7.5, 0R) 
            
             Dim curveCollection As New Collection(Of ICurve)() 
             curveCollection.Add(New Line3d(pos1, pos2)) 
             curveCollection.Add(New Line3d(pos2, pos3)) 
             curveCollection.Add(New Line3d(pos3, pos1)) 
            
             Dim complexString3dHole As New ComplexString3d(curveCollection) 
             oTopologySurface.SetBoundary(1, complexString3dHole) 
             </code>
             </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.BoundaryCount">
            <summary>
            Gets the number of boundaries.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.BoundaryCountException">Unexpected failure while getting the boundary count of a plane.</exception>        
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.Normal">
            <summary>
            Gets or sets the plane normal.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.NormalException">Unexpected failure while getting or setting the normal of a plane.</exception>       
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.Reversed">
            <summary>
            Gets or sets whether reversed.  Geting reverses the V-direction of the plane.
            Normally (Reversed = False) the V-direction is determined by normal X U-direction.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.ReversedException">Unexpected failure while getting or setting the reversed flag of a plane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.RootPoint">
            <summary>
            Gets or sets the root point of the plane.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.RootPointException">Unexpected failure while getting or setting the root point of a plane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.UDirection">
            <summary>
            Gets or sets the plane U-direction.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.UDirectionException">Unexpected failure while getting or setting the U-direction of a plane.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.TopologySurfacePlane.VDirection">
            <summary>
            Gets the V-direction.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Unable to get the COM object.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.VDirectionException">Unexpected failure while getting the V-direction of a plane.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.Slab">
            <summary>
            Slab class definition. This class is used to model solid surfaces in the model.
            It consists of one or multiple layers as defined in the SlabComposition.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Instantiates a Slab object from the database.
            </summary>
            <param name="oPB">PrivateBusinessObject that corresponds to a Slab object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.ReferenceData.Middle.Part,System.Double)">
            <summary>
            Creates a slab.
            </summary>
            <param name="oParentSystem">The parent system.</param>
            <param name="oPlaneDefinition">The supporting plane definition.</param>
            <param name="oSketchPlane">The sketching plane.</param>
            <param name="listoBoundaryDefinition">The list of boundary definition.</param>
            <param name="oSlabType">The slab type part.</param>
            <param name="oSlabComposition">The slab composition part.</param>
            <param name="dThickness">The total thickness of the slab.</param>
            <example>This is an example of Slab constructor.
            <code>
            Dim oSlabType As Part = GetCatalogPart("4"" Cast in Place CIP_4""_Fc3")
            Dim oSlabComposition As Part = GetCatalogPart("CIP_4""_Fc3")
            Dim dThickness As Double = 0.1
            Dim oZPlane_0 As New GridElevationPlane(0, oZAxis)
            Dim oXPlane_65 As New GridPlane(65, oXAxis)
            Dim oPlaneDefinition_coincident As New PlaneDefinition(oZPlane_0)
            Dim ListBoundaryDefinition As New List(Of BoundaryDefinition)()
            'Create a Sketch3d and use that as one of the boundaries.
            Dim oSketchColl As Collection(Of SketchPoint) = New Collection(Of SketchPoint)
            Dim oSketch3d As Sketch3D = New Sketch3D(oPlant)
            Dim oSketchPoint1 As SketchPoint = New SketchPoint(48.0, 50.0, 90.0)
            Dim oSketchPoint2 As SketchPoint = New SketchPoint(72.5, 25.0, 90.0)
            Dim oSketchPoint3 As SketchPoint = New SketchPoint(48.0, 0.0, 90.0)
            oSketchColl_slab10.Clear()
            Dim oEllipseFeature As EllipticalArcFeature = oSketchPoint3.CreateEllipticalArcFeature(oSketchPoint2, oSketchPoint1)
            oSketchColl_slab10.Add(oSketchPoint1)
            oSketchColl_slab10.Add(oSketchPoint2)
            oSketchColl_slab10.Add(oSketchPoint3)
            oSketch3d.SetSketchPoints(oSketchColl_slab10)
            'Create boundary definitions such that they make a closed boundary and add to the ListBoundaryDefinition.
            oBoundaryDefinition1 = New BoundaryDefinition(oMember1.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
            oBoundaryDefinition2 = New BoundaryDefinition(oMember2.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.5)
            oBoundaryDefinition3 = New BoundaryDefinition(oXPlane_65, PortFacePosition.Inner, 0.5)
            oBoundaryDefinition4 = New BoundaryDefinition(oSketch3d, PortFacePosition.Inner, 0.0)
            ListBoundaryDefinition.Clear()
            ListBoundaryDefinition.Add(oBoundaryDefinition1)
            ListBoundaryDefinition.Add(oBoundaryDefinition2)
            ListBoundaryDefinition.Add(oBoundaryDefinition3)
            ListBoundaryDefinition.Add(oBoundaryDefinition4)
            'Here SketchingPlane and RefPlane are same, so used CoincidentPlane. 
            Dim oSlabByCoincPlane As New Slab(oSlabSystem, oPlaneDefinition_coincident, oZPlane_0, ListBoundaryDefinition, oSlabType, oSlabComposition,dThickness)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CreateSlab(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},Ingr.SP3D.ReferenceData.Middle.Part,Ingr.SP3D.ReferenceData.Middle.Part,System.Double)">
            <summary>
            Creates the slab.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="planeDefinition">The plane definition.</param>
            <param name="sketchPlane">The sketch plane.</param>
            <param name="listBoundaryDefinition">The list boundary definition.</param>
            <param name="slabType">Type of the slab.</param>
            <param name="slabComposition">The slab composition.</param>
            <param name="thickness">The thickness.</param>
            <exception cref="T:System.ArgumentNullException">Null objects passed.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Given thickness value is not valid.</exception>    
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create a slab in the slab factory.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">Failed to create the sketching plane from the given plane definition.</exception>    
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},Ingr.SP3D.ReferenceData.Middle.Part,System.Double)">
             <summary>
             Creates a slab.
             </summary>
             <param name="parentSystem">The parent system.</param>
             <param name="planeDefinition">The supporting plane definition.</param>
             <param name="sketchPlane">The sketching plane.</param>
             <param name="boundaryDefinitions">The list of boundary definition.</param>
             <param name="slabPart">The slab type part.</param>
             <param name="thickness">The total thickness of the slab.</param>
             <exception cref="T:System.ArgumentNullException">Null objects passed.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Given thickness value is not valid.</exception>    
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the slab in the slab factory.</exception>
             <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">Failed to create the sketching plane from the given plane definition.</exception>    
             <example>This is an example of Slab constructor.
             <code>
             Dim oCatalog As Catalog
             oCatalog = MiddleServiceProvider.SiteMgr.ActiveSite.ActivePlant.PlantCatalog
            
             Dim oCatalogBaseHelper As New CatalogBaseHelper(oCatalog)
             Dim oSlabPart As Part = DirectCast(oCatalogBaseHelper.GetPart("4"" Cast in Place","CIP_4""_Fc3"), Part)
             Dim dThickness As Double = 0.1
             Dim oZPlane_0 As New GridElevationPlane(0, oZAxis)
             Dim oXPlane_65 As New GridPlane(65, oXAxis)
             Dim oPlaneDefinition_coincident As New PlaneDefinition(oZPlane_0)
             Dim ListBoundaryDefinition As New List(Of BoundaryDefinition)()
             'Create a Sketch3d and use that as one of the boundaries.
             Dim oSketchColl As Collection(Of SketchPoint) = New Collection(Of SketchPoint)
             Dim oSketch3d As Sketch3D = New Sketch3D(oPlant)
             Dim oSketchPoint1 As SketchPoint = New SketchPoint(48.0, 50.0, 90.0)
             Dim oSketchPoint2 As SketchPoint = New SketchPoint(72.5, 25.0, 90.0)
             Dim oSketchPoint3 As SketchPoint = New SketchPoint(48.0, 0.0, 90.0)
             oSketchColl_slab10.Clear()
             Dim oEllipseFeature As EllipticalArcFeature = oSketchPoint3.CreateEllipticalArcFeature(oSketchPoint2, oSketchPoint1)
             oSketchColl_slab10.Add(oSketchPoint1)
             oSketchColl_slab10.Add(oSketchPoint2)
             oSketchColl_slab10.Add(oSketchPoint3)
             oSketch3d.SetSketchPoints(oSketchColl_slab10)
             'Create boundary definitions such that they make a closed boundary and add to the ListBoundaryDefinition.
             oBoundaryDefinition1 = New BoundaryDefinition(oMember1.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
             oBoundaryDefinition2 = New BoundaryDefinition(oMember2.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.5)
             oBoundaryDefinition3 = New BoundaryDefinition(oXPlane_65, PortFacePosition.Inner, 0.5)
             oBoundaryDefinition4 = New BoundaryDefinition(oSketch3d, PortFacePosition.Inner, 0.0)
             ListBoundaryDefinition.Clear()
             ListBoundaryDefinition.Add(oBoundaryDefinition1)
             ListBoundaryDefinition.Add(oBoundaryDefinition2)
             ListBoundaryDefinition.Add(oBoundaryDefinition3)
             ListBoundaryDefinition.Add(oBoundaryDefinition4)
             'Here SketchingPlane and RefPlane are same, so used CoincidentPlane. 
             Dim oSlabByCoincPlane As New Slab(oSlabSystem, oPlaneDefinition_coincident, oZPlane_0, ListBoundaryDefinition, oSlabType, oSlabComposition,dThickness)
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Common.Middle.ISystem,Ingr.SP3D.Common.Middle.PlaneDefinition,Ingr.SP3D.Common.Middle.IPlane,System.Collections.Generic.List{Ingr.SP3D.Structure.Middle.BoundaryDefinition},System.String,System.String,System.Double)">
            <summary>
            Creates a slab.
            </summary>
            <param name="parentSystem">The parent system.</param>
            <param name="planeDefinition">The supporting plane definition.</param>
            <param name="sketchPlane">The sketching plane.</param>
            <param name="boundaryDefinitions">The list of boundary definition.</param>
            <param name="type">The slab type part.</param>
            <param name="composition">The slab composition part.</param>
            <param name="thickness">The total thickness of the slab.</param>
            <exception cref="T:System.ArgumentNullException">Null argument given to the constructor.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.InvalidArgumentException">Invalid argument given to the constructor.</exception>    
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the slab in the slab factory.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.CreateSketchingPlaneException">Failed to create the sketching plane from the given plane definition.</exception>    
            <example>This is an example of Slab constructor.
            <code>
            Dim slabType As String = "4"" Cast in Place"
            Dim slabComposition As String = "CIP_4""_Fc3"
            Dim dThickness As Double = 0.1
            Dim oZPlane_0 As New GridElevationPlane(0, oZAxis)
            Dim oXPlane_65 As New GridPlane(65, oXAxis)
            Dim oPlaneDefinition_coincident As New PlaneDefinition(oZPlane_0)
            Dim ListBoundaryDefinition As New List(Of BoundaryDefinition)()
            'Create a Sketch3d and use that as one of the boundaries.
            Dim oSketchColl As Collection(Of SketchPoint) = New Collection(Of SketchPoint)
            Dim oSketch3d As Sketch3D = New Sketch3D(oPlant)
            Dim oSketchPoint1 As SketchPoint = New SketchPoint(48.0, 50.0, 90.0)
            Dim oSketchPoint2 As SketchPoint = New SketchPoint(72.5, 25.0, 90.0)
            Dim oSketchPoint3 As SketchPoint = New SketchPoint(48.0, 0.0, 90.0)
            oSketchColl_slab10.Clear()
            Dim oEllipseFeature As EllipticalArcFeature = oSketchPoint3.CreateEllipticalArcFeature(oSketchPoint2, oSketchPoint1)
            oSketchColl_slab10.Add(oSketchPoint1)
            oSketchColl_slab10.Add(oSketchPoint2)
            oSketchColl_slab10.Add(oSketchPoint3)
            oSketch3d.SetSketchPoints(oSketchColl_slab10)
            'Create boundary definitions such that they make a closed boundary and add to the ListBoundaryDefinition.
            oBoundaryDefinition1 = New BoundaryDefinition(oMember1.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.0)
            oBoundaryDefinition2 = New BoundaryDefinition(oMember2.GetPart(MemberAxisEnd.[End]), PortFacePosition.Inner, 0.5)
            oBoundaryDefinition3 = New BoundaryDefinition(oXPlane_65, PortFacePosition.Inner, 0.5)
            oBoundaryDefinition4 = New BoundaryDefinition(oSketch3d, PortFacePosition.Inner, 0.0)
            ListBoundaryDefinition.Clear()
            ListBoundaryDefinition.Add(oBoundaryDefinition1)
            ListBoundaryDefinition.Add(oBoundaryDefinition2)
            ListBoundaryDefinition.Add(oBoundaryDefinition3)
            ListBoundaryDefinition.Add(oBoundaryDefinition4)
            'Here SketchingPlane and RefPlane are same, so used CoincidentPlane. 
            Dim oSlabByCoincPlane As New Slab(oSlabSystem, oPlaneDefinition_coincident, oZPlane_0, ListBoundaryDefinition, slabType, slabComposition,dThickness)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.#ctor(Ingr.SP3D.Structure.Middle.Slab)">
            <summary>
            Copy constructor for slab.
            </summary>
            <param name="slab">Slab object.</param>
            <exception cref="T:System.ArgumentNullException">Null argument given to the constructor.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureDBConnectionException">Database connection cannot be obtained from the given parent system.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.StructureFactoryFailedException">Failed to create the slab in the slab factory.</exception>
            <example>This is an example of the slab constructor.
            <code>
            Dim oSlab_Copy As New Slab(oSlab)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPlaneDefinitionFromStructPlane3D(Ingr.SP3D.Interop.StructPlane.StructPlane3D)">
            <summary>
            Helper Method to create a PlaneDefinition from a StructPlane3D
            </summary>
            <param name="oPlane">The StructPlane3D</param>
            <returns>Returns the PlaneDefinition class</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.LayerCount(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Gets the layer count from Composition
            </summary>
            <param name="oComposition">The composition from the catalog</param>
            <returns>The layer count</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.LayerInfo(Ingr.SP3D.ReferenceData.Middle.Part,System.Int32,System.String@,System.String@)">
            <summary>
            Gets the informotations from Layer
            </summary>
            <param name="oComposition">The composition from the catalog</param>
            <param name="layerIndex">The index of the layer</param>
            <param name="LayerPartNumber">It will contain the part number</param>
            <param name="LayerType">It will contain the layer part type</param>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Slab.PartNumbersColl">
            <summary>
            Private collection which will contain all the Layer PartNumbers for the given composition
            </summary>
        </member>
        <member name="F:Ingr.SP3D.Structure.Middle.Slab.PartTypesColl">
            <summary>
            Private collection which will contain all the Layer PartTypes for the given composition
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.FillLayerPartInfo(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Fill layer info from composition
            </summary>
            <param name="oComposition">The composition from the catalog</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetCatalogPart(System.String)">
            <summary>
            Get the catalog part from partNumber string
            </summary>
            <param name="oPartNumber">The part number string</param>
            <returns>The Part</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.SetLayerPartOccurrence(Ingr.SP3D.Interop.SPSSlabs.SPSSlabLayer,System.String)">
            <summary>
            Set slab layer for the part occurrence.
            </summary>
            <param name="oSlabLayer">SlabLayer</param>
            <param name="sLayerPartNumber">SlabLayer Part Number</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CopyAttributesToOccurrence(System.Object,System.Object)">
            <summary>
            Copy the default part attibutes to the occurrence attributes.
            </summary>
            <param name="oPart">Slab layer part.</param>
            <param name="oOccurrence">Occurrence object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CopyAttributesFromSubInterfaceName(System.Object,System.Object)">
            <summary>
            Copy the SubInterfaceName attributes to the occurrence attributes.
            </summary>
            <param name="oPart">Slab layer part.</param>
            <param name="oOccurrence">Occurrence object.</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetLayerAttributeFromPartNumber(System.String,System.Int32,System.String@,System.Object@)">
            <summary>
            Gets the layer attributes from the part specified with partNumber string 
            </summary>
            <param name="LayerPartNumber">The part number </param>
            <param name="attributeIndex">The attribute index</param>
            <param name="AttributeName">Will contain the attribute name</param>
            <param name="AttributeValue">Will contain the atribute value</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetMaterialFromPartNumber(System.String,System.String@,System.String@)">
            <summary>
            Gets material and grade from part number string
            </summary>
            <param name="LayerPartNumber">The part number </param>
            <param name="oMaterial">It will contain the material</param>
            <param name="oGrade">It will contain the grade</param>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetLayerIJDPartFromPartNumber(System.String)">
            <summary>
            Gets the IJDPart from part number string
            </summary>
            <param name="LayerPartNumber">part number string</param>
            <returns></returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetTotalThicknessFromComposition">
            <summary>
            Returns the total thickness from the composition (uses the strings from PartNumber collection )
            </summary>
            <returns>The total thickness</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.CreateSlabLayers(Ingr.SP3D.ReferenceData.Middle.Part)">
            <summary>
            Internal function to create and set the Layers and all the belonging elements (material, layer type, thickness)
            </summary>
            <param name="oComposition">The catalog composition</param>
            <returns>Returns an IJElements to be used in the Set Layer property of the SPSSlabEntity</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.FromSOMtoCOMFacePosition(Ingr.SP3D.Structure.Middle.FacePosition)">
            <summary>
            Gets the integer equivalent from .NET FacePosition to COM SlabFacePosition.
            </summary>
            <param name="facePosition">FacePosition enum.</param>
            <returns>SlabFacePosition integer equivalent.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.FromCOMtoSOMFacePosition(Ingr.SP3D.Interop.SPSSlabs.SlabFacePosition)">
            <summary>
            Gets the integer equivalent from COM SlabFacePosition to .NET FacePosition.
            </summary>
            <param name="facePosition">SlabFacePosition enum.</param>
            <returns>FacePosition integer equivalent.</returns>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryStage)">
             <summary>
             Gets ports in the graph of the object for a specific port geometry type (i.e. End) at a given geometry stage (i.e. Current).
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eGeometryStage">Enumerator for geometry stage.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryStage As GeometryStage = GeometryStage.Current 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oSlab.GetPorts(eFace, eGeometryStage) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
             <summary>
             Gets ports in the graph of the object for a specific port geometry type (i.e., End) with a given operation (i.e., Split); 
             and either before or after the operation.
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eGeometryOperation">Enumerator for geometry operation.</param>
             <param name="eGraphPosition">Enumerator for graph position.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryOperation As GeometryOperationTypes = GeometryOperationTypes.Cutout 
             Dim eGraphPosition As GraphPosition = GraphPosition.After       
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oSlab.GetPorts(eFace, eGeometryOperation, eGraphPosition) 
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryStage)">
             <summary>
             Gets ports in the graph of the object for a specific topology context (i.e. Lateral Face) at a given geometry stage (i.e. Current).
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eTopologyContext">Enumerator for topology context.</param>
             <param name="eGeometryStage">Enumerator for geometry stage.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryStage As GeometryStage = GeometryStage.Current      
             Dim eTopologyContext As ContextTypes = ContextTypes.Base 
            
             Dim topologyPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             topologyPortCollection = oSlab.GetPorts(eFace, eTopologyContext, eGeometryStage)                
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPorts(Ingr.SP3D.Structure.Middle.TopologyGeometryType,Ingr.SP3D.Structure.Middle.ContextTypes,Ingr.SP3D.Structure.Middle.GeometryOperationTypes,Ingr.SP3D.Structure.Middle.GraphPosition)">
             <summary>
             Gets ports in the graph of the object for a specific topology context (i.e., Lateral Face),
             with a given operation (i.e., Split); and either before or after the operation.
             </summary>
             <param name="ePortType">Enumerator for port geometry type.</param>
             <param name="eTopologyContext">Enumerator for topology context.</param>
             <param name="eGeometryOperation">Enumerator for geometry operation.</param>
             <param name="eGraphPosition">Enumerator for graph position.</param>
             <returns>TopologyPort ReadOnlyCollection objects.</returns>
             <example>GetPorts example code.
             <code>
             Dim eFace As TopologyGeometryType = TopologyGeometryType.Face        
             Dim eGeometryOperation As GeometryOperationTypes = GeometryOperationTypes.Cutout 
             Dim eGraphPosition As GraphPosition = GraphPosition.After     
             Dim eTopologyContext As ContextTypes = ContextTypes.Base 
            
             Dim structPortCollection As ReadOnlyCollection(Of TopologyPort) = Nothing 
             structPortCollection = oSlab.GetPorts(eFace, eTopologyContext, eGeometryOperation, eGraphPosition)                
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.GetPort(Ingr.SP3D.Structure.Middle.TopologyGeometryType,System.Int32,System.Int32,Ingr.SP3D.Structure.Middle.ContextTypes,System.Int32)">
             <summary>
             Gets an existing port or a late binding port on the given entity with the given topological proxy and port moniker data. 
             Use this method to get a port whose geometry will be created by a later operation but the port is needed to hook-up a connection. 
             Typical use is in creation of a physical connection whose port geometry will be provided by an end cut operation.
             </summary>
             <param name="eGeometryType">Topology geometry type.</param>
             <param name="operationId">Operation ID which will create the port.</param>
             <param name="operatorId">Operator ID.</param>
             <param name="eContext">Context imprinted on the port.</param>
             <param name="iSectionFaceType">Section face type or cross section ID imprinted on the port.</param>
             <returns>TopologyPort created by the given moniker data.</returns>
             <example>GetPort example code.
             <code>
             Dim proxyType As TopologyGeometryType = TopologyGeometryType.Face 
             Dim operationId As Integer = 0 
             Dim operatorId As Integer = 0 
             Dim context As ContextTypes = ContextTypes.Base 
             Dim crossSectionId As Integer = -1 
            
             Dim port As TopologyPort = oSlab.GetPort(proxyType, operationId, operatorId, context, crossSectionId)              
             </code>
             </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.AddAssemblyChild(Ingr.SP3D.Common.Middle.IAssemblyChild)">
            <summary>
            Adds another assembly child to the slab.
            </summary>
            <param name="oChild">AssemblyChild interface.</param>
            <exception cref="T:System.ArgumentNullException">Null argument passed.</exception>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.Transform(Ingr.SP3D.Common.Middle.Matrix4X4)">
            <summary>
            Transforms the slab.
            </summary>
            <param name="oT4X4">Transformation matrix.</param>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnInvalidArgumentException">Null imput argument.</exception>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.TransformException">Unexpected failure.</exception>
            <example>This is an example of the Transform method.
            <code>
            Dim oMatrix As New Matrix4X4()
            oMatrix.SetIndexValue(12, 10)
            'Translate by 10m.
            oSlab.Transform(oMatrix)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Structure.Middle.AmbiguousPatch})">
            <summary>
            Returns true if the ambiguity is resolved with the given solutions.
            </summary>
            <param name="SolutionsToKeep">Collection of AmbiguousPatch objects.</param>
            <returns>Boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oAmbiguousList As New List(Of AmbiguousPatch)()
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            oAmbiguousList.Add(oSolutions(1))
            oAmbiguousList.Add(oSolutions(2))
            oAmbiguousList.Add(oSolutions(3))
            Dim oSolutionsToKeep As New Collection(Of AmbiguousPatch)(oAmbiguousList)
            bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionsToKeep)
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(System.Collections.ObjectModel.Collection{Ingr.SP3D.Common.Middle.Position})">
            <summary>
            Returns true if the ambiguity is resolved with the given solutions. 
            </summary>
            <param name="SolutionsToKeep">Collection of Point3d objects.</param>
            <returns>Boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            Dim midPos As Position = Nothing
            Dim midPos1 As Position = Nothing
            Dim midPos2 As Position = Nothing
            Dim oSolutionsToKeep As New Collection(Of Position)()
            
            'Choose the solution and get its range. 
            If oSolutions.Count > 0 Then 
                Dim range As RangeBox = solutions(1).Range 
                Dim high As Position = range.High 
                Dim low As Position = range.Low 
            
                Dim range1 As RangeBox = solutions(2).Range 
                Dim high1 As Position = range1.High 
                Dim low1 As Position = range1.Low 
            
                Dim range2 As RangeBox = solutions(3).Range 
                Dim high2 As Position = range2.High 
                Dim low2 As Position = range2.Low 
            
                'Create a position at the mid point of the high and low range for the solutions to keep. 
                midPos = New Position((high.X + low.X) / 2, (high.Y + low.Y) / 2, (high.Z + low.Z) / 2)
                midPos1 = New Position((high1.X + low1.X) / 2, (high1.Y + low1.Y) / 2, (high1.Z + low1.Z) / 2)
                midPos2 = New Position((high2.X + low2.X) / 2, (high2.Y + low2.Y) / 2, (high2.Z + low2.Z) / 2)
                oSolutionsToKeep.Add(midPos)
                oSolutionsToKeep.Add(midPos1) 
                oSolutionsToKeep.Add(midPos2) 
                bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionsToKeep)
            End If 
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(Ingr.SP3D.Structure.Middle.AmbiguousPatch)">
            <summary>
            Returns true if the ambiguity is resolved with the given solution.
            </summary>
            <param name="SolutionToKeep">AmbiguousPatch object to keep.</param>
            <returns>boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oSolutionToKeep As AmbiguousPatch = Nothing
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            If oSolutions.Count > 0 Then 
                oSolutionToKeep = oSolutions(0) 
                bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionToKeep)
            End If
            </code>
            </example>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.Slab.ResolveAmbiguity(Ingr.SP3D.Common.Middle.Position)">
            <summary>
            Returns true if the ambiguity is resolved with the given solutions. 
            </summary>
            <param name="SolutionToKeep">Point3d from the solution to keep.</param>
            <returns>boolean</returns>
            <example>This is an example of the ResolveAmbiguity method. 
            <code>
            Dim bResolveAmbiguity As Boolean = False
            Dim oSolutionToKeep As Position = Nothing
            Dim oRangeBox As RangeBox = Nothing
            Dim oHighPosition As Position = Nothing
            Dim oLowPosition As Position = Nothing
            Dim oSolutions As ReadOnlyCollection(Of AmbiguousPatch) = oSlab.AmbiguousPatches
            If oSolutions.Count > 0 Then 
                oRangeBox = oSolutions(0).Range
                oHighPosition = oRangeBox.High 
                oLowPosition = oRangeBox.Low
                oSolutionToKeep = New Position((oHighPosition.X + oLowPosition.X) / 2, (oHighPosition.Y + oLowPosition.Y) / 2, (oHighPosition.Z + oLowPosition.Z) / 2)
                bResolveAmbiguity = oSlab.ResolveAmbiguity(oSolutionToKeep)
            End If
            </code>
            </example>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Type">
            <summary>
            Gets or sets the part type of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Composition">
            <summary>
            Gets or sets the slab composition.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.SketchPlane">
            <summary>
            Gets or sets the sketching plane information of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.SupportInfo">
            <summary>
            Gets or sets the support information of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.BoundaryDefinitions">
            <summary>
            Gets or sets the boundary information of the slab.
            </summary>
            <value>The boundary definitions.</value>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.GetBoundaryDefinitionsException">Exception while getting the boundaries.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.FacePosition">
            <summary>
            Gets or sets the face position of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Layers">
            <summary>
            Gets the read-only collection of layers of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.ReferenceLayer">
            <summary>
            Gets the reference layer of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TotalVolume">
            <summary>
            Gets the total volume of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.NetVolume">
            <summary>
            Gets the net volume of the slab (excluding the volume of the holes).
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TotalSurface">
            <summary>
            Gets the total surface of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.NetSurface">
            <summary>
            Gets the net surface of the slab (excluding the surface of the holes).
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TotalProjectedArea">
            <summary>
            Gets the total projected area of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.NetProjectedArea">
            <summary>
            Gets the net projected area of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Angle">
            <summary>
            Gets the angle of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Slope">
            <summary>
            Gets the slope of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.LowestElevationPoint">
            <summary>
            Gets the lowest elevation point of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.HighestElevationPoint">
            <summary>
            Gets the highest elevation point of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.BottomOfConcrete">
            <summary>
            Gets the bottom of the concrete of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.TopOfConcrete">
            <summary>
            Gets the top of the concrete of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AssemblyConnections">
            <summary>
            Gets all the assembly connections that are connected to the plate part.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.Thickness">
            <summary>
            Gets or sets the total thickness of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.WBSItemParents">
            <summary>
            Gets the WBSItem parents for this item.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.GeometryOperations">
            <summary>
            Gets geometry operations currently in the graph of the entity geometry. Order of collection is not guaranteed to match the exact order of the graph.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AssemblyChildren">
            <summary>
            Gets the read-only collection of assembly children of the parent object. An empty list is returned if there are
            no children for the parent object.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AssemblyParent">
            <summary>
            Gets or sets the assembly parent of the slab.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.ContinuityType">
            <summary>
            Gets or sets the continuity type of the slab.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.PriorityNumber">
            <summary>
            Gets or sets the priority number of the slab.
            </summary>
            <exception cref="T:Ingr.SP3D.Common.Exceptions.CmnComObjectNullException">The pointer is null.</exception>
            <exception cref="T:Ingr.SP3D.Common.Middle.CmnException">An unknown exception has occurred.</exception>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.AmbiguousPatches">
            <summary>
            Gets a read-only collection of AmbiguousPatch objects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.UnusedBoundaries">
            <summary>
            Gets a read-only collection of AmbiguousPatch objects.
            </summary>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.Slab.IsAmbiguous">
            <summary>
            Gets whether or not ambiguous. Returns True if the solution is ambiguous.
            </summary>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberSystemAxisPort">
            <summary>
            Wrapper for member system axis end port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberSystemAxisPort.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberSystemAxisPort.AxisPortType">
            <summary>
            Returns the port index; for example, along, start, or end of the system port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">Unexpected error while retrieving the port index.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.MemberPartAxisPort">
            <summary>
            Wrapper for member split axis along and end port.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.MemberPartAxisPort.#ctor(Ingr.SP3D.Common.Middle.PrivateBusinessObject)">
            <summary>
            Constructor for .NET to access this class.
            </summary>
            <param name="oPB">Private Business object</param>
        </member>
        <member name="P:Ingr.SP3D.Structure.Middle.MemberPartAxisPort.AxisPortType">
            <summary>
            Returns the port index; for example, along, start, or end of the part port.
            </summary>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">Unexpected error while retrieving the port index.</exception>
        </member>
        <member name="T:Ingr.SP3D.Structure.Middle.StructPortHelper">
            <summary>
            Class to define all helper methods for StructPorts.
            </summary>
        </member>
        <member name="M:Ingr.SP3D.Structure.Middle.StructPortHelper.COMAxisPortIndexToDotNetAxisPortType(Ingr.SP3D.SPSMembers.SPSMemberAxisPortIndex)">
            <summary>
            Returns the mapping of the COM port index enumeration to .NET Axis Port Type enumeration.  For example, Along, Start, or End.
            </summary>
            <param name="memberAxisPortIndex">The COM port index.</param>
            <returns>Returns MemberAxisPortType.</returns>
            <exception cref="T:Ingr.SP3D.Structure.Exceptions.PortIndexException">Failed to retrieve the PortIndex.  PortIndex type not found.</exception>
            <example>Example on how to call COMAxisPortIndexToDotNetAxisPortType method.
            <code>
            Dim axisEndPort As ISPSAxisEndPort = DirectCast(COMBO, ISPSAxisEndPort) 
            Dim memberAxisPortIndex As SPSMemberAxisPortIndex = axisEndPort.PortIndex
            Dim returnAxisPortType As MemberAxisPortType = StructPortHelper.COMAxisPortIndexToDotNetAxisPortType(memberAxisPortIndex)
            
            'PortIndex is also in the COM interface ISPSSplitAxisPort.  This interface should be used casting the COMBO as 
            'illustraded above instead of ISPSAxisEndPort if the port type is along (centerline). 
            </code>
            </example>
        </member>
    </members>
</doc>
