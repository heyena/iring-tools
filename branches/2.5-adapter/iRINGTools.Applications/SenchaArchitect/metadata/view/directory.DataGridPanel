{
    "type": "Ext.grid.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "height": null,
        "width": null,
        "designer|userClassName": "directory.DataGridPanel",
        "designer|userAlias": "dynamicgrid",
        "requires": [
            "AM.store.DataGridStore"
        ],
        "uses": [
            "Ext.ux.grid.FiltersFeature"
        ],
        "closable": true,
        "title": null,
        "store": "DataGridStore"
    },
    "designerId": "fa0cc7c0-9539-4b11-858b-bfefff02b36c",
    "cn": [
        {
            "type": "Ext.grid.column.Column",
            "reference": {
                "name": "columns",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dataIndex": "string",
                "text": null
            },
            "designerId": "18a99a4a-040f-42f5-b1e3-26a1e7819a16"
        },
        {
            "type": "Ext.grid.View",
            "reference": {
                "name": "viewConfig",
                "type": "object"
            },
            "codeClass": null,
            "designerId": "596aa836-aad9-42c4-a4d8-55246c96a13b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "handleBeforeLoad",
                "designer|params": [
                    "store",
                    "operation",
                    "e"
                ],
                "implHandler": [
                    "var me = this;\r",
                    "\r",
                    "store.on({\r",
                    "  metachange: {\r",
                    "    fn: function(store, meta, e) {\r",
                    "      me.handleMetaChange(me, meta);\r",
                    "    }, \r",
                    "    scope: me, \r",
                    "    single: true\r",
                    "  }\r",
                    "});"
                ]
            },
            "designerId": "7a48505f-201f-4810-b270-184458bd8b4a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "handleMetaChange",
                "designer|params": [
                    "grid",
                    "meta"
                ],
                "implHandler": [
                    "grid.reconfigure(grid.getStore(), meta.columns);"
                ]
            },
            "designerId": "cc4b43e0-5a5e-49b9-8739-8354235b610d"
        },
        {
            "type": "processcfgfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "processDataGridPanel",
                "designer|params": [
                    "config"
                ],
                "implHandler": [
                    "var me = this,\r",
                    "  storeId = Ext.data.IdGenerator.get(\"uuid\").generate();\r",
                    "\r",
                    "config.store = Ext.create('AM.store.DataGridStore', {\r",
                    "  storeId: \"DataGrid\" + storeId,\r",
                    "  listeners: {\r",
                    "    beforeload: {\r",
                    "      fn: me.handleBeforeLoad,\r",
                    "      scope: me\r",
                    "    }\r",
                    "  }\r",
                    "});\r",
                    "\r",
                    "config.dockedItems = [\r",
                    "{\r",
                    "  xtype: 'pagingtoolbar',\r",
                    "  dock: 'bottom',\r",
                    "  displayInfo: true,\r",
                    "  store: config.store,\r",
                    "  plugins: [Ext.create('Ext.ux.plugin.GridPageSizer', { options: [25, 50, 100, 200] })]\r",
                    "}];\r",
                    "\r",
                    "var filters = {\r",
                    "  ftype: 'filters',\r",
                    "  local: false,\r",
                    "  buildQuery: function (filters) {\r",
                    "    var processed_filters = [];\r",
                    "\r",
                    "    for (var i = 0; i < filters.length; i++) {\r",
                    "      var pf = {};\r",
                    "      var filter = filters[i];\r",
                    "      pf.field = filter.field;\r",
                    "\r",
                    "      if (filter.data.type == 'numeric') {\r",
                    "        pf.comparison = filter.data.comparison;\r",
                    "        pf.value = filter.data.value;\r",
                    "        pf.type = filter.data.type;\r",
                    "      }\r",
                    "      else {\r",
                    "        for (var key in filter.data) {\r",
                    "          pf[key] = filter.data[key];\r",
                    "        }\r",
                    "        pf.comparison = 'eq';\r",
                    "      }\r",
                    "\r",
                    "      processed_filters.push(pf);\r",
                    "\r",
                    "    }\r",
                    "    return { filter: Ext.encode(processed_filters) };\r",
                    "  }\r",
                    "};\r",
                    "\r",
                    "config.iconCls = 'tabsData';\r",
                    "config.features = [filters];\r",
                    "return config;"
                ]
            },
            "designerId": "0cdcb92f-49da-47cc-b2f3-2ea0cfc734d9"
        }
    ]
}