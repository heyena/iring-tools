/*
 * File: Scripts/AM/view/nhibernate/MultiSelect.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.nhibernate.MultiSelect', {
  extend: 'Ext.panel.Panel',
  alias: 'widget.multiselect',

  requires: [
    'AM.view.MultiSelectFieldSet'
  ],

  layout: {
    align: 'stretch',
    type: 'hbox'
  },
  bodyPadding: 3,

  initComponent: function() {
    var me = this;

    Ext.applyIf(me, {
      items: [
        {
          xtype: 'multiselectfieldset',
          action: 'fromview',
          title: 'From Fields',
          flex: 1
        },
        {
          xtype: 'container',
          padding: 5,
          layout: {
            align: 'stretch',
            defaultMargins: 2,
            type: 'vbox'
          },
          items: [
            {
              xtype: 'container',
              flex: 3
            },
            {
              xtype: 'button',
              itemId: 'moveright',
              iconCls: 'am-right',
              listeners: {
                click: {
                  fn: me.onMoverightClick,
                  scope: me
                }
              }
            },
            {
              xtype: 'button',
              itemId: 'moveleft',
              iconCls: 'am-left',
              listeners: {
                click: {
                  fn: me.onMoveleftClick,
                  scope: me
                }
              }
            },
            {
              xtype: 'container',
              flex: 3
            }
          ]
        },
        {
          xtype: 'multiselectfieldset',
          action: 'toview',
          title: 'To Fields',
          flex: 1
        }
      ]
    });

    me.callParent(arguments);
  },

  onMoverightClick: function(button, e, options) {
    var me = this;
    var panel = button.up('multiselect');
    var fromSet = panel.down('multiselectfieldset[action=fromview]');
    var toSet = panel.down('multiselectfieldset[action=toview]');
    var fromView = fromSet.down('view');
    var toView = toSet.down('view');
    var selected = fromView.getSelectionModel().getSelection();
    Ext.each(selected, function(record) {
      me.moveRecord(fromView.getStore(), toView.getStore(), record);
    }, me);
  },

  onMoveleftClick: function(button, e, options) {
    var me = this;
    var panel = button.up('multiselect');
    var fromSet = panel.down('multiselectfieldset[action=fromview]');
    var toSet = panel.down('multiselectfieldset[action=toview]');
    var fromView = fromSet.down('view');
    var toView = toSet.down('view');
    var selected = fromView.getSelectionModel().getSelection();
    Ext.each(selected, function(record) {
      me.moveRecord(toView.getStore(), fromView.getStore(), record);
    }, me);
  },

  moveRecord: function(fromStore, toStore, value) {
    var me = this;
    fromStore.remove(value);
    toStore.add(value);
  },

  loadRecords: function(records) {
    var me = this;
    var fromSet = panel.down('multiselectfieldset[action=fromview]');
    var fromView = fromSet.down('view');
    var store = fromView.getStore();
    Ext.each(records, function(record) {
      store.add(record);
    }, me);

  },

  setSelectedRecords: function(records) {
    var me = this;

    var fromSet = me.down('multiselectfieldset[action=fromview]');
    var toSet = me.down('multiselectfieldset[action=toview]');
    var fromView = fromSet.down('view');
    var toView = toSet.down('view');

    Ext.each(selected, function(record) {
      me.moveRecord(toView.getStore(), fromView.getStore(), record);
    }, me);
  }

});