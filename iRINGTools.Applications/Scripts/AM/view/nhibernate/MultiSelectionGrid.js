/*
 * File: Scripts/AM/view/nhibernate/MultiSelectionGrid.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.nhibernate.MultiSelectionGrid', {
  extend: 'Ext.grid.Panel',
  alias: 'widget.multiselectiongrid',

  frameHeader: false,
  header: false,
  enableColumnHide: false,
  enableColumnMove: false,
  enableColumnResize: false,
  sortableColumns: false,
  store: 'MultiStore',

  initComponent: function() {
    var me = this;

    Ext.applyIf(me, {
      columns: [
        {
          xtype: 'gridcolumn',
          draggable: false,
          sortable: false,
          dataIndex: 'DisplayField',
          flex: 1,
          menuText: false
        }
      ],
      viewConfig: {

      },
      selModel: Ext.create('Ext.selection.CheckboxModel', {

      }),
      listeners: {
        select: {
          fn: me.onGridpanelSelect,
          scope: me
        }
      }
    });

    me.callParent(arguments);
  },

  onGridpanelSelect: function(selModel, record, index, options) {
    //alert('Selection Changed');
  },

  loadItems: function(items) {
    var me = this;
    var store = me.getStore();
    store.removeAll();
    var records = [];

    Ext.each(items, function(item) {
      records.push({'DisplayField': item});
    });

    store.add(records);
  },

  selectItems: function(items) {
    var me = this;
    var vw = me.view;
    var selectionModel = me.getSelectionModel();
    var store = me.getStore();
    //selctionModel.views.add(vw);
    //selectionModel.store = store;
    Ext.each(items, function(item) {
      var record = store.findRecord('DisplayField', item);
      if(record) {
        selectionModel.select(record, false, true); 
      }           
    });


  },

  getSelectedItems: function() {
    var me = this;
    var store = me.getStore();
    var selectionModel = me.getSelectionModel();
    var items = [];

    Ext.each(selectionModel.getSelection(), function(record) {
      items.push(record.get('DisplayField'));
    });

  }

});