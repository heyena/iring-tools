{
    "type": "Ext.form.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "rootNode": "",
        "endpoint": "",
        "contextName": "",
        "node": "",
        "height": null,
        "id": null,
        "width": null,
        "designer|userClassName": "nhibernate.SetRelationForm",
        "designer|userAlias": "setrelationform",
        "bodyPadding": null,
        "bodyStyle": [
            "background:#eee;padding:10 0 0 10"
        ],
        "title": null
    },
    "designerId": "ef191768-2bd4-46be-864b-6386fbb488a5",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "rootNode",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "endpoint",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "contextName",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "node",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "Ext.form.Label",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "cls": "x-form-item",
                "height": 14,
                "margin": "5 0 0 10",
                "style": [
                    "font-weight:bold;"
                ],
                "text": "Configure Relationship"
            },
            "designerId": "528dde09-4029-4027-87d5-0d7ce455debe"
        },
        {
            "type": "Ext.form.field.Text",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|anchor": "100%",
                "disabled": null,
                "margin": "5 0 0 10",
                "fieldLabel": "Relationship Name",
                "labelWidth": 160,
                "name": "relationshipName",
                "readOnly": true,
                "allowBlank": false
            },
            "designerId": "122595ff-0943-4dc6-a9a5-31b91573fbec"
        },
        {
            "type": "Ext.form.field.Text",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|anchor": "100%",
                "disabled": null,
                "margin": "5 0 0 10",
                "fieldLabel": "Object Name",
                "labelWidth": 160,
                "name": "objectName",
                "readOnly": true,
                "allowBlank": false
            },
            "designerId": "0acef42a-c096-48c2-9bef-6bbb9a33a25e"
        },
        {
            "type": "Ext.form.field.ComboBox",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|anchor": "100%",
                "itemId": "relatedObjectCmb",
                "margin": "5 0 0 10",
                "fieldLabel": "Related Object Name",
                "labelWidth": 160,
                "name": "relatedObjectName",
                "selectOnFocus": true,
                "queryMode": "local",
                "store": null,
                "valueField": "value"
            },
            "configAlternates": {
                "store": "array"
            },
            "designerId": "7653805a-1914-4c72-b309-f4128eee9c5a",
            "cn": [
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onRelatedObjectSelect",
                        "implHandler": [
                            "var me = this;\r",
                            "var form = combo.up('setrelationform');\r",
                            "var rootNode = form.rootNode;\r",
                            "var relatedObjectName = records[0].data.text;\r",
                            "\r",
                            "if (relatedObjectName !== '') {\r",
                            "  var relatedDataObjectNode = rootNode.findChild('text', relatedObjectName);\r",
                            "  var relationConfigPanel = form.getForm();\r",
                            "  var mappingProperties = [];\r",
                            "\r",
                            "  if (relatedDataObjectNode.childNodes[1]) {\r",
                            "    keysNode = relatedDataObjectNode.childNodes[0];\r",
                            "    propertiesNode = relatedDataObjectNode.childNodes[1];\r",
                            "    var ii = 0;\r",
                            "\r",
                            "    keysNode.eachChild(function(child) {\r",
                            "      mappingProperties.push([ii, child.data.text, child.data.property.columnName]);\r",
                            "      ii++;\r",
                            "    });\r",
                            "\r",
                            "    propertiesNode.eachChild(function(child) {\r",
                            "      mappingProperties.push([ii, child.data.text, child.data.property.columnName]);\r",
                            "      ii++;\r",
                            "    });\r",
                            "  }\r",
                            "\r",
                            "  var mapCombo = form.down('#mapPropertyNameCmb');\r",
                            "  var myStore = Ext.create('Ext.data.SimpleStore', {\r",
                            "    fields: ['value', 'text', 'name'],\r",
                            "    autoLoad: true,\r",
                            "    data: mappingProperties\r",
                            "  });\r",
                            "  mapCombo.bindStore(myStore);\r",
                            "  /* mapCombo.store = Ext.create('Ext.data.SimpleStore', {\r",
                            "  fields: ['value', 'text', 'name'],\r",
                            "  autoLoad: true,\r",
                            "  data: mappingProperties\r",
                            "  });\r",
                            "  */\r",
                            "}"
                        ],
                        "name": "select",
                        "scope": "me"
                    },
                    "designerId": "98d69f33-c1c9-48fb-9cc7-7c8467854579"
                },
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onRelatedObjectCmbChange",
                        "implHandler": [
                            "\r",
                            "var me = this;\r",
                            "var form = field.up('setrelationform');\r",
                            "var rootNode = form.rootNode;\r",
                            "var mapCombo = form.down('#mapPropertyNameCmb');\r",
                            "var relatedObjectName = newValue;//records[0].data.text;\r",
                            "if(newValue == ''){\r",
                            "    var myStore = Ext.create('Ext.data.SimpleStore', {\r",
                            "      fields: ['value', 'text', 'name'],\r",
                            "      autoLoad: true,\r",
                            "      data: []\r",
                            "    });\r",
                            "    mapCombo.bindStore(myStore);\r",
                            "}else{\r",
                            "  \r",
                            "      if (relatedObjectName !== '') {\r",
                            "            var relatedDataObjectNode = rootNode.findChild('text', relatedObjectName);\r",
                            "            var relationConfigPanel = form.getForm();\r",
                            "            var mappingProperties = [];\r",
                            "          \r",
                            "            if (relatedDataObjectNode.childNodes[1]) {\r",
                            "                  keysNode = relatedDataObjectNode.childNodes[0];\r",
                            "                  propertiesNode = relatedDataObjectNode.childNodes[1];\r",
                            "                  var ii = 0;\r",
                            "              \r",
                            "                  keysNode.eachChild(function(child) {\r",
                            "                    mappingProperties.push([ii, child.data.text, child.data.property.columnName]);\r",
                            "                    ii++;\r",
                            "                  });\r",
                            "              \r",
                            "                  propertiesNode.eachChild(function(child) {\r",
                            "                    mappingProperties.push([ii, child.data.text, child.data.property.columnName]);\r",
                            "                    ii++;\r",
                            "                  });\r",
                            "            }\r",
                            "            var mapCombo = form.down('#mapPropertyNameCmb');\r",
                            "            var myStore = Ext.create('Ext.data.SimpleStore', {\r",
                            "              fields: ['value', 'text', 'name'],\r",
                            "              autoLoad: true,\r",
                            "              data: mappingProperties\r",
                            "            });\r",
                            "            mapCombo.bindStore(myStore);\r",
                            "    }\r",
                            "  \r",
                            "}\r",
                            "form.down('#mapPropertyNameCmb').reset();"
                        ],
                        "name": "change",
                        "scope": "me"
                    },
                    "designerId": "a42d5556-ff12-498d-9ec7-1f1e3636ffcd"
                }
            ]
        },
        {
            "type": "Ext.form.field.ComboBox",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|anchor": "100%",
                "itemId": "relationType",
                "margin": "5 0 0 10",
                "fieldLabel": "Relation Type",
                "labelWidth": 160,
                "name": "relationType",
                "allowBlank": false,
                "queryMode": "local",
                "store": [
                    "[['OneToOne', 'OneToOne'], ['OneToMany', 'OneToMany']]\r",
                    ""
                ]
            },
            "configAlternates": {
                "store": "array"
            },
            "designerId": "7db78196-5fb8-4563-a7cb-27a9b32fb020"
        },
        {
            "type": "Ext.form.field.ComboBox",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|anchor": "100%",
                "itemId": "propertyNameCmb",
                "margin": "5 0 0 10",
                "fieldLabel": "Related Property Name",
                "labelWidth": 160,
                "name": "propertyName",
                "queryMode": "local",
                "store": null
            },
            "configAlternates": {
                "store": "array"
            },
            "designerId": "5c0a786e-bf5d-4120-a623-dbe00cd14fa3",
            "cn": [
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onPropertySelect",
                        "implHandler": [
                            ""
                        ],
                        "name": "select",
                        "scope": "me"
                    },
                    "designerId": "8e5ccde5-be98-46c4-8362-8348949db8a8"
                }
            ]
        },
        {
            "type": "Ext.form.field.ComboBox",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "layout|anchor": "100%",
                "itemId": "mapPropertyNameCmb",
                "margin": "5 0 0 10",
                "fieldLabel": "Mapping Property",
                "labelWidth": 160,
                "name": "mapPropertyName",
                "queryMode": "local",
                "store": null
            },
            "configAlternates": {
                "store": "array"
            },
            "designerId": "7134a791-3d07-445c-aec3-a5c0cb5b0fcd",
            "cn": [
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onMapPropertyNameCmbSelect",
                        "implHandler": [
                            ""
                        ],
                        "name": "select",
                        "scope": "me"
                    },
                    "designerId": "18e2ebd2-2d62-42c6-9563-e77138eb3338"
                }
            ]
        },
        {
            "type": "Ext.toolbar.Toolbar",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "dock": "top"
            },
            "designerId": "b6c750d2-40b6-4c87-864f-6ad503b8ace5",
            "cn": [
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "iconCls": "am-apply",
                        "text": "Apply"
                    },
                    "designerId": "c14a3714-4511-4ba7-9408-4986f2942c7a",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onPropertyMapClick",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var form = button.up('setrelationform');\r",
                                    "var grid = form.down('relationPropertyGrid');\r",
                                    "\r",
                                    "var newNodeName = form.getForm().findField('relationshipName').getValue();\r",
                                    "var objectName = form.getForm().findField('objectName').getValue();\r",
                                    "\r",
                                    "var relationTypeCmb = form.down('#relationType');\r",
                                    "var ptropertyCmb = form.down('#propertyNameCmb');\r",
                                    "var mapPropertyCmb = form.down('#mapPropertyNameCmb');\r",
                                    "\r",
                                    "var node = form.node.findChild('text', newNodeName);\r",
                                    "node.set('title', newNodeName);\r",
                                    "\r",
                                    "node.data.relationshipType = relationTypeCmb.getValue();\r",
                                    "node.data.relationshipTypeIndex = relationTypeCmb.store.find('field1',node.data.relationshipType);\r",
                                    "\r",
                                    "var relatedName = form.getForm().findField('relatedObjectName').getValue();\r",
                                    "node.data.relatedObjectName = relatedName;\r",
                                    "node.raw.relatedObjectName = relatedName;\r",
                                    "var propertyMap = [];\r",
                                    "\r",
                                    "/*if(node.data.propertyMap) {\r",
                                    "  for (i = 0; i < node.data.propertyMap.length; i++)\r",
                                    "  propertyMap.push([node.data.propertyMap[i].dataPropertyName, node.data.propertyMap[i].relatedPropertyName]);\r",
                                    "} else {\r",
                                    "  node.data.propertyMap = [];\r",
                                    "  grid.getStore().each(function(record) {\r",
                                    "    node.data.propertyMap.push({'dataPropertyName': record.data.property, 'relatedPropertyName': record.data.relatedProperty});\r",
                                    "  });\r",
                                    "}*/\r",
                                    "\r",
                                    "  node.data.propertyMap = [];\r",
                                    "  grid.getStore().each(function(record) {\r",
                                    "    node.data.propertyMap.push({'dataPropertyName': record.data.property, 'relatedPropertyName': record.data.relatedProperty});\r",
                                    "  });"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "0bbf2328-737a-470e-903e-7d1e3cbe2367"
                        }
                    ]
                },
                {
                    "type": "Ext.toolbar.Spacer",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null
                    },
                    "designerId": "d10df495-eea8-4536-a520-d5e1c6c9ece1"
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "iconCls": "am-edit-clear",
                        "text": "Reset"
                    },
                    "designerId": "208c904a-4ad4-4850-8ca7-d7f437add06b",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onRelationReset",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var form = button.up('setrelationform');\r",
                                    "var grid = form.down('relationPropertyGrid');\r",
                                    "var store = grid.getStore();\r",
                                    "var node = form.node;\r",
                                    "var relationshipName = form.getForm().findField('relationshipName').getValue();\r",
                                    "form.getForm().findField('relatedObjectName').setValue('');  \r",
                                    "form.getForm().findField('relationType').setValue(node.firstChild.raw.relationshipType);\r",
                                    "form.getForm().findField('mapPropertyName').setValue('');\r",
                                    "form.getForm().findField('propertyName').setValue('');\r",
                                    "store.removeAll();\r",
                                    "\r",
                                    "for(var i=0;i<utilsObj.relationGridStore.length;i++){\r",
                                    "  pMap = utilsObj.relationGridStore[i];\r",
                                    "  if(pMap){\r",
                                    "\r",
                                    "    var record = [{\r",
                                    "      'property':  pMap.dataPropertyName,\r",
                                    "      'relatedProperty': pMap.relatedPropertyName\r",
                                    "    }];\r",
                                    "    var exist = store.find('property', pMap.dataPropertyName);\r",
                                    "    if(exist == -1)\r",
                                    "    store.add(record);\r",
                                    "\r",
                                    "  }\r",
                                    "}\r",
                                    "/*node.firstChild.raw.propertyMap = [];\r",
                                    "store.each(function(record) {\r",
                                    "  node.firstChild.raw.propertyMap.push({'dataPropertyName': record.data.property, 'relatedPropertyName': record.data.relatedProperty});\r",
                                    "  if(node.firstChild.data.propertyMap!=undefined) \r",
                                    "  node.firstChild.data.propertyMap.push({'dataPropertyName': record.data.property, 'relatedPropertyName': record.data.relatedProperty});\r",
                                    "\r",
                                    "});*/\r",
                                    "\r",
                                    " node.eachChild(function(node) {\r",
                                    "    if(node.data.text == relationshipName){\r",
                                    "      node.raw.propertyMap = [];\r",
                                    "      store.each(function(record) {\r",
                                    "          node.raw.propertyMap.push({'dataPropertyName': record.data.property, 'relatedPropertyName': record.data.relatedProperty});\r",
                                    "          if(node.data.propertyMap!=undefined) \r",
                                    "          node.data.propertyMap.push({'dataPropertyName': record.data.property, 'relatedPropertyName': record.data.relatedProperty});\r",
                                    "\r",
                                    "\t\t\t\t});\r",
                                    "    }\r",
                                    "  \t\r",
                                    "  });"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "d6787a34-5b9b-4999-9f20-b13ae45ef126"
                        }
                    ]
                }
            ]
        },
        {
            "type": "linkedinstance",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "height": 600,
                "minHeight": null,
                "store": null,
                "layout|anchor": "100%"
            },
            "designerId": "f00a5ee1-8345-4ae4-aa3e-4c7aab9e980e",
            "masterInstanceId": "9ef4132f-28fd-4a87-abdb-e8b4c54c5a6c"
        }
    ]
}