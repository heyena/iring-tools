/*
 * File: Scripts/AM/view/directory/ImportCacheForm.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AM.view.directory.ImportCacheForm', {
  extend: 'Ext.form.Panel',
  alias: 'widget.importcacheform',

  height: 88,
  width: 471,
  bodyPadding: 10,
  header: false,
  title: 'My Form',
  method: 'post',
  url: 'AdapterManager/ImportCache',

  initComponent: function() {
    var me = this;

    me.initialConfig = Ext.apply({
      method: 'post',
      url: 'AdapterManager/ImportCache'
    }, me.initialConfig);

    Ext.applyIf(me, {
      items: [
        {
          xtype: 'textfield',
          anchor: '100%',
          margin: '10 0 0 0',
          fieldLabel: 'Cache URI',
          name: 'cacheUri',
          allowBlank: false
        },
        {
          xtype: 'hiddenfield',
          anchor: '100%',
          name: 'nodeid'
        }
      ],
      dockedItems: [
        {
          xtype: 'toolbar',
          dock: 'bottom',
          layout: {
            pack: 'end',
            type: 'hbox'
          },
          items: [
            {
              xtype: 'button',
              handler: function(button, event) {
                me.onSubmit();
              },
              text: 'Submit'
            },
            {
              xtype: 'button',
              handler: function(button, event) {
                me.onClose();
              },
              text: 'Close'
            }
          ]
        }
      ]
    });

    me.callParent(arguments);
  },

  onSubmit: function() {

    var me = this;
    var win = me.up('window');
    var form = me.getForm();
    var message;
    if(me.getForm().isValid()) {
      me.getForm().submit({
        waitMsg: 'Importing Cache...',
        success: function (response, request) {
          var responseObj = Ext.decode(response.responseText);
          if (responseObj.Level == 0) {
            showDialog(450, 100, 'Import Cache Result', 'Cache refreshed successfully.', Ext.Msg.OK, null);
          }
          else {
            showDialog(500, 160, 'Import Cache Error', responseObj.Messages.join(), Ext.Msg.OK, null);
          }
          win.fireEvent('save', me);
        },
        failure: function (result, request) {
          message = 'Import Cache Error';
          showDialog(400, 100, 'Warning', message, Ext.Msg.OK, null);
        }
      });
    } else {
      message = 'Form is not complete';
      showDialog(400, 100, 'Warning', message, Ext.Msg.OK, null);   
    }

  },

  onClose: function() {
    var me = this;
    var win = me.up('window');
    //me.getForm().reset();
    win.destroy();
  }

});