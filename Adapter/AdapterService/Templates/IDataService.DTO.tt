<#@ template language="C#"#>
<#@ output extension=".cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name=".\bin\iRINGLibrary.dll" #>
<#@ import namespace="org.iringtools.library" #>
<#@ assembly name=".\bin\UtilityLibrary.dll" #>
<#@ import namespace="org.iringtools.utility" #>
<#@ include file=".\Templates\Common.tt" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by IDataService.tt.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.ServiceModel;
using System.ServiceModel.Web;
using org.iringtools.adapter;

namespace <#= adapterNamespace #>
{   
	[ServiceContract(Namespace = "http://ns.iringtools.org/library/adapter")]
	public partial interface IDataService
	{
<#
foreach (GraphMap graphMap in mapping.graphMaps)
{
	string graphName = NameSafe(graphMap.name);
#>
		[OperationContract]
		[WebGet(UriTemplate = "<#= graphName #>/{identifier}")]
		<#= adapterNamespace + "." + graphName #> Get<#= graphName #>REST(string identifier);

		[OperationContract]
		[WebGet(UriTemplate = "<#= graphName #>")]
		Dictionary<string, string> Get<#= graphName #>ListREST();

		[OperationContract]
		<#= adapterNamespace + "." + graphName #>Response Get<#= graphName #>(Identifier identifier);

		[OperationContract]
		<#= adapterNamespace + "." + graphName #>ListResponse Get<#= graphName #>List();    
		
<# 
}
#>
	}
  
	[MessageContract(IsWrapped = true)]
	public class Identifier
	{
		[MessageBodyMember]
		public string value;
	}  
<#
foreach (GraphMap graphMap in mapping.graphMaps)
{
	string graphName = NameSafe(graphMap.name);
	string className = adapterNamespace + "." + graphName;
#>     
	[MessageContract(IsWrapped = true)]
	public class <#= graphName #>Response
	{
		[MessageBodyMember]
		public <#= className #> dto;
	}

	[MessageContract(IsWrapped = true)]
	public class <#= graphName #>ListResponse
	{
		[MessageBodyMember]
		public List<<#= className #>> dtoList;
	}
<# 
}
#>  
}